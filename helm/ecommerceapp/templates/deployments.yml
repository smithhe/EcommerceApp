apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployments.api.name }}
  labels:
    app: {{ .Values.api.selector }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.api.selector }}
  template:
    metadata:
      labels:
        app: {{ .Values.api.selector }}
    spec:
      priorityClassName: high-priority
      imagePullSecrets:
        - name: docker-registry
      containers:
      - name: {{ .Values.deployments.api.container.name }}
        image: "{{ .Values.deployments.api.image.repository }}:{{ .Values.deployments.api.image.tag }}"
        imagePullPolicy: {{ .Values.deployments.api.pullPolicy }}
        ports:
          {{- range .Values.deployments.ui.container.ports }}
          - containerPort: {{ .port }}
            protocol: {{ .protocol }}
          {{- end }}
        resources:
          limits:
            cpu: {{ .Values.deployments.api.resources.limits.cpu }}
            memory: {{ .Values.deployments.api.resources.limits.memory }}
        env:
        - name: Ecommerce_UIUrl
          value: {{ .Values.deployments.api.environment.UiUrl }}
        - name: Ecommerce_Paypal__ReturnBaseUrl
          value: {{ .Values.deployments.api.environment.ApiUrl }}
        - name: Ecommerce_RabbitMQ__Uri
          value: {{ .Values.services.rabbitmq.name }}
        
        - name: Ecommerce_JwtSettings__Key
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.secretName }}
              key: {{ .Values.secrets.keys.EcommerceJwtSettingsKey }}
        
        - name: Ecommerce_Paypal__ClientId
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.secretName }}
              key: {{ .Values.secrets.keys.EcommercePaypalClientId }}
        
        - name: Ecommerce_Paypal__Secret
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.secretName }}
              key: {{ .Values.secrets.keys.EcommercePaypalSecret }}
        
        - name: Ecommerce_RabbitMQ__Username
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.secretName }}
              key: {{ .Values.secrets.keys.EcommerceRabbitMQUsername }}
        
        - name: Ecommerce_RabbitMQ__Password
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.secretName }}
              key: {{ .Values.secrets.keys.EcommerceRabbitMQPassword }}
        
        - name: Ecommerce_ConnectionStrings__datastorage
          valueFrom:
            secretKeyRef:
              name: {{ .Values.connectionString.secretName }}
              key: {{ .Values.connectionString.secretKey }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployments.ui.name }}
  labels:
    app: {{ .Values.ui.selector }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.ui.selector }}
  template:
    metadata:
      labels:
        app: {{ .Values.ui.selector }}
    spec:
      priorityClassName: high-priority
      imagePullSecrets:
        - name: docker-registry
      containers:
      - name: {{ .Values.deployments.ui.container.name }}
        image: "{{ .Values.deployments.ui.image.repository }}:{{ .Values.deployments.ui.image.tag }}"
        imagePullPolicy: {{ .Values.deployments.ui.pullPolicy }}
        ports:
          {{- range .Values.deployments.ui.container.ports }}
          - containerPort: {{ .port }}
            protocol: {{ .protocol }}
          {{- end }}
        resources:
          limits:
            cpu: {{ .Values.deployments.ui.resources.limits.cpu }}
            memory: {{ .Values.deployments.ui.resources.limits.memory }}
        env:
          - name: ASPNETCORE_ENVIRONMENT
            value: {{ .Values.deployments.ui.environment }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployments.worker.name }}
  labels:
    app: {{ .Values.worker.selector }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.worker.selector }}
  template:
    metadata:
      labels:
        app: {{ .Values.worker.selector }}
    spec:
      priorityClassName: high-priority
      imagePullSecrets:
        - name: docker-registry
      containers:
      - name: {{ .Values.deployments.worker.container.name }}
        image: "{{ .Values.deployments.worker.image.repository }}:{{ .Values.deployments.worker.image.tag }}"
        imagePullPolicy: {{ .Values.deployments.ui.pullPolicy }}
        resources:
          limits:
            cpu: {{ .Values.deployments.worker.resources.limits.cpu }}
            memory: {{ .Values.deployments.worker.resources.limits.memory }}
        env:
        - name: Ecommerce_RabbitMQ__Uri
          value: {{ .Values.services.rabbitmq.name }}
        
        - name: Ecommerce_RabbitMQ__Username
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.secretName }}
              key: {{ .Values.secrets.keys.EcommerceRabbitMQUsername }}
        
        - name: Ecommerce_RabbitMQ__Password
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.secretName }}
              key: {{ .Values.secrets.keys.EcommerceRabbitMQPassword }}
        
        - name: Ecommerce_MailSettings__Host
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.secretName }}
              key: {{ .Values.secrets.keys.EcommerceMailSettingsHost }}

        - name: Ecommerce_MailSettings__Port
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.secretName }}
              key: {{ .Values.secrets.keys.EcommerceMailSettingsPort }}

        - name: Ecommerce_MailSettings__UserName
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.secretName }}
              key: {{ .Values.secrets.keys.EcommerceMailSettingsUserName }}
        
        - name: Ecommerce_MailSettings__Password
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.secretName }}
              key: {{ .Values.secrets.keys.EcommerceMailSettingsPassword }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployments.rabbitmq.name }}
  labels:
    app: {{ .Values.rabbitmq.selector }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.rabbitmq.selector }}
  template:
    metadata:
      labels:
        app: {{ .Values.rabbitmq.selector }}
    spec:
      priorityClassName: high-priority
      containers:
      - name: {{ .Values.deployments.rabbitmq.container.name }}
        image: rabbitmq:3-management
        imagePullPolicy: {{ .Values.deployments.rabbitmq.pullPolicy }}
        ports:
          {{- range .Values.deployments.rabbitmq.container.ports }}
          - containerPort: {{ .port }}
            protocol: {{ .protocol }}
          {{- end }}
        resources:
          limits:
            cpu: {{ .Values.deployments.rabbitmq.resources.limits.cpu }}
            memory: {{ .Values.deployments.rabbitmq.resources.limits.memory }}
        env:
        - name: RABBITMQ_DEFAULT_USER 
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.secretName }}
              key: {{ .Values.secrets.keys.EcommerceRabbitMQUsername }}
        - name: RABBITMQ_DEFAULT_PASS 
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.secretName }}
              key: {{ .Values.secrets.keys.EcommerceRabbitMQPassword }}