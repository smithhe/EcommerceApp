{
  "api/Ecommerce.Api.EcommerceLogTextFormatter.html": {
    "href": "api/Ecommerce.Api.EcommerceLogTextFormatter.html",
    "title": "Class EcommerceLogTextFormatter",
    "keywords": "Class EcommerceLogTextFormatter Namespace Ecommerce.Api Assembly Ecommerce.Api.dll public class EcommerceLogTextFormatter : LokiJsonTextFormatter, ITextFormatter Inheritance object LokiJsonTextFormatter EcommerceLogTextFormatter Implements ITextFormatter Inherited Members LokiJsonTextFormatter.RenamingStrategy LokiJsonTextFormatter.ValueFormatter LokiJsonTextFormatter.GetSanitizedPropertyName(string) LokiJsonTextFormatter.SerializeException(TextWriter, Exception, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Format(LogEvent, TextWriter) Format the log event into the output. public override void Format(LogEvent logEvent, TextWriter output) Parameters logEvent LogEvent The event to format. output TextWriter The output."
  },
  "api/Ecommerce.Api.html": {
    "href": "api/Ecommerce.Api.html",
    "title": "Namespace Ecommerce.Api",
    "keywords": "Namespace Ecommerce.Api Classes EcommerceLogTextFormatter"
  },
  "api/Ecommerce.Application.ApplicationServiceRegistration.html": {
    "href": "api/Ecommerce.Application.ApplicationServiceRegistration.html",
    "title": "Class ApplicationServiceRegistration",
    "keywords": "Class ApplicationServiceRegistration Namespace Ecommerce.Application Assembly Ecommerce.Application.dll public static class ApplicationServiceRegistration Inheritance object ApplicationServiceRegistration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddApplicationServices(IServiceCollection, IConfiguration) public static void AddApplicationServices(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection configuration IConfiguration"
  },
  "api/Ecommerce.Application.Features.CartItem.Commands.CreateCartItem.CreateCartItemCommand.html": {
    "href": "api/Ecommerce.Application.Features.CartItem.Commands.CreateCartItem.CreateCartItemCommand.html",
    "title": "Class CreateCartItemCommand",
    "keywords": "Class CreateCartItemCommand Namespace Ecommerce.Application.Features.CartItem.Commands.CreateCartItem Assembly Ecommerce.Application.dll A MediatR.Mediator request for creating a new Ecommerce.Application.Features.CartItem public class CreateCartItemCommand : IRequest<CreateCartItemResponse>, IBaseRequest Inheritance object CreateCartItemCommand Implements IRequest<CreateCartItemResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateCartItemCommand() public CreateCartItemCommand() Properties CartItemToCreate The CartItem to be created public CartItemDto? CartItemToCreate { get; set; } Property Value CartItemDto UserName The User requesting to create the CartItem public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Application.Features.CartItem.Commands.CreateCartItem.CreateCartItemCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.CartItem.Commands.CreateCartItem.CreateCartItemCommandHandler.html",
    "title": "Class CreateCartItemCommandHandler",
    "keywords": "Class CreateCartItemCommandHandler Namespace Ecommerce.Application.Features.CartItem.Commands.CreateCartItem Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for CreateCartItemCommand public class CreateCartItemCommandHandler : IRequestHandler<CreateCartItemCommand, CreateCartItemResponse> Inheritance object CreateCartItemCommandHandler Implements IRequestHandler<CreateCartItemCommand, CreateCartItemResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateCartItemCommandHandler(ILogger<CreateCartItemCommandHandler>, IMapper, ICartItemRepository, IMediator) Initializes a new instance of the CreateCartItemCommandHandler class. public CreateCartItemCommandHandler(ILogger<CreateCartItemCommandHandler> logger, IMapper mapper, ICartItemRepository cartItemRepository, IMediator mediator) Parameters logger ILogger<CreateCartItemCommandHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. cartItemRepository ICartItemRepository The ICartItemRepository instance used for data access for Ecommerce.Application.Features.CartItem entities. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. Methods Handle(CreateCartItemCommand, CancellationToken) Handles the CreateCartItemCommand request public Task<CreateCartItemResponse> Handle(CreateCartItemCommand command, CancellationToken cancellationToken) Parameters command CreateCartItemCommand The CreateCartItemCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<CreateCartItemResponse> A CreateCartItemResponse with Success being true if the Ecommerce.Application.Features.CartItem was created; Success will be false if validation of the command fails or Sql fails to create the Ecommerce.Application.Features.CartItem. Message will contain the message to display to the user. Validation Errors will be populated with errors to present if validation fails. CartItem will contain the new CartItemDto if creation was successful"
  },
  "api/Ecommerce.Application.Features.CartItem.Commands.CreateCartItem.html": {
    "href": "api/Ecommerce.Application.Features.CartItem.Commands.CreateCartItem.html",
    "title": "Namespace Ecommerce.Application.Features.CartItem.Commands.CreateCartItem",
    "keywords": "Namespace Ecommerce.Application.Features.CartItem.Commands.CreateCartItem Classes CreateCartItemCommand A MediatR.Mediator request for creating a new Ecommerce.Application.Features.CartItem CreateCartItemCommandHandler A MediatR.Mediator request handler for CreateCartItemCommand"
  },
  "api/Ecommerce.Application.Features.CartItem.Commands.DeleteCartItem.DeleteCartItemCommand.html": {
    "href": "api/Ecommerce.Application.Features.CartItem.Commands.DeleteCartItem.DeleteCartItemCommand.html",
    "title": "Class DeleteCartItemCommand",
    "keywords": "Class DeleteCartItemCommand Namespace Ecommerce.Application.Features.CartItem.Commands.DeleteCartItem Assembly Ecommerce.Application.dll A MediatR.Mediator request for deleting a Ecommerce.Application.Features.CartItem public class DeleteCartItemCommand : IRequest<DeleteCartItemResponse>, IBaseRequest Inheritance object DeleteCartItemCommand Implements IRequest<DeleteCartItemResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteCartItemCommand() public DeleteCartItemCommand() Properties CartItemToDelete The CartItem to delete public CartItemDto? CartItemToDelete { get; set; } Property Value CartItemDto"
  },
  "api/Ecommerce.Application.Features.CartItem.Commands.DeleteCartItem.DeleteCartItemCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.CartItem.Commands.DeleteCartItem.DeleteCartItemCommandHandler.html",
    "title": "Class DeleteCartItemCommandHandler",
    "keywords": "Class DeleteCartItemCommandHandler Namespace Ecommerce.Application.Features.CartItem.Commands.DeleteCartItem Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for DeleteCartItemCommand public class DeleteCartItemCommandHandler : IRequestHandler<DeleteCartItemCommand, DeleteCartItemResponse> Inheritance object DeleteCartItemCommandHandler Implements IRequestHandler<DeleteCartItemCommand, DeleteCartItemResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteCartItemCommandHandler(ILogger<DeleteCartItemCommandHandler>, IMapper, ICartItemRepository) Initializes a new instance of the DeleteCartItemCommandHandler class. public DeleteCartItemCommandHandler(ILogger<DeleteCartItemCommandHandler> logger, IMapper mapper, ICartItemRepository cartItemRepository) Parameters logger ILogger<DeleteCartItemCommandHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. cartItemRepository ICartItemRepository The ICartItemRepository instance used for data access for Ecommerce.Application.Features.CartItem entities. Methods Handle(DeleteCartItemCommand, CancellationToken) Handles the DeleteCartItemCommand request public Task<DeleteCartItemResponse> Handle(DeleteCartItemCommand command, CancellationToken cancellationToken) Parameters command DeleteCartItemCommand The DeleteCartItemCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<DeleteCartItemResponse> A DeleteCartItemResponse with Success being true if the Ecommerce.Application.Features.CartItem was deleted; Success will be false if no Ecommerce.Application.Features.CartItem is found or validation of the command fails. Message will contain the message to display to the user."
  },
  "api/Ecommerce.Application.Features.CartItem.Commands.DeleteCartItem.html": {
    "href": "api/Ecommerce.Application.Features.CartItem.Commands.DeleteCartItem.html",
    "title": "Namespace Ecommerce.Application.Features.CartItem.Commands.DeleteCartItem",
    "keywords": "Namespace Ecommerce.Application.Features.CartItem.Commands.DeleteCartItem Classes DeleteCartItemCommand A MediatR.Mediator request for deleting a Ecommerce.Application.Features.CartItem DeleteCartItemCommandHandler A MediatR.Mediator request handler for DeleteCartItemCommand"
  },
  "api/Ecommerce.Application.Features.CartItem.Commands.DeleteUserCartItems.DeleteUserCartItemsCommand.html": {
    "href": "api/Ecommerce.Application.Features.CartItem.Commands.DeleteUserCartItems.DeleteUserCartItemsCommand.html",
    "title": "Class DeleteUserCartItemsCommand",
    "keywords": "Class DeleteUserCartItemsCommand Namespace Ecommerce.Application.Features.CartItem.Commands.DeleteUserCartItems Assembly Ecommerce.Application.dll A MediatR.Mediator request for deleting all of a User's Ecommerce.Application.Features.CartItem entities public class DeleteUserCartItemsCommand : IRequest<DeleteUserCartItemsResponse>, IBaseRequest Inheritance object DeleteUserCartItemsCommand Implements IRequest<DeleteUserCartItemsResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteUserCartItemsCommand() public DeleteUserCartItemsCommand() Properties UserId The unique identifier of the User to delete all CartItems for public Guid UserId { get; set; } Property Value Guid"
  },
  "api/Ecommerce.Application.Features.CartItem.Commands.DeleteUserCartItems.DeleteUserCartItemsCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.CartItem.Commands.DeleteUserCartItems.DeleteUserCartItemsCommandHandler.html",
    "title": "Class DeleteUserCartItemsCommandHandler",
    "keywords": "Class DeleteUserCartItemsCommandHandler Namespace Ecommerce.Application.Features.CartItem.Commands.DeleteUserCartItems Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for DeleteUserCartItemsCommand public class DeleteUserCartItemsCommandHandler : IRequestHandler<DeleteUserCartItemsCommand, DeleteUserCartItemsResponse> Inheritance object DeleteUserCartItemsCommandHandler Implements IRequestHandler<DeleteUserCartItemsCommand, DeleteUserCartItemsResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteUserCartItemsCommandHandler(ILogger<DeleteUserCartItemsCommandHandler>, ICartItemRepository) Initializes a new instance of the DeleteUserCartItemsCommandHandler class. public DeleteUserCartItemsCommandHandler(ILogger<DeleteUserCartItemsCommandHandler> logger, ICartItemRepository cartItemRepository) Parameters logger ILogger<DeleteUserCartItemsCommandHandler> The ILogger instance used for logging. cartItemRepository ICartItemRepository The ICartItemRepository instance used for data access for Ecommerce.Application.Features.CartItem entities. Methods Handle(DeleteUserCartItemsCommand, CancellationToken) Handles the DeleteUserCartItemsCommand request public Task<DeleteUserCartItemsResponse> Handle(DeleteUserCartItemsCommand command, CancellationToken cancellationToken) Parameters command DeleteUserCartItemsCommand The DeleteUserCartItemsCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<DeleteUserCartItemsResponse> A DeleteUserCartItemsResponse with Success being true if the Ecommerce.Application.Features.CartItem entities were deleted; Success will be false if no Ecommerce.Application.Features.CartItem entities are found or validation of the command fails. Message will contain the message to display to the user."
  },
  "api/Ecommerce.Application.Features.CartItem.Commands.DeleteUserCartItems.html": {
    "href": "api/Ecommerce.Application.Features.CartItem.Commands.DeleteUserCartItems.html",
    "title": "Namespace Ecommerce.Application.Features.CartItem.Commands.DeleteUserCartItems",
    "keywords": "Namespace Ecommerce.Application.Features.CartItem.Commands.DeleteUserCartItems Classes DeleteUserCartItemsCommand A MediatR.Mediator request for deleting all of a User's Ecommerce.Application.Features.CartItem entities DeleteUserCartItemsCommandHandler A MediatR.Mediator request handler for DeleteUserCartItemsCommand"
  },
  "api/Ecommerce.Application.Features.CartItem.Commands.UpdateCartItem.UpdateCartItemCommand.html": {
    "href": "api/Ecommerce.Application.Features.CartItem.Commands.UpdateCartItem.UpdateCartItemCommand.html",
    "title": "Class UpdateCartItemCommand",
    "keywords": "Class UpdateCartItemCommand Namespace Ecommerce.Application.Features.CartItem.Commands.UpdateCartItem Assembly Ecommerce.Application.dll A MediatR.Mediator request for updating an existing Ecommerce.Application.Features.CartItem public class UpdateCartItemCommand : IRequest<UpdateCartItemResponse>, IBaseRequest Inheritance object UpdateCartItemCommand Implements IRequest<UpdateCartItemResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateCartItemCommand() public UpdateCartItemCommand() Properties CartItemToUpdate The CartItem to update with public CartItemDto? CartItemToUpdate { get; set; } Property Value CartItemDto UserName The User requesting to update the CartItem public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Application.Features.CartItem.Commands.UpdateCartItem.UpdateCartItemCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.CartItem.Commands.UpdateCartItem.UpdateCartItemCommandHandler.html",
    "title": "Class UpdateCartItemCommandHandler",
    "keywords": "Class UpdateCartItemCommandHandler Namespace Ecommerce.Application.Features.CartItem.Commands.UpdateCartItem Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for UpdateCartItemCommand public class UpdateCartItemCommandHandler : IRequestHandler<UpdateCartItemCommand, UpdateCartItemResponse> Inheritance object UpdateCartItemCommandHandler Implements IRequestHandler<UpdateCartItemCommand, UpdateCartItemResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateCartItemCommandHandler(ILogger<UpdateCartItemCommandHandler>, IMapper, ICartItemRepository, IMediator) Initializes a new instance of the UpdateCartItemCommandHandler class. public UpdateCartItemCommandHandler(ILogger<UpdateCartItemCommandHandler> logger, IMapper mapper, ICartItemRepository cartItemRepository, IMediator mediator) Parameters logger ILogger<UpdateCartItemCommandHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. cartItemRepository ICartItemRepository The ICartItemRepository instance used for data access for Ecommerce.Application.Features.CartItem entities. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. Methods Handle(UpdateCartItemCommand, CancellationToken) Handles the UpdateCartItemCommand request public Task<UpdateCartItemResponse> Handle(UpdateCartItemCommand command, CancellationToken cancellationToken) Parameters command UpdateCartItemCommand The UpdateCartItemCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<UpdateCartItemResponse> A UpdateCartItemResponse with Success being true if the Ecommerce.Application.Features.CartItem was updated; Success will be false if no Ecommerce.Application.Features.CartItem is found or validation of the command fails; Message will contain the message to display to the user. Validation Errors will be populated with errors to present if validation fails"
  },
  "api/Ecommerce.Application.Features.CartItem.Commands.UpdateCartItem.html": {
    "href": "api/Ecommerce.Application.Features.CartItem.Commands.UpdateCartItem.html",
    "title": "Namespace Ecommerce.Application.Features.CartItem.Commands.UpdateCartItem",
    "keywords": "Namespace Ecommerce.Application.Features.CartItem.Commands.UpdateCartItem Classes UpdateCartItemCommand A MediatR.Mediator request for updating an existing Ecommerce.Application.Features.CartItem UpdateCartItemCommandHandler A MediatR.Mediator request handler for UpdateCartItemCommand"
  },
  "api/Ecommerce.Application.Features.CartItem.Queries.GetUserCartItems.GetUserCartItemsQuery.html": {
    "href": "api/Ecommerce.Application.Features.CartItem.Queries.GetUserCartItems.GetUserCartItemsQuery.html",
    "title": "Class GetUserCartItemsQuery",
    "keywords": "Class GetUserCartItemsQuery Namespace Ecommerce.Application.Features.CartItem.Queries.GetUserCartItems Assembly Ecommerce.Application.dll A MediatR.Mediator request for retrieving all existing Ecommerce.Application.Features.CartItem entities for an Ecommerce.Application.Features.EcommerceUser public class GetUserCartItemsQuery : IRequest<GetUserCartItemsResponse>, IBaseRequest Inheritance object GetUserCartItemsQuery Implements IRequest<GetUserCartItemsResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetUserCartItemsQuery() public GetUserCartItemsQuery() Properties UserId Id of the Ecommerce.Application.Features.EcommerceUser to find all Ecommerce.Application.Features.CartItem entities for public Guid UserId { get; set; } Property Value Guid"
  },
  "api/Ecommerce.Application.Features.CartItem.Queries.GetUserCartItems.GetUserCartItemsQueryHandler.html": {
    "href": "api/Ecommerce.Application.Features.CartItem.Queries.GetUserCartItems.GetUserCartItemsQueryHandler.html",
    "title": "Class GetUserCartItemsQueryHandler",
    "keywords": "Class GetUserCartItemsQueryHandler Namespace Ecommerce.Application.Features.CartItem.Queries.GetUserCartItems Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for GetUserCartItemsQuery public class GetUserCartItemsQueryHandler : IRequestHandler<GetUserCartItemsQuery, GetUserCartItemsResponse> Inheritance object GetUserCartItemsQueryHandler Implements IRequestHandler<GetUserCartItemsQuery, GetUserCartItemsResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetUserCartItemsQueryHandler(ILogger<GetUserCartItemsQueryHandler>, IMapper, ICartItemRepository) Initializes a new instance of the GetUserCartItemsQueryHandler class. public GetUserCartItemsQueryHandler(ILogger<GetUserCartItemsQueryHandler> logger, IMapper mapper, ICartItemRepository cartItemRepository) Parameters logger ILogger<GetUserCartItemsQueryHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. cartItemRepository ICartItemRepository The ICartItemRepository instance used for data access for Ecommerce.Application.Features.CartItem entities. Methods Handle(GetUserCartItemsQuery, CancellationToken) Handles the GetUserCartItemsQuery request public Task<GetUserCartItemsResponse> Handle(GetUserCartItemsQuery query, CancellationToken cancellationToken) Parameters query GetUserCartItemsQuery The GetUserCartItemsQuery request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<GetUserCartItemsResponse> A GetUserCartItemsResponse with Success being true if any Ecommerce.Application.Features.CartItem entities were found; Success will be false if no Ecommerce.Application.Features.CartItem entities were found. Message will contain the message to display to the user. CartItems will contain all CartItemDto entities or will be empty if none are found or an error occurred."
  },
  "api/Ecommerce.Application.Features.CartItem.Queries.GetUserCartItems.html": {
    "href": "api/Ecommerce.Application.Features.CartItem.Queries.GetUserCartItems.html",
    "title": "Namespace Ecommerce.Application.Features.CartItem.Queries.GetUserCartItems",
    "keywords": "Namespace Ecommerce.Application.Features.CartItem.Queries.GetUserCartItems Classes GetUserCartItemsQuery A MediatR.Mediator request for retrieving all existing Ecommerce.Application.Features.CartItem entities for an Ecommerce.Application.Features.EcommerceUser GetUserCartItemsQueryHandler A MediatR.Mediator request handler for GetUserCartItemsQuery"
  },
  "api/Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html": {
    "href": "api/Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html",
    "title": "Class CreateCategoryCommand",
    "keywords": "Class CreateCategoryCommand Namespace Ecommerce.Application.Features.Category.Commands.CreateCategory Assembly Ecommerce.Application.dll A MediatR.Mediator request for creating a new Ecommerce.Application.Features.Category public class CreateCategoryCommand : IRequest<CreateCategoryResponse>, IBaseRequest Inheritance object CreateCategoryCommand Implements IRequest<CreateCategoryResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateCategoryCommand() public CreateCategoryCommand() Properties CategoryToCreate The Category to be created public CategoryDto? CategoryToCreate { get; set; } Property Value CategoryDto UserName The User requesting to create the Category public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommandHandler.html",
    "title": "Class CreateCategoryCommandHandler",
    "keywords": "Class CreateCategoryCommandHandler Namespace Ecommerce.Application.Features.Category.Commands.CreateCategory Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for CreateCategoryCommand public class CreateCategoryCommandHandler : IRequestHandler<CreateCategoryCommand, CreateCategoryResponse> Inheritance object CreateCategoryCommandHandler Implements IRequestHandler<CreateCategoryCommand, CreateCategoryResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateCategoryCommandHandler(ILogger<CreateCategoryCommandHandler>, IMapper, ICategoryAsyncRepository) Initializes a new instance of the CreateCategoryCommandHandler class. public CreateCategoryCommandHandler(ILogger<CreateCategoryCommandHandler> logger, IMapper mapper, ICategoryAsyncRepository categoryAsyncRepository) Parameters logger ILogger<CreateCategoryCommandHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. categoryAsyncRepository ICategoryAsyncRepository The ICategoryAsyncRepository instance used for data access for Ecommerce.Application.Features.Category entities. Methods Handle(CreateCategoryCommand, CancellationToken) Handles the CreateCategoryCommand request public Task<CreateCategoryResponse> Handle(CreateCategoryCommand command, CancellationToken cancellationToken) Parameters command CreateCategoryCommand The CreateCategoryCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<CreateCategoryResponse> A CreateCategoryResponse with Success being true if the Ecommerce.Application.Features.Category was created; Success will be false if validation of the command fails or Sql fails to create the Ecommerce.Application.Features.Category. Message will contain the message to display to the user. Validation Errors will be populated with errors to present if validation fails. Category will contain the new CategoryDto if creation was successful."
  },
  "api/Ecommerce.Application.Features.Category.Commands.CreateCategory.html": {
    "href": "api/Ecommerce.Application.Features.Category.Commands.CreateCategory.html",
    "title": "Namespace Ecommerce.Application.Features.Category.Commands.CreateCategory",
    "keywords": "Namespace Ecommerce.Application.Features.Category.Commands.CreateCategory Classes CreateCategoryCommand A MediatR.Mediator request for creating a new Ecommerce.Application.Features.Category CreateCategoryCommandHandler A MediatR.Mediator request handler for CreateCategoryCommand"
  },
  "api/Ecommerce.Application.Features.Category.Commands.DeleteCategory.DeleteCategoryCommand.html": {
    "href": "api/Ecommerce.Application.Features.Category.Commands.DeleteCategory.DeleteCategoryCommand.html",
    "title": "Class DeleteCategoryCommand",
    "keywords": "Class DeleteCategoryCommand Namespace Ecommerce.Application.Features.Category.Commands.DeleteCategory Assembly Ecommerce.Application.dll A MediatR.Mediator request for deleting a Ecommerce.Application.Features.Category public class DeleteCategoryCommand : IRequest<DeleteCategoryResponse>, IBaseRequest Inheritance object DeleteCategoryCommand Implements IRequest<DeleteCategoryResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteCategoryCommand() public DeleteCategoryCommand() Properties CategoryToDelete The Category to delete public CategoryDto? CategoryToDelete { get; set; } Property Value CategoryDto"
  },
  "api/Ecommerce.Application.Features.Category.Commands.DeleteCategory.DeleteCategoryCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.Category.Commands.DeleteCategory.DeleteCategoryCommandHandler.html",
    "title": "Class DeleteCategoryCommandHandler",
    "keywords": "Class DeleteCategoryCommandHandler Namespace Ecommerce.Application.Features.Category.Commands.DeleteCategory Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for DeleteCategoryCommand public class DeleteCategoryCommandHandler : IRequestHandler<DeleteCategoryCommand, DeleteCategoryResponse> Inheritance object DeleteCategoryCommandHandler Implements IRequestHandler<DeleteCategoryCommand, DeleteCategoryResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteCategoryCommandHandler(ILogger<DeleteCategoryCommandHandler>, IMapper, ICategoryAsyncRepository) Initializes a new instance of the DeleteCategoryCommandHandler class. public DeleteCategoryCommandHandler(ILogger<DeleteCategoryCommandHandler> logger, IMapper mapper, ICategoryAsyncRepository categoryAsyncRepository) Parameters logger ILogger<DeleteCategoryCommandHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. categoryAsyncRepository ICategoryAsyncRepository The ICategoryAsyncRepository instance used for data access for Ecommerce.Application.Features.Category entities. Methods Handle(DeleteCategoryCommand, CancellationToken) Handles the DeleteCategoryCommand request public Task<DeleteCategoryResponse> Handle(DeleteCategoryCommand command, CancellationToken cancellationToken) Parameters command DeleteCategoryCommand The DeleteCategoryCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<DeleteCategoryResponse> A DeleteCategoryResponse with Success being true if the Ecommerce.Application.Features.Category was deleted; Success will be false if no Ecommerce.Application.Features.Category is found or validation of the command fails. Message will contain the message to display to the user."
  },
  "api/Ecommerce.Application.Features.Category.Commands.DeleteCategory.html": {
    "href": "api/Ecommerce.Application.Features.Category.Commands.DeleteCategory.html",
    "title": "Namespace Ecommerce.Application.Features.Category.Commands.DeleteCategory",
    "keywords": "Namespace Ecommerce.Application.Features.Category.Commands.DeleteCategory Classes DeleteCategoryCommand A MediatR.Mediator request for deleting a Ecommerce.Application.Features.Category DeleteCategoryCommandHandler A MediatR.Mediator request handler for DeleteCategoryCommand"
  },
  "api/Ecommerce.Application.Features.Category.Commands.UpdateCategory.UpdateCategoryCommand.html": {
    "href": "api/Ecommerce.Application.Features.Category.Commands.UpdateCategory.UpdateCategoryCommand.html",
    "title": "Class UpdateCategoryCommand",
    "keywords": "Class UpdateCategoryCommand Namespace Ecommerce.Application.Features.Category.Commands.UpdateCategory Assembly Ecommerce.Application.dll A MediatR.Mediator request for updating an existing Ecommerce.Application.Features.Category public class UpdateCategoryCommand : IRequest<UpdateCategoryResponse>, IBaseRequest Inheritance object UpdateCategoryCommand Implements IRequest<UpdateCategoryResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateCategoryCommand() public UpdateCategoryCommand() Properties CategoryToUpdate The Category to update with public CategoryDto? CategoryToUpdate { get; set; } Property Value CategoryDto UserName The User requesting to update the Category public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Application.Features.Category.Commands.UpdateCategory.UpdateCategoryCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.Category.Commands.UpdateCategory.UpdateCategoryCommandHandler.html",
    "title": "Class UpdateCategoryCommandHandler",
    "keywords": "Class UpdateCategoryCommandHandler Namespace Ecommerce.Application.Features.Category.Commands.UpdateCategory Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for UpdateCategoryCommand public class UpdateCategoryCommandHandler : IRequestHandler<UpdateCategoryCommand, UpdateCategoryResponse> Inheritance object UpdateCategoryCommandHandler Implements IRequestHandler<UpdateCategoryCommand, UpdateCategoryResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateCategoryCommandHandler(ILogger<UpdateCategoryCommandHandler>, IMapper, ICategoryAsyncRepository) Initializes a new instance of the UpdateCategoryCommandHandler class. public UpdateCategoryCommandHandler(ILogger<UpdateCategoryCommandHandler> logger, IMapper mapper, ICategoryAsyncRepository categoryAsyncRepository) Parameters logger ILogger<UpdateCategoryCommandHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. categoryAsyncRepository ICategoryAsyncRepository The ICategoryAsyncRepository instance used for data access for Ecommerce.Application.Features.Category entities. Methods Handle(UpdateCategoryCommand, CancellationToken) Handles the UpdateCategoryCommand request public Task<UpdateCategoryResponse> Handle(UpdateCategoryCommand command, CancellationToken cancellationToken) Parameters command UpdateCategoryCommand The UpdateCategoryCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<UpdateCategoryResponse> A UpdateCategoryResponse with Success being true if the Ecommerce.Application.Features.Category was updated; Success will be false if no Ecommerce.Application.Features.Category is found or validation of the command fails. Message will contain the message to display to the user. Validation Errors will be populated with errors to present if validation fails."
  },
  "api/Ecommerce.Application.Features.Category.Commands.UpdateCategory.html": {
    "href": "api/Ecommerce.Application.Features.Category.Commands.UpdateCategory.html",
    "title": "Namespace Ecommerce.Application.Features.Category.Commands.UpdateCategory",
    "keywords": "Namespace Ecommerce.Application.Features.Category.Commands.UpdateCategory Classes UpdateCategoryCommand A MediatR.Mediator request for updating an existing Ecommerce.Application.Features.Category UpdateCategoryCommandHandler A MediatR.Mediator request handler for UpdateCategoryCommand"
  },
  "api/Ecommerce.Application.Features.Category.Queries.GetAllCategories.GetAllCategoriesQuery.html": {
    "href": "api/Ecommerce.Application.Features.Category.Queries.GetAllCategories.GetAllCategoriesQuery.html",
    "title": "Class GetAllCategoriesQuery",
    "keywords": "Class GetAllCategoriesQuery Namespace Ecommerce.Application.Features.Category.Queries.GetAllCategories Assembly Ecommerce.Application.dll A MediatR.Mediator request for retrieving all existing Ecommerce.Application.Features.Category entities public class GetAllCategoriesQuery : IRequest<GetAllCategoriesResponse>, IBaseRequest Inheritance object GetAllCategoriesQuery Implements IRequest<GetAllCategoriesResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetAllCategoriesQuery() public GetAllCategoriesQuery()"
  },
  "api/Ecommerce.Application.Features.Category.Queries.GetAllCategories.GetAllCategoriesQueryHandler.html": {
    "href": "api/Ecommerce.Application.Features.Category.Queries.GetAllCategories.GetAllCategoriesQueryHandler.html",
    "title": "Class GetAllCategoriesQueryHandler",
    "keywords": "Class GetAllCategoriesQueryHandler Namespace Ecommerce.Application.Features.Category.Queries.GetAllCategories Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for GetAllCategoriesQuery public class GetAllCategoriesQueryHandler : IRequestHandler<GetAllCategoriesQuery, GetAllCategoriesResponse> Inheritance object GetAllCategoriesQueryHandler Implements IRequestHandler<GetAllCategoriesQuery, GetAllCategoriesResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetAllCategoriesQueryHandler(ILogger<GetAllCategoriesQueryHandler>, IMapper, ICategoryAsyncRepository) Initializes a new instance of the GetAllCategoriesQueryHandler class. public GetAllCategoriesQueryHandler(ILogger<GetAllCategoriesQueryHandler> logger, IMapper mapper, ICategoryAsyncRepository categoryAsyncRepository) Parameters logger ILogger<GetAllCategoriesQueryHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. categoryAsyncRepository ICategoryAsyncRepository The ICategoryAsyncRepository instance used for data access for Ecommerce.Application.Features.Category entities. Methods Handle(GetAllCategoriesQuery, CancellationToken) Handles the GetAllCategoriesQuery request public Task<GetAllCategoriesResponse> Handle(GetAllCategoriesQuery query, CancellationToken cancellationToken) Parameters query GetAllCategoriesQuery The GetAllCategoriesQuery request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<GetAllCategoriesResponse> A GetCategoryByIdResponse with Success being true if any Ecommerce.Application.Features.Category entities were found; Success will be false if no Ecommerce.Application.Features.Category entities were found. Message will contain the message to display to the user. Categories will contain all Ecommerce.Application.Features.Category entities or will be empty if none are found."
  },
  "api/Ecommerce.Application.Features.Category.Queries.GetAllCategories.html": {
    "href": "api/Ecommerce.Application.Features.Category.Queries.GetAllCategories.html",
    "title": "Namespace Ecommerce.Application.Features.Category.Queries.GetAllCategories",
    "keywords": "Namespace Ecommerce.Application.Features.Category.Queries.GetAllCategories Classes GetAllCategoriesQuery A MediatR.Mediator request for retrieving all existing Ecommerce.Application.Features.Category entities GetAllCategoriesQueryHandler A MediatR.Mediator request handler for GetAllCategoriesQuery"
  },
  "api/Ecommerce.Application.Features.Category.Queries.GetCategoryById.GetCategoryByIdQuery.html": {
    "href": "api/Ecommerce.Application.Features.Category.Queries.GetCategoryById.GetCategoryByIdQuery.html",
    "title": "Class GetCategoryByIdQuery",
    "keywords": "Class GetCategoryByIdQuery Namespace Ecommerce.Application.Features.Category.Queries.GetCategoryById Assembly Ecommerce.Application.dll A MediatR.Mediator request for retrieving an existing Ecommerce.Application.Features.Category by its Id public class GetCategoryByIdQuery : IRequest<GetCategoryByIdResponse>, IBaseRequest Inheritance object GetCategoryByIdQuery Implements IRequest<GetCategoryByIdResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetCategoryByIdQuery() public GetCategoryByIdQuery() Properties Id The unique identifier of the Ecommerce.Application.Features.Category to retrieve public int Id { get; set; } Property Value int"
  },
  "api/Ecommerce.Application.Features.Category.Queries.GetCategoryById.GetCategoryByIdQueryHandler.html": {
    "href": "api/Ecommerce.Application.Features.Category.Queries.GetCategoryById.GetCategoryByIdQueryHandler.html",
    "title": "Class GetCategoryByIdQueryHandler",
    "keywords": "Class GetCategoryByIdQueryHandler Namespace Ecommerce.Application.Features.Category.Queries.GetCategoryById Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for GetCategoryByIdQuery public class GetCategoryByIdQueryHandler : IRequestHandler<GetCategoryByIdQuery, GetCategoryByIdResponse> Inheritance object GetCategoryByIdQueryHandler Implements IRequestHandler<GetCategoryByIdQuery, GetCategoryByIdResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetCategoryByIdQueryHandler(ILogger<GetCategoryByIdQueryHandler>, IMapper, ICategoryAsyncRepository) Initializes a new instance of the GetCategoryByIdQueryHandler class. public GetCategoryByIdQueryHandler(ILogger<GetCategoryByIdQueryHandler> logger, IMapper mapper, ICategoryAsyncRepository categoryAsyncRepository) Parameters logger ILogger<GetCategoryByIdQueryHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. categoryAsyncRepository ICategoryAsyncRepository The ICategoryAsyncRepository instance used for data access for Ecommerce.Application.Features.Category entities. Methods Handle(GetCategoryByIdQuery, CancellationToken) Handles the GetCategoryByIdQuery request public Task<GetCategoryByIdResponse> Handle(GetCategoryByIdQuery query, CancellationToken cancellationToken) Parameters query GetCategoryByIdQuery The GetCategoryByIdQuery request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<GetCategoryByIdResponse> A GetCategoryByIdResponse with Success being true if the Ecommerce.Application.Features.Category was found; Success will be false if no Ecommerce.Application.Features.Category with the specified ID is found. Message will contain the message to display to the user."
  },
  "api/Ecommerce.Application.Features.Category.Queries.GetCategoryById.html": {
    "href": "api/Ecommerce.Application.Features.Category.Queries.GetCategoryById.html",
    "title": "Namespace Ecommerce.Application.Features.Category.Queries.GetCategoryById",
    "keywords": "Namespace Ecommerce.Application.Features.Category.Queries.GetCategoryById Classes GetCategoryByIdQuery A MediatR.Mediator request for retrieving an existing Ecommerce.Application.Features.Category by its Id GetCategoryByIdQueryHandler A MediatR.Mediator request handler for GetCategoryByIdQuery"
  },
  "api/Ecommerce.Application.Features.EcommerceUser.Commands.ConfirmEmail.ConfirmEmailCommand.html": {
    "href": "api/Ecommerce.Application.Features.EcommerceUser.Commands.ConfirmEmail.ConfirmEmailCommand.html",
    "title": "Class ConfirmEmailCommand",
    "keywords": "Class ConfirmEmailCommand Namespace Ecommerce.Application.Features.EcommerceUser.Commands.ConfirmEmail Assembly Ecommerce.Application.dll A MediatR.Mediator command for confirming a User's email address public class ConfirmEmailCommand : IRequest<ConfirmEmailResponse>, IBaseRequest Inheritance object ConfirmEmailCommand Implements IRequest<ConfirmEmailResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConfirmEmailCommand() public ConfirmEmailCommand() Properties Token The token used to confirm the User's email address public string Token { get; set; } Property Value string UserId The unique identifier of the User to confirm public string UserId { get; set; } Property Value string"
  },
  "api/Ecommerce.Application.Features.EcommerceUser.Commands.ConfirmEmail.ConfirmEmailCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.EcommerceUser.Commands.ConfirmEmail.ConfirmEmailCommandHandler.html",
    "title": "Class ConfirmEmailCommandHandler",
    "keywords": "Class ConfirmEmailCommandHandler Namespace Ecommerce.Application.Features.EcommerceUser.Commands.ConfirmEmail Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for ConfirmEmailCommand public class ConfirmEmailCommandHandler : IRequestHandler<ConfirmEmailCommand, ConfirmEmailResponse> Inheritance object ConfirmEmailCommandHandler Implements IRequestHandler<ConfirmEmailCommand, ConfirmEmailResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConfirmEmailCommandHandler(ILogger<ConfirmEmailCommandHandler>, IAuthenticationService) Initializes a new instance of the ConfirmEmailCommandHandler class. public ConfirmEmailCommandHandler(ILogger<ConfirmEmailCommandHandler> logger, IAuthenticationService authenticationService) Parameters logger ILogger<ConfirmEmailCommandHandler> The ILogger instance used for logging. authenticationService IAuthenticationService The IAuthenticationService instance used for updating the user. Methods Handle(ConfirmEmailCommand, CancellationToken) Handles the ConfirmEmailCommand command public Task<ConfirmEmailResponse> Handle(ConfirmEmailCommand command, CancellationToken cancellationToken) Parameters command ConfirmEmailCommand The ConfirmEmailCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<ConfirmEmailResponse> Returns the ConfirmEmailResponse generated from the IAuthenticationService"
  },
  "api/Ecommerce.Application.Features.EcommerceUser.Commands.ConfirmEmail.html": {
    "href": "api/Ecommerce.Application.Features.EcommerceUser.Commands.ConfirmEmail.html",
    "title": "Namespace Ecommerce.Application.Features.EcommerceUser.Commands.ConfirmEmail",
    "keywords": "Namespace Ecommerce.Application.Features.EcommerceUser.Commands.ConfirmEmail Classes ConfirmEmailCommand A MediatR.Mediator command for confirming a User's email address ConfirmEmailCommandHandler A MediatR.Mediator request handler for ConfirmEmailCommand"
  },
  "api/Ecommerce.Application.Features.EcommerceUser.Commands.RegisterEcommerceUser.RegisterEcommerceUserCommand.html": {
    "href": "api/Ecommerce.Application.Features.EcommerceUser.Commands.RegisterEcommerceUser.RegisterEcommerceUserCommand.html",
    "title": "Class RegisterEcommerceUserCommand",
    "keywords": "Class RegisterEcommerceUserCommand Namespace Ecommerce.Application.Features.EcommerceUser.Commands.RegisterEcommerceUser Assembly Ecommerce.Application.dll A MediatR.Mediator request for registering a new User public class RegisterEcommerceUserCommand : IRequest<CreateUserResponse>, IBaseRequest Inheritance object RegisterEcommerceUserCommand Implements IRequest<CreateUserResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RegisterEcommerceUserCommand() public RegisterEcommerceUserCommand() Properties CreateUserRequest The CreateUserRequest object that contains the User information to register public CreateUserRequest CreateUserRequest { get; set; } Property Value CreateUserRequest LinkUrl The link to combine with the token to confirm the User's email address public string LinkUrl { get; set; } Property Value string"
  },
  "api/Ecommerce.Application.Features.EcommerceUser.Commands.RegisterEcommerceUser.RegisterEcommerceUserCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.EcommerceUser.Commands.RegisterEcommerceUser.RegisterEcommerceUserCommandHandler.html",
    "title": "Class RegisterEcommerceUserCommandHandler",
    "keywords": "Class RegisterEcommerceUserCommandHandler Namespace Ecommerce.Application.Features.EcommerceUser.Commands.RegisterEcommerceUser Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for a RegisterEcommerceUserCommand public class RegisterEcommerceUserCommandHandler : IRequestHandler<RegisterEcommerceUserCommand, CreateUserResponse> Inheritance object RegisterEcommerceUserCommandHandler Implements IRequestHandler<RegisterEcommerceUserCommand, CreateUserResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RegisterEcommerceUserCommandHandler(ILogger<RegisterEcommerceUserCommandHandler>, IAuthenticationService, IConfiguration, IBus) Initializes a new instance of the RegisterEcommerceUserCommandHandler class. public RegisterEcommerceUserCommandHandler(ILogger<RegisterEcommerceUserCommandHandler> logger, IAuthenticationService authenticationService, IConfiguration configuration, IBus bus) Parameters logger ILogger<RegisterEcommerceUserCommandHandler> The ILogger instance used for logging. authenticationService IAuthenticationService The IAuthenticationService instance used for registering the User configuration IConfiguration The IConfiguration instance used for configuration settings. bus IBus The MassTransit.IBus instance used for publishing messages Methods Handle(RegisterEcommerceUserCommand, CancellationToken) Handles the RegisterEcommerceUserCommand command public Task<CreateUserResponse> Handle(RegisterEcommerceUserCommand command, CancellationToken cancellationToken) Parameters command RegisterEcommerceUserCommand The RegisterEcommerceUserCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<CreateUserResponse> Returns the CreateUserResponse generated from the IAuthenticationService"
  },
  "api/Ecommerce.Application.Features.EcommerceUser.Commands.RegisterEcommerceUser.html": {
    "href": "api/Ecommerce.Application.Features.EcommerceUser.Commands.RegisterEcommerceUser.html",
    "title": "Namespace Ecommerce.Application.Features.EcommerceUser.Commands.RegisterEcommerceUser",
    "keywords": "Namespace Ecommerce.Application.Features.EcommerceUser.Commands.RegisterEcommerceUser Classes RegisterEcommerceUserCommand A MediatR.Mediator request for registering a new User RegisterEcommerceUserCommandHandler A MediatR.Mediator request handler for a RegisterEcommerceUserCommand"
  },
  "api/Ecommerce.Application.Features.EcommerceUser.Commands.UpdateEcommerceUser.UpdateEcommerceUserCommand.html": {
    "href": "api/Ecommerce.Application.Features.EcommerceUser.Commands.UpdateEcommerceUser.UpdateEcommerceUserCommand.html",
    "title": "Class UpdateEcommerceUserCommand",
    "keywords": "Class UpdateEcommerceUserCommand Namespace Ecommerce.Application.Features.EcommerceUser.Commands.UpdateEcommerceUser Assembly Ecommerce.Application.dll A MediatR.Mediator request for updating an existing Ecommerce.Application.Features.EcommerceUser public class UpdateEcommerceUserCommand : IRequest<UpdateEcommerceUserResponse>, IBaseRequest Inheritance object UpdateEcommerceUserCommand Implements IRequest<UpdateEcommerceUserResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateEcommerceUserCommand() public UpdateEcommerceUserCommand() Properties Email The Email of the User to update public string? Email { get; set; } Property Value string FirstName The First Name of the User to update public string? FirstName { get; set; } Property Value string LastName The Last Name of the User to update public string? LastName { get; set; } Property Value string UserId The unique identifier of the User to update public Guid UserId { get; set; } Property Value Guid UserName The UserName of the User to update public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Application.Features.EcommerceUser.Commands.UpdateEcommerceUser.UpdateEcommerceUserCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.EcommerceUser.Commands.UpdateEcommerceUser.UpdateEcommerceUserCommandHandler.html",
    "title": "Class UpdateEcommerceUserCommandHandler",
    "keywords": "Class UpdateEcommerceUserCommandHandler Namespace Ecommerce.Application.Features.EcommerceUser.Commands.UpdateEcommerceUser Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for UpdateEcommerceUserCommand public class UpdateEcommerceUserCommandHandler : IRequestHandler<UpdateEcommerceUserCommand, UpdateEcommerceUserResponse> Inheritance object UpdateEcommerceUserCommandHandler Implements IRequestHandler<UpdateEcommerceUserCommand, UpdateEcommerceUserResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateEcommerceUserCommandHandler(ILogger<UpdateEcommerceUserCommandHandler>, IAuthenticationService) Initializes a new instance of the UpdateEcommerceUserCommandHandler class. public UpdateEcommerceUserCommandHandler(ILogger<UpdateEcommerceUserCommandHandler> logger, IAuthenticationService authenticationService) Parameters logger ILogger<UpdateEcommerceUserCommandHandler> The ILogger instance used for logging. authenticationService IAuthenticationService The IAuthenticationService instance used for updating the user. Methods Handle(UpdateEcommerceUserCommand, CancellationToken) Handles the UpdateEcommerceUserCommand request public Task<UpdateEcommerceUserResponse> Handle(UpdateEcommerceUserCommand command, CancellationToken cancellationToken) Parameters command UpdateEcommerceUserCommand The UpdateEcommerceUserCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<UpdateEcommerceUserResponse> A UpdateEcommerceUserResponse with Success being true if the Ecommerce.Application.Features.EcommerceUser was updated; Success will be false if no Ecommerce.Application.Features.EcommerceUser is found or validation of the command fails. Message will contain the message to display to the user. Validation Errors will be populated with errors to present if validation fails"
  },
  "api/Ecommerce.Application.Features.EcommerceUser.Commands.UpdateEcommerceUser.html": {
    "href": "api/Ecommerce.Application.Features.EcommerceUser.Commands.UpdateEcommerceUser.html",
    "title": "Namespace Ecommerce.Application.Features.EcommerceUser.Commands.UpdateEcommerceUser",
    "keywords": "Namespace Ecommerce.Application.Features.EcommerceUser.Commands.UpdateEcommerceUser Classes UpdateEcommerceUserCommand A MediatR.Mediator request for updating an existing Ecommerce.Application.Features.EcommerceUser UpdateEcommerceUserCommandHandler A MediatR.Mediator request handler for UpdateEcommerceUserCommand"
  },
  "api/Ecommerce.Application.Features.EcommerceUser.Commands.UpdatePassword.UpdatePasswordCommand.html": {
    "href": "api/Ecommerce.Application.Features.EcommerceUser.Commands.UpdatePassword.UpdatePasswordCommand.html",
    "title": "Class UpdatePasswordCommand",
    "keywords": "Class UpdatePasswordCommand Namespace Ecommerce.Application.Features.EcommerceUser.Commands.UpdatePassword Assembly Ecommerce.Application.dll A MediatR.Mediator request for updating an existing Ecommerce.Application.Features.EcommerceUser's password public class UpdatePasswordCommand : IRequest<UpdatePasswordResponse>, IBaseRequest Inheritance object UpdatePasswordCommand Implements IRequest<UpdatePasswordResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdatePasswordCommand() public UpdatePasswordCommand() Properties CurrentPassword The current password of the User public string? CurrentPassword { get; set; } Property Value string NewPassword The new password to use public string? NewPassword { get; set; } Property Value string UserName The UserName of the User to update the password for public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Application.Features.EcommerceUser.Commands.UpdatePassword.UpdatePasswordCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.EcommerceUser.Commands.UpdatePassword.UpdatePasswordCommandHandler.html",
    "title": "Class UpdatePasswordCommandHandler",
    "keywords": "Class UpdatePasswordCommandHandler Namespace Ecommerce.Application.Features.EcommerceUser.Commands.UpdatePassword Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for UpdatePasswordCommand public class UpdatePasswordCommandHandler : IRequestHandler<UpdatePasswordCommand, UpdatePasswordResponse> Inheritance object UpdatePasswordCommandHandler Implements IRequestHandler<UpdatePasswordCommand, UpdatePasswordResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdatePasswordCommandHandler(ILogger<UpdatePasswordCommandHandler>, IAuthenticationService) Initializes a new instance of the UpdatePasswordCommandHandler class. public UpdatePasswordCommandHandler(ILogger<UpdatePasswordCommandHandler> logger, IAuthenticationService authenticationService) Parameters logger ILogger<UpdatePasswordCommandHandler> The ILogger instance used for logging. authenticationService IAuthenticationService The IAuthenticationService instance used for updating the user. Methods Handle(UpdatePasswordCommand, CancellationToken) Handles the UpdatePasswordCommand request public Task<UpdatePasswordResponse> Handle(UpdatePasswordCommand command, CancellationToken cancellationToken) Parameters command UpdatePasswordCommand The UpdatePasswordCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<UpdatePasswordResponse> A UpdateEcommerceUserResponse with Success being true if the Ecommerce.Application.Features.EcommerceUser's password was updated; Success will be false if no Ecommerce.Application.Features.EcommerceUser is found or validation of the command fails. Message will contain the error to display if Success is false; Validation Errors will be populated with errors to present if validation fails"
  },
  "api/Ecommerce.Application.Features.EcommerceUser.Commands.UpdatePassword.html": {
    "href": "api/Ecommerce.Application.Features.EcommerceUser.Commands.UpdatePassword.html",
    "title": "Namespace Ecommerce.Application.Features.EcommerceUser.Commands.UpdatePassword",
    "keywords": "Namespace Ecommerce.Application.Features.EcommerceUser.Commands.UpdatePassword Classes UpdatePasswordCommand A MediatR.Mediator request for updating an existing Ecommerce.Application.Features.EcommerceUser's password UpdatePasswordCommandHandler A MediatR.Mediator request handler for UpdatePasswordCommand"
  },
  "api/Ecommerce.Application.Features.Order.Commands.AddPayPalRequestId.AddPayPalRequestIdCommand.html": {
    "href": "api/Ecommerce.Application.Features.Order.Commands.AddPayPalRequestId.AddPayPalRequestIdCommand.html",
    "title": "Class AddPayPalRequestIdCommand",
    "keywords": "Class AddPayPalRequestIdCommand Namespace Ecommerce.Application.Features.Order.Commands.AddPayPalRequestId Assembly Ecommerce.Application.dll A MediatR.Mediator request for adding a PayPal Request Id to an Ecommerce.Application.Features.Order public class AddPayPalRequestIdCommand : IRequest<bool>, IBaseRequest Inheritance object AddPayPalRequestIdCommand Implements IRequest<bool> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AddPayPalRequestIdCommand() public AddPayPalRequestIdCommand() Properties OrderId The Id of the Order to add the PayPal Request Id to public int OrderId { get; set; } Property Value int PayPalRequestId The PayPal Request Id to add to the Order public Guid PayPalRequestId { get; set; } Property Value Guid"
  },
  "api/Ecommerce.Application.Features.Order.Commands.AddPayPalRequestId.AddPayPalRequestIdCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.Order.Commands.AddPayPalRequestId.AddPayPalRequestIdCommandHandler.html",
    "title": "Class AddPayPalRequestIdCommandHandler",
    "keywords": "Class AddPayPalRequestIdCommandHandler Namespace Ecommerce.Application.Features.Order.Commands.AddPayPalRequestId Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for AddPayPalRequestIdCommand public class AddPayPalRequestIdCommandHandler : IRequestHandler<AddPayPalRequestIdCommand, bool> Inheritance object AddPayPalRequestIdCommandHandler Implements IRequestHandler<AddPayPalRequestIdCommand, bool> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AddPayPalRequestIdCommandHandler(ILogger<AddPayPalRequestIdCommandHandler>, IMediator) Initializes a new instance of the AddPayPalRequestIdCommand class. public AddPayPalRequestIdCommandHandler(ILogger<AddPayPalRequestIdCommandHandler> logger, IMediator mediator) Parameters logger ILogger<AddPayPalRequestIdCommandHandler> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. Methods Handle(AddPayPalRequestIdCommand, CancellationToken) Handles the AddPayPalRequestIdCommand request public Task<bool> Handle(AddPayPalRequestIdCommand command, CancellationToken cancellationToken) Parameters command AddPayPalRequestIdCommand The AddPayPalRequestIdCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<bool> True if the PayPal RequestId was added to the Ecommerce.Application.Features.Order successfully; False if the update fails for any reason"
  },
  "api/Ecommerce.Application.Features.Order.Commands.AddPayPalRequestId.html": {
    "href": "api/Ecommerce.Application.Features.Order.Commands.AddPayPalRequestId.html",
    "title": "Namespace Ecommerce.Application.Features.Order.Commands.AddPayPalRequestId",
    "keywords": "Namespace Ecommerce.Application.Features.Order.Commands.AddPayPalRequestId Classes AddPayPalRequestIdCommand A MediatR.Mediator request for adding a PayPal Request Id to an Ecommerce.Application.Features.Order AddPayPalRequestIdCommandHandler A MediatR.Mediator request handler for AddPayPalRequestIdCommand"
  },
  "api/Ecommerce.Application.Features.Order.Commands.CreateOrder.CreateOrderCommand.html": {
    "href": "api/Ecommerce.Application.Features.Order.Commands.CreateOrder.CreateOrderCommand.html",
    "title": "Class CreateOrderCommand",
    "keywords": "Class CreateOrderCommand Namespace Ecommerce.Application.Features.Order.Commands.CreateOrder Assembly Ecommerce.Application.dll A MediatR.Mediator request for creating a new Ecommerce.Application.Features.Order public class CreateOrderCommand : IRequest<CreateOrderResponse>, IBaseRequest Inheritance object CreateOrderCommand Implements IRequest<CreateOrderResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateOrderCommand() public CreateOrderCommand() Properties CartItems The items in the cart to create the order from public IEnumerable<CartItemDto>? CartItems { get; set; } Property Value IEnumerable<CartItemDto> UserId The Id of the User requesting to create the Order public Guid? UserId { get; set; } Property Value Guid? UserName The User requesting to create the Order public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Application.Features.Order.Commands.CreateOrder.CreateOrderCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.Order.Commands.CreateOrder.CreateOrderCommandHandler.html",
    "title": "Class CreateOrderCommandHandler",
    "keywords": "Class CreateOrderCommandHandler Namespace Ecommerce.Application.Features.Order.Commands.CreateOrder Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for CreateOrderCommand public class CreateOrderCommandHandler : IRequestHandler<CreateOrderCommand, CreateOrderResponse> Inheritance object CreateOrderCommandHandler Implements IRequestHandler<CreateOrderCommand, CreateOrderResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateOrderCommandHandler(ILogger<CreateOrderCommandHandler>, IMapper, IMediator, IOrderAsyncRepository) Initializes a new instance of the CreateOrderCommandHandler class. public CreateOrderCommandHandler(ILogger<CreateOrderCommandHandler> logger, IMapper mapper, IMediator mediator, IOrderAsyncRepository orderAsyncRepository) Parameters logger ILogger<CreateOrderCommandHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. orderAsyncRepository IOrderAsyncRepository The IOrderAsyncRepository instance used for data access for Ecommerce.Application.Features.Order entities. Methods Handle(CreateOrderCommand, CancellationToken) Handles the CreateOrderCommand request public Task<CreateOrderResponse> Handle(CreateOrderCommand command, CancellationToken cancellationToken) Parameters command CreateOrderCommand The CreateOrderCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<CreateOrderResponse> A CreateOrderResponse with Success being true if the Ecommerce.Application.Features.Order was created; Success will be false if validation of the command fails or Sql fails to create the Ecommerce.Application.Features.Order. Message will contain the message to display to the user. Validation Errors will be populated with errors to present if validation fails. Order will contain the new OrderDto if creation was successful."
  },
  "api/Ecommerce.Application.Features.Order.Commands.CreateOrder.html": {
    "href": "api/Ecommerce.Application.Features.Order.Commands.CreateOrder.html",
    "title": "Namespace Ecommerce.Application.Features.Order.Commands.CreateOrder",
    "keywords": "Namespace Ecommerce.Application.Features.Order.Commands.CreateOrder Classes CreateOrderCommand A MediatR.Mediator request for creating a new Ecommerce.Application.Features.Order CreateOrderCommandHandler A MediatR.Mediator request handler for CreateOrderCommand"
  },
  "api/Ecommerce.Application.Features.Order.Commands.DeleteOrder.DeleteOrderCommand.html": {
    "href": "api/Ecommerce.Application.Features.Order.Commands.DeleteOrder.DeleteOrderCommand.html",
    "title": "Class DeleteOrderCommand",
    "keywords": "Class DeleteOrderCommand Namespace Ecommerce.Application.Features.Order.Commands.DeleteOrder Assembly Ecommerce.Application.dll A MediatR.Mediator request for deleting an Ecommerce Order public class DeleteOrderCommand : IRequest<DeleteOrderResponse>, IBaseRequest Inheritance object DeleteOrderCommand Implements IRequest<DeleteOrderResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteOrderCommand() public DeleteOrderCommand() Properties Order The Order to be deleted public OrderDto? Order { get; set; } Property Value OrderDto"
  },
  "api/Ecommerce.Application.Features.Order.Commands.DeleteOrder.DeleteOrderCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.Order.Commands.DeleteOrder.DeleteOrderCommandHandler.html",
    "title": "Class DeleteOrderCommandHandler",
    "keywords": "Class DeleteOrderCommandHandler Namespace Ecommerce.Application.Features.Order.Commands.DeleteOrder Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for DeleteOrderCommand public class DeleteOrderCommandHandler : IRequestHandler<DeleteOrderCommand, DeleteOrderResponse> Inheritance object DeleteOrderCommandHandler Implements IRequestHandler<DeleteOrderCommand, DeleteOrderResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteOrderCommandHandler(ILogger<DeleteOrderCommandHandler>, IMapper, IOrderAsyncRepository) Initializes a new instance of the DeleteOrderCommandHandler class. public DeleteOrderCommandHandler(ILogger<DeleteOrderCommandHandler> logger, IMapper mapper, IOrderAsyncRepository orderAsyncRepository) Parameters logger ILogger<DeleteOrderCommandHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. orderAsyncRepository IOrderAsyncRepository The IOrderAsyncRepository instance used for data access for Ecommerce.Application.Features.Order entities. Methods Handle(DeleteOrderCommand, CancellationToken) Handles the DeleteOrderCommand request public Task<DeleteOrderResponse> Handle(DeleteOrderCommand command, CancellationToken cancellationToken) Parameters command DeleteOrderCommand The DeleteOrderCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<DeleteOrderResponse> A DeleteOrderResponse with Success being true if the Ecommerce.Application.Features.Order was deleted; Success will be false if no Ecommerce.Application.Features.Order is found or validation of the command fails. Message will contain the message to display to the user."
  },
  "api/Ecommerce.Application.Features.Order.Commands.DeleteOrder.html": {
    "href": "api/Ecommerce.Application.Features.Order.Commands.DeleteOrder.html",
    "title": "Namespace Ecommerce.Application.Features.Order.Commands.DeleteOrder",
    "keywords": "Namespace Ecommerce.Application.Features.Order.Commands.DeleteOrder Classes DeleteOrderCommand A MediatR.Mediator request for deleting an Ecommerce Order DeleteOrderCommandHandler A MediatR.Mediator request handler for DeleteOrderCommand"
  },
  "api/Ecommerce.Application.Features.Order.Commands.UpdateOrder.UpdateOrderCommand.html": {
    "href": "api/Ecommerce.Application.Features.Order.Commands.UpdateOrder.UpdateOrderCommand.html",
    "title": "Class UpdateOrderCommand",
    "keywords": "Class UpdateOrderCommand Namespace Ecommerce.Application.Features.Order.Commands.UpdateOrder Assembly Ecommerce.Application.dll A MediatR.Mediator request for updating an existing Ecommerce.Application.Features.Order public class UpdateOrderCommand : IRequest<UpdateOrderResponse>, IBaseRequest Inheritance object UpdateOrderCommand Implements IRequest<UpdateOrderResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateOrderCommand() public UpdateOrderCommand() Properties OrderToUpdate The Order to update with public OrderDto? OrderToUpdate { get; set; } Property Value OrderDto UserName The User requesting to update the Order public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Application.Features.Order.Commands.UpdateOrder.UpdateOrderCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.Order.Commands.UpdateOrder.UpdateOrderCommandHandler.html",
    "title": "Class UpdateOrderCommandHandler",
    "keywords": "Class UpdateOrderCommandHandler Namespace Ecommerce.Application.Features.Order.Commands.UpdateOrder Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for UpdateOrderCommand public class UpdateOrderCommandHandler : IRequestHandler<UpdateOrderCommand, UpdateOrderResponse> Inheritance object UpdateOrderCommandHandler Implements IRequestHandler<UpdateOrderCommand, UpdateOrderResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateOrderCommandHandler(ILogger<UpdateOrderCommandHandler>, IMapper, IOrderAsyncRepository) Initializes a new instance of the UpdateOrderCommandHandler class. public UpdateOrderCommandHandler(ILogger<UpdateOrderCommandHandler> logger, IMapper mapper, IOrderAsyncRepository orderAsyncRepository) Parameters logger ILogger<UpdateOrderCommandHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. orderAsyncRepository IOrderAsyncRepository The IOrderAsyncRepository instance used for data access for Ecommerce.Application.Features.Order entities. Methods Handle(UpdateOrderCommand, CancellationToken) Handles the UpdateOrderCommand request public Task<UpdateOrderResponse> Handle(UpdateOrderCommand command, CancellationToken cancellationToken) Parameters command UpdateOrderCommand The UpdateOrderCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<UpdateOrderResponse> A UpdateOrderResponse with Success being true if the Ecommerce.Application.Features.Order was updated; Success will be false if no Ecommerce.Application.Features.Order is found or validation of the command fails. Message will contain the message to display to the user. Validation Errors will be populated with errors to present if validation fails."
  },
  "api/Ecommerce.Application.Features.Order.Commands.UpdateOrder.html": {
    "href": "api/Ecommerce.Application.Features.Order.Commands.UpdateOrder.html",
    "title": "Namespace Ecommerce.Application.Features.Order.Commands.UpdateOrder",
    "keywords": "Namespace Ecommerce.Application.Features.Order.Commands.UpdateOrder Classes UpdateOrderCommand A MediatR.Mediator request for updating an existing Ecommerce.Application.Features.Order UpdateOrderCommandHandler A MediatR.Mediator request handler for UpdateOrderCommand"
  },
  "api/Ecommerce.Application.Features.Order.Queries.GetAllOrdersByUserId.GetAllOrdersByUserIdQuery.html": {
    "href": "api/Ecommerce.Application.Features.Order.Queries.GetAllOrdersByUserId.GetAllOrdersByUserIdQuery.html",
    "title": "Class GetAllOrdersByUserIdQuery",
    "keywords": "Class GetAllOrdersByUserIdQuery Namespace Ecommerce.Application.Features.Order.Queries.GetAllOrdersByUserId Assembly Ecommerce.Application.dll A MediatR.Mediator request for retrieving all Ecommerce.Application.Features.Order entities for a User public class GetAllOrdersByUserIdQuery : IRequest<GetAllOrdersByUserIdResponse>, IBaseRequest Inheritance object GetAllOrdersByUserIdQuery Implements IRequest<GetAllOrdersByUserIdResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetAllOrdersByUserIdQuery() public GetAllOrdersByUserIdQuery() Properties UserId Id of the Ecommerce.Application.Features.EcommerceUser to find all Ecommerce.Application.Features.Order entities for public Guid UserId { get; set; } Property Value Guid"
  },
  "api/Ecommerce.Application.Features.Order.Queries.GetAllOrdersByUserId.GetAllOrdersByUserIdQueryHandler.html": {
    "href": "api/Ecommerce.Application.Features.Order.Queries.GetAllOrdersByUserId.GetAllOrdersByUserIdQueryHandler.html",
    "title": "Class GetAllOrdersByUserIdQueryHandler",
    "keywords": "Class GetAllOrdersByUserIdQueryHandler Namespace Ecommerce.Application.Features.Order.Queries.GetAllOrdersByUserId Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for GetAllOrdersByUserIdQuery public class GetAllOrdersByUserIdQueryHandler : IRequestHandler<GetAllOrdersByUserIdQuery, GetAllOrdersByUserIdResponse> Inheritance object GetAllOrdersByUserIdQueryHandler Implements IRequestHandler<GetAllOrdersByUserIdQuery, GetAllOrdersByUserIdResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetAllOrdersByUserIdQueryHandler(ILogger<GetAllOrdersByUserIdQueryHandler>, IMapper, IOrderAsyncRepository) Initializes a new instance of the GetAllOrdersByUserIdQueryHandler class. public GetAllOrdersByUserIdQueryHandler(ILogger<GetAllOrdersByUserIdQueryHandler> logger, IMapper mapper, IOrderAsyncRepository orderAsyncRepository) Parameters logger ILogger<GetAllOrdersByUserIdQueryHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. orderAsyncRepository IOrderAsyncRepository The IOrderAsyncRepository instance used for data access for Ecommerce.Application.Features.Order entities. Methods Handle(GetAllOrdersByUserIdQuery, CancellationToken) Handles the GetAllOrdersByUserIdQuery request public Task<GetAllOrdersByUserIdResponse> Handle(GetAllOrdersByUserIdQuery query, CancellationToken cancellationToken) Parameters query GetAllOrdersByUserIdQuery The GetAllOrdersByUserIdQuery request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<GetAllOrdersByUserIdResponse> A GetAllOrdersByUserIdResponse with Success being true if any Ecommerce.Application.Features.Order entities were found; Success will be false if no Ecommerce.Application.Features.Order entities were found. Message will contain the message to display to the user. Orders will contain all Ecommerce.Application.Features.Order entities or will be empty if none are found or an error occurred."
  },
  "api/Ecommerce.Application.Features.Order.Queries.GetAllOrdersByUserId.html": {
    "href": "api/Ecommerce.Application.Features.Order.Queries.GetAllOrdersByUserId.html",
    "title": "Namespace Ecommerce.Application.Features.Order.Queries.GetAllOrdersByUserId",
    "keywords": "Namespace Ecommerce.Application.Features.Order.Queries.GetAllOrdersByUserId Classes GetAllOrdersByUserIdQuery A MediatR.Mediator request for retrieving all Ecommerce.Application.Features.Order entities for a User GetAllOrdersByUserIdQueryHandler A MediatR.Mediator request handler for GetAllOrdersByUserIdQuery"
  },
  "api/Ecommerce.Application.Features.Order.Queries.GetOrderAfterSuccessfulCheckout.GetOrderAfterSuccessfulCheckoutQuery.html": {
    "href": "api/Ecommerce.Application.Features.Order.Queries.GetOrderAfterSuccessfulCheckout.GetOrderAfterSuccessfulCheckoutQuery.html",
    "title": "Class GetOrderAfterSuccessfulCheckoutQuery",
    "keywords": "Class GetOrderAfterSuccessfulCheckoutQuery Namespace Ecommerce.Application.Features.Order.Queries.GetOrderAfterSuccessfulCheckout Assembly Ecommerce.Application.dll A MediatR.Mediator request to get an Order after a successful checkout public class GetOrderAfterSuccessfulCheckoutQuery : IRequest<GetOrderAfterSuccessfulCheckoutResponse>, IBaseRequest Inheritance object GetOrderAfterSuccessfulCheckoutQuery Implements IRequest<GetOrderAfterSuccessfulCheckoutResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetOrderAfterSuccessfulCheckoutQuery() public GetOrderAfterSuccessfulCheckoutQuery() Properties Id The unique identifier of the Order to retrieve public int Id { get; set; } Property Value int"
  },
  "api/Ecommerce.Application.Features.Order.Queries.GetOrderAfterSuccessfulCheckout.GetOrderAfterSuccessfulCheckoutQueryHandler.html": {
    "href": "api/Ecommerce.Application.Features.Order.Queries.GetOrderAfterSuccessfulCheckout.GetOrderAfterSuccessfulCheckoutQueryHandler.html",
    "title": "Class GetOrderAfterSuccessfulCheckoutQueryHandler",
    "keywords": "Class GetOrderAfterSuccessfulCheckoutQueryHandler Namespace Ecommerce.Application.Features.Order.Queries.GetOrderAfterSuccessfulCheckout Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for GetOrderAfterSuccessfulCheckoutQuery public class GetOrderAfterSuccessfulCheckoutQueryHandler : IRequestHandler<GetOrderAfterSuccessfulCheckoutQuery, GetOrderAfterSuccessfulCheckoutResponse> Inheritance object GetOrderAfterSuccessfulCheckoutQueryHandler Implements IRequestHandler<GetOrderAfterSuccessfulCheckoutQuery, GetOrderAfterSuccessfulCheckoutResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetOrderAfterSuccessfulCheckoutQueryHandler(ILogger<GetOrderAfterSuccessfulCheckoutQueryHandler>, IMediator) Initializes a new instance of the GetOrderAfterSuccessfulCheckoutQueryHandler class. public GetOrderAfterSuccessfulCheckoutQueryHandler(ILogger<GetOrderAfterSuccessfulCheckoutQueryHandler> logger, IMediator mediator) Parameters logger ILogger<GetOrderAfterSuccessfulCheckoutQueryHandler> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. Methods Handle(GetOrderAfterSuccessfulCheckoutQuery, CancellationToken) Handles the GetOrderAfterSuccessfulCheckoutQuery request public Task<GetOrderAfterSuccessfulCheckoutResponse> Handle(GetOrderAfterSuccessfulCheckoutQuery query, CancellationToken cancellationToken) Parameters query GetOrderAfterSuccessfulCheckoutQuery The GetOrderAfterSuccessfulCheckoutQuery request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<GetOrderAfterSuccessfulCheckoutResponse> Returns a GetOrderAfterSuccessfulCheckoutResponse with Success being true if the Order was found and the status was updated to processing; Success will be false if the Order was not found or the status was not updated to processing; Message will contain the message to display to the user."
  },
  "api/Ecommerce.Application.Features.Order.Queries.GetOrderAfterSuccessfulCheckout.html": {
    "href": "api/Ecommerce.Application.Features.Order.Queries.GetOrderAfterSuccessfulCheckout.html",
    "title": "Namespace Ecommerce.Application.Features.Order.Queries.GetOrderAfterSuccessfulCheckout",
    "keywords": "Namespace Ecommerce.Application.Features.Order.Queries.GetOrderAfterSuccessfulCheckout Classes GetOrderAfterSuccessfulCheckoutQuery A MediatR.Mediator request to get an Order after a successful checkout GetOrderAfterSuccessfulCheckoutQueryHandler A MediatR.Mediator request handler for GetOrderAfterSuccessfulCheckoutQuery"
  },
  "api/Ecommerce.Application.Features.Order.Queries.GetOrderById.GetOrderByIdQuery.html": {
    "href": "api/Ecommerce.Application.Features.Order.Queries.GetOrderById.GetOrderByIdQuery.html",
    "title": "Class GetOrderByIdQuery",
    "keywords": "Class GetOrderByIdQuery Namespace Ecommerce.Application.Features.Order.Queries.GetOrderById Assembly Ecommerce.Application.dll A MediatR.Mediator request for retrieving an existing Ecommerce.Application.Features.Order by its Id public class GetOrderByIdQuery : IRequest<GetOrderByIdResponse>, IBaseRequest Inheritance object GetOrderByIdQuery Implements IRequest<GetOrderByIdResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetOrderByIdQuery() public GetOrderByIdQuery() Properties Id The unique identifier of the Ecommerce.Application.Features.Order to retrieve public int Id { get; set; } Property Value int"
  },
  "api/Ecommerce.Application.Features.Order.Queries.GetOrderById.GetOrderByIdQueryHandler.html": {
    "href": "api/Ecommerce.Application.Features.Order.Queries.GetOrderById.GetOrderByIdQueryHandler.html",
    "title": "Class GetOrderByIdQueryHandler",
    "keywords": "Class GetOrderByIdQueryHandler Namespace Ecommerce.Application.Features.Order.Queries.GetOrderById Assembly Ecommerce.Application.dll public class GetOrderByIdQueryHandler : IRequestHandler<GetOrderByIdQuery, GetOrderByIdResponse> Inheritance object GetOrderByIdQueryHandler Implements IRequestHandler<GetOrderByIdQuery, GetOrderByIdResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetOrderByIdQueryHandler(ILogger<GetOrderByIdQueryHandler>, IMapper, IMediator, IOrderAsyncRepository) Initializes a new instance of the GetOrderByIdQueryHandler class. public GetOrderByIdQueryHandler(ILogger<GetOrderByIdQueryHandler> logger, IMapper mapper, IMediator mediator, IOrderAsyncRepository orderAsyncRepository) Parameters logger ILogger<GetOrderByIdQueryHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. orderAsyncRepository IOrderAsyncRepository The IOrderAsyncRepository instance used for data access for Ecommerce.Application.Features.Order entities. Methods Handle(GetOrderByIdQuery, CancellationToken) Handles the GetOrderByIdQuery request public Task<GetOrderByIdResponse> Handle(GetOrderByIdQuery query, CancellationToken cancellationToken) Parameters query GetOrderByIdQuery The GetOrderByIdQuery request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<GetOrderByIdResponse> A GetOrderByIdResponse with Success being true if the Ecommerce.Application.Features.Order was found; Success will be false if no Ecommerce.Application.Features.Order with the specified ID is found. Message will contain the message to display to the user."
  },
  "api/Ecommerce.Application.Features.Order.Queries.GetOrderById.html": {
    "href": "api/Ecommerce.Application.Features.Order.Queries.GetOrderById.html",
    "title": "Namespace Ecommerce.Application.Features.Order.Queries.GetOrderById",
    "keywords": "Namespace Ecommerce.Application.Features.Order.Queries.GetOrderById Classes GetOrderByIdQuery A MediatR.Mediator request for retrieving an existing Ecommerce.Application.Features.Order by its Id GetOrderByIdQueryHandler"
  },
  "api/Ecommerce.Application.Features.OrderItem.Commands.CreateOrderItem.CreateOrderItemCommand.html": {
    "href": "api/Ecommerce.Application.Features.OrderItem.Commands.CreateOrderItem.CreateOrderItemCommand.html",
    "title": "Class CreateOrderItemCommand",
    "keywords": "Class CreateOrderItemCommand Namespace Ecommerce.Application.Features.OrderItem.Commands.CreateOrderItem Assembly Ecommerce.Application.dll A MediatR.Mediator request for creating a new Ecommerce.Application.Features.OrderItem public class CreateOrderItemCommand : IRequest<CreateOrderItemResponse>, IBaseRequest Inheritance object CreateOrderItemCommand Implements IRequest<CreateOrderItemResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateOrderItemCommand() public CreateOrderItemCommand() Properties OrderItemToCreate The OrderItem to be created public OrderItemDto OrderItemToCreate { get; set; } Property Value OrderItemDto UserName The User requesting to create the OrderItem public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Application.Features.OrderItem.Commands.CreateOrderItem.CreateOrderItemCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.OrderItem.Commands.CreateOrderItem.CreateOrderItemCommandHandler.html",
    "title": "Class CreateOrderItemCommandHandler",
    "keywords": "Class CreateOrderItemCommandHandler Namespace Ecommerce.Application.Features.OrderItem.Commands.CreateOrderItem Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for CreateOrderItemCommand public class CreateOrderItemCommandHandler : IRequestHandler<CreateOrderItemCommand, CreateOrderItemResponse> Inheritance object CreateOrderItemCommandHandler Implements IRequestHandler<CreateOrderItemCommand, CreateOrderItemResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateOrderItemCommandHandler(ILogger<CreateOrderItemCommandHandler>, IMapper, IOrderItemAsyncRepository, IMediator) Initializes a new instance of the CreateOrderItemCommandHandler class. public CreateOrderItemCommandHandler(ILogger<CreateOrderItemCommandHandler> logger, IMapper mapper, IOrderItemAsyncRepository orderItemAsyncRepository, IMediator mediator) Parameters logger ILogger<CreateOrderItemCommandHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. orderItemAsyncRepository IOrderItemAsyncRepository The IOrderItemAsyncRepository instance used for data access for Ecommerce.Application.Features.OrderItem entities. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. Methods Handle(CreateOrderItemCommand, CancellationToken) Handles the CreateOrderItemCommand request public Task<CreateOrderItemResponse> Handle(CreateOrderItemCommand command, CancellationToken cancellationToken) Parameters command CreateOrderItemCommand The CreateOrderItemCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<CreateOrderItemResponse> A CreateOrderItemResponse with Success being true if the Ecommerce.Application.Features.Order was created; Success will be false if validation of the command fails or Sql fails to create the Ecommerce.Application.Features.Order. Message will contain an error message if Success is false. Validation Errors will be populated with errors to present if validation fails. OrderItem will contain the new OrderItemDto if creation was successful."
  },
  "api/Ecommerce.Application.Features.OrderItem.Commands.CreateOrderItem.html": {
    "href": "api/Ecommerce.Application.Features.OrderItem.Commands.CreateOrderItem.html",
    "title": "Namespace Ecommerce.Application.Features.OrderItem.Commands.CreateOrderItem",
    "keywords": "Namespace Ecommerce.Application.Features.OrderItem.Commands.CreateOrderItem Classes CreateOrderItemCommand A MediatR.Mediator request for creating a new Ecommerce.Application.Features.OrderItem CreateOrderItemCommandHandler A MediatR.Mediator request handler for CreateOrderItemCommand"
  },
  "api/Ecommerce.Application.Features.OrderItem.Queries.GetAllOrderItemsByOrderId.GetAllOrderItemsByOrderIdQuery.html": {
    "href": "api/Ecommerce.Application.Features.OrderItem.Queries.GetAllOrderItemsByOrderId.GetAllOrderItemsByOrderIdQuery.html",
    "title": "Class GetAllOrderItemsByOrderIdQuery",
    "keywords": "Class GetAllOrderItemsByOrderIdQuery Namespace Ecommerce.Application.Features.OrderItem.Queries.GetAllOrderItemsByOrderId Assembly Ecommerce.Application.dll A MediatR.Mediator request for retrieving all existing Ecommerce.Application.Features.OrderItem entities for an Ecommerce.Application.Features.Order public class GetAllOrderItemsByOrderIdQuery : IRequest<GetAllOrderItemsByOrderIdResponse>, IBaseRequest Inheritance object GetAllOrderItemsByOrderIdQuery Implements IRequest<GetAllOrderItemsByOrderIdResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetAllOrderItemsByOrderIdQuery() public GetAllOrderItemsByOrderIdQuery() Properties OrderId Id of the Ecommerce.Application.Features.Order to find all Ecommerce.Application.Features.OrderItem entities for public int OrderId { get; set; } Property Value int"
  },
  "api/Ecommerce.Application.Features.OrderItem.Queries.GetAllOrderItemsByOrderId.GetAllOrderItemsByOrderIdQueryHandler.html": {
    "href": "api/Ecommerce.Application.Features.OrderItem.Queries.GetAllOrderItemsByOrderId.GetAllOrderItemsByOrderIdQueryHandler.html",
    "title": "Class GetAllOrderItemsByOrderIdQueryHandler",
    "keywords": "Class GetAllOrderItemsByOrderIdQueryHandler Namespace Ecommerce.Application.Features.OrderItem.Queries.GetAllOrderItemsByOrderId Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for GetAllOrderItemsByOrderIdQuery public class GetAllOrderItemsByOrderIdQueryHandler : IRequestHandler<GetAllOrderItemsByOrderIdQuery, GetAllOrderItemsByOrderIdResponse> Inheritance object GetAllOrderItemsByOrderIdQueryHandler Implements IRequestHandler<GetAllOrderItemsByOrderIdQuery, GetAllOrderItemsByOrderIdResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetAllOrderItemsByOrderIdQueryHandler(ILogger<GetAllOrderItemsByOrderIdQueryHandler>, IMapper, IOrderItemAsyncRepository) Initializes a new instance of the GetAllOrderItemsByOrderIdQueryHandler class. public GetAllOrderItemsByOrderIdQueryHandler(ILogger<GetAllOrderItemsByOrderIdQueryHandler> logger, IMapper mapper, IOrderItemAsyncRepository orderItemAsyncRepository) Parameters logger ILogger<GetAllOrderItemsByOrderIdQueryHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. orderItemAsyncRepository IOrderItemAsyncRepository The IOrderItemAsyncRepository instance used for data access for Ecommerce.Application.Features.OrderItem entities. Methods Handle(GetAllOrderItemsByOrderIdQuery, CancellationToken) Handles the GetAllOrderItemsByOrderIdQuery request public Task<GetAllOrderItemsByOrderIdResponse> Handle(GetAllOrderItemsByOrderIdQuery query, CancellationToken cancellationToken) Parameters query GetAllOrderItemsByOrderIdQuery The GetAllOrderItemsByOrderIdQuery request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<GetAllOrderItemsByOrderIdResponse> A GetAllOrderItemsByOrderIdResponse with Success being true if any Ecommerce.Application.Features.OrderItem entities were found; Success will be false if no Ecommerce.Application.Features.OrderItem entities were found. Message will contain an error message if Success is false. OrderItems will contain all Ecommerce.Application.Features.OrderItem entities or will be empty if none are found."
  },
  "api/Ecommerce.Application.Features.OrderItem.Queries.GetAllOrderItemsByOrderId.html": {
    "href": "api/Ecommerce.Application.Features.OrderItem.Queries.GetAllOrderItemsByOrderId.html",
    "title": "Namespace Ecommerce.Application.Features.OrderItem.Queries.GetAllOrderItemsByOrderId",
    "keywords": "Namespace Ecommerce.Application.Features.OrderItem.Queries.GetAllOrderItemsByOrderId Classes GetAllOrderItemsByOrderIdQuery A MediatR.Mediator request for retrieving all existing Ecommerce.Application.Features.OrderItem entities for an Ecommerce.Application.Features.Order GetAllOrderItemsByOrderIdQueryHandler A MediatR.Mediator request handler for GetAllOrderItemsByOrderIdQuery"
  },
  "api/Ecommerce.Application.Features.PayPal.Commands.CancelPayPalOrder.CancelPayPalOrderCommand.html": {
    "href": "api/Ecommerce.Application.Features.PayPal.Commands.CancelPayPalOrder.CancelPayPalOrderCommand.html",
    "title": "Class CancelPayPalOrderCommand",
    "keywords": "Class CancelPayPalOrderCommand Namespace Ecommerce.Application.Features.PayPal.Commands.CancelPayPalOrder Assembly Ecommerce.Application.dll A MediatR.Mediator request for cancelling an Ecommerce Order using PayPal as the payment method public class CancelPayPalOrderCommand : IRequest<bool>, IBaseRequest Inheritance object CancelPayPalOrderCommand Implements IRequest<bool> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CancelPayPalOrderCommand() public CancelPayPalOrderCommand() Properties ReturnKey The return key from the PayPal cancel return public string ReturnKey { get; set; } Property Value string"
  },
  "api/Ecommerce.Application.Features.PayPal.Commands.CancelPayPalOrder.CancelPayPalOrderCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.PayPal.Commands.CancelPayPalOrder.CancelPayPalOrderCommandHandler.html",
    "title": "Class CancelPayPalOrderCommandHandler",
    "keywords": "Class CancelPayPalOrderCommandHandler Namespace Ecommerce.Application.Features.PayPal.Commands.CancelPayPalOrder Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for CancelPayPalOrderCommand public class CancelPayPalOrderCommandHandler : IRequestHandler<CancelPayPalOrderCommand, bool> Inheritance object CancelPayPalOrderCommandHandler Implements IRequestHandler<CancelPayPalOrderCommand, bool> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CancelPayPalOrderCommandHandler(ILogger<CancelPayPalOrderCommandHandler>, IMediator) Initializes a new instance of the CancelPayPalOrderCommandHandler class. public CancelPayPalOrderCommandHandler(ILogger<CancelPayPalOrderCommandHandler> logger, IMediator mediator) Parameters logger ILogger<CancelPayPalOrderCommandHandler> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. Methods Handle(CancelPayPalOrderCommand, CancellationToken) Handles the CancelPayPalOrderCommand command public Task<bool> Handle(CancelPayPalOrderCommand command, CancellationToken cancellationToken) Parameters command CancelPayPalOrderCommand The CancelPayPalOrderCommand command to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<bool> Returns true if the Ecommerce Order and the PayPal Order was successfully cancelled Returns false if the Ecommerce Order or the PayPal Order was not successfully cancelled"
  },
  "api/Ecommerce.Application.Features.PayPal.Commands.CancelPayPalOrder.html": {
    "href": "api/Ecommerce.Application.Features.PayPal.Commands.CancelPayPalOrder.html",
    "title": "Namespace Ecommerce.Application.Features.PayPal.Commands.CancelPayPalOrder",
    "keywords": "Namespace Ecommerce.Application.Features.PayPal.Commands.CancelPayPalOrder Classes CancelPayPalOrderCommand A MediatR.Mediator request for cancelling an Ecommerce Order using PayPal as the payment method CancelPayPalOrderCommandHandler A MediatR.Mediator request handler for CancelPayPalOrderCommand"
  },
  "api/Ecommerce.Application.Features.PayPal.Commands.CreatePayPalOrder.CreatePayPalOrderCommand.html": {
    "href": "api/Ecommerce.Application.Features.PayPal.Commands.CreatePayPalOrder.CreatePayPalOrderCommand.html",
    "title": "Class CreatePayPalOrderCommand",
    "keywords": "Class CreatePayPalOrderCommand Namespace Ecommerce.Application.Features.PayPal.Commands.CreatePayPalOrder Assembly Ecommerce.Application.dll A MediatR.Mediator request for creating a new PayPal Order public class CreatePayPalOrderCommand : IRequest<CreatePayPalOrderResponse>, IBaseRequest Inheritance object CreatePayPalOrderCommand Implements IRequest<CreatePayPalOrderResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreatePayPalOrderCommand() public CreatePayPalOrderCommand() Properties Order The internal Ecommerce order to create a PayPal Order for public OrderDto Order { get; set; } Property Value OrderDto"
  },
  "api/Ecommerce.Application.Features.PayPal.Commands.CreatePayPalOrder.CreatePayPalOrderCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.PayPal.Commands.CreatePayPalOrder.CreatePayPalOrderCommandHandler.html",
    "title": "Class CreatePayPalOrderCommandHandler",
    "keywords": "Class CreatePayPalOrderCommandHandler Namespace Ecommerce.Application.Features.PayPal.Commands.CreatePayPalOrder Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for CreatePayPalOrderCommand public class CreatePayPalOrderCommandHandler : IRequestHandler<CreatePayPalOrderCommand, CreatePayPalOrderResponse> Inheritance object CreatePayPalOrderCommandHandler Implements IRequestHandler<CreatePayPalOrderCommand, CreatePayPalOrderResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreatePayPalOrderCommandHandler(ILogger<CreatePayPalOrderCommandHandler>, IMediator, IPaypalClientService) Initializes a new instance of the CreatePayPalOrderCommandHandler class. public CreatePayPalOrderCommandHandler(ILogger<CreatePayPalOrderCommandHandler> logger, IMediator mediator, IPaypalClientService paypalClientService) Parameters logger ILogger<CreatePayPalOrderCommandHandler> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. paypalClientService IPaypalClientService The IPaypalClientService instance for handling PayPal Api Requests Methods Handle(CreatePayPalOrderCommand, CancellationToken) Handles the CreatePayPalOrderCommand command public Task<CreatePayPalOrderResponse> Handle(CreatePayPalOrderCommand command, CancellationToken cancellationToken) Parameters command CreatePayPalOrderCommand The CreatePayPalOrderCommand command to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<CreatePayPalOrderResponse> Success will be false if validation of the command fails. Message will contain the message to display to the user. RedirectUrl will contain the url to redirect the user to in the UI to complete the PayPal Order."
  },
  "api/Ecommerce.Application.Features.PayPal.Commands.CreatePayPalOrder.html": {
    "href": "api/Ecommerce.Application.Features.PayPal.Commands.CreatePayPalOrder.html",
    "title": "Namespace Ecommerce.Application.Features.PayPal.Commands.CreatePayPalOrder",
    "keywords": "Namespace Ecommerce.Application.Features.PayPal.Commands.CreatePayPalOrder Classes CreatePayPalOrderCommand A MediatR.Mediator request for creating a new PayPal Order CreatePayPalOrderCommandHandler A MediatR.Mediator request handler for CreatePayPalOrderCommand"
  },
  "api/Ecommerce.Application.Features.PayPal.Commands.CreatePayPalReturnKey.CreatePayPalReturnKeyCommand.html": {
    "href": "api/Ecommerce.Application.Features.PayPal.Commands.CreatePayPalReturnKey.CreatePayPalReturnKeyCommand.html",
    "title": "Class CreatePayPalReturnKeyCommand",
    "keywords": "Class CreatePayPalReturnKeyCommand Namespace Ecommerce.Application.Features.PayPal.Commands.CreatePayPalReturnKey Assembly Ecommerce.Application.dll A MediatR.Mediator request for creating a return key for a PayPal order public class CreatePayPalReturnKeyCommand : IRequest<string?>, IBaseRequest Inheritance object CreatePayPalReturnKeyCommand Implements IRequest<string> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreatePayPalReturnKeyCommand() public CreatePayPalReturnKeyCommand() Properties OrderId The Id of the Order to create the return key for public int OrderId { get; set; } Property Value int"
  },
  "api/Ecommerce.Application.Features.PayPal.Commands.CreatePayPalReturnKey.CreatePayPalReturnKeyCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.PayPal.Commands.CreatePayPalReturnKey.CreatePayPalReturnKeyCommandHandler.html",
    "title": "Class CreatePayPalReturnKeyCommandHandler",
    "keywords": "Class CreatePayPalReturnKeyCommandHandler Namespace Ecommerce.Application.Features.PayPal.Commands.CreatePayPalReturnKey Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for CreatePayPalReturnKeyCommand public class CreatePayPalReturnKeyCommandHandler : IRequestHandler<CreatePayPalReturnKeyCommand, string?> Inheritance object CreatePayPalReturnKeyCommandHandler Implements IRequestHandler<CreatePayPalReturnKeyCommand, string> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreatePayPalReturnKeyCommandHandler(ILogger<CreatePayPalReturnKeyCommandHandler>, IMediator, IOrderKeyRepository) Initializes a new instance of the CreatePayPalReturnKeyCommandHandler class. public CreatePayPalReturnKeyCommandHandler(ILogger<CreatePayPalReturnKeyCommandHandler> logger, IMediator mediator, IOrderKeyRepository orderKeyRepository) Parameters logger ILogger<CreatePayPalReturnKeyCommandHandler> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. orderKeyRepository IOrderKeyRepository The IOrderKeyRepository instance used for data access for OrderKey entities. Methods Handle(CreatePayPalReturnKeyCommand, CancellationToken) Handles the CreatePayPalReturnKeyCommand request public Task<string?> Handle(CreatePayPalReturnKeyCommand command, CancellationToken cancellationToken) Parameters command CreatePayPalReturnKeyCommand The CreatePayPalReturnKeyCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<string> A string with the return key for the PayPal order; null if the key could not be created"
  },
  "api/Ecommerce.Application.Features.PayPal.Commands.CreatePayPalReturnKey.html": {
    "href": "api/Ecommerce.Application.Features.PayPal.Commands.CreatePayPalReturnKey.html",
    "title": "Namespace Ecommerce.Application.Features.PayPal.Commands.CreatePayPalReturnKey",
    "keywords": "Namespace Ecommerce.Application.Features.PayPal.Commands.CreatePayPalReturnKey Classes CreatePayPalReturnKeyCommand A MediatR.Mediator request for creating a return key for a PayPal order CreatePayPalReturnKeyCommandHandler A MediatR.Mediator request handler for CreatePayPalReturnKeyCommand"
  },
  "api/Ecommerce.Application.Features.PayPal.Commands.DeletePayPalReturnKey.DeletePayPalReturnKeyCommand.html": {
    "href": "api/Ecommerce.Application.Features.PayPal.Commands.DeletePayPalReturnKey.DeletePayPalReturnKeyCommand.html",
    "title": "Class DeletePayPalReturnKeyCommand",
    "keywords": "Class DeletePayPalReturnKeyCommand Namespace Ecommerce.Application.Features.PayPal.Commands.DeletePayPalReturnKey Assembly Ecommerce.Application.dll A MediatR.Mediator request for deleting a PayPal return key public class DeletePayPalReturnKeyCommand : IRequest<bool>, IBaseRequest Inheritance object DeletePayPalReturnKeyCommand Implements IRequest<bool> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeletePayPalReturnKeyCommand() public DeletePayPalReturnKeyCommand() Properties ReturnKey The return key to delete public string? ReturnKey { get; set; } Property Value string"
  },
  "api/Ecommerce.Application.Features.PayPal.Commands.DeletePayPalReturnKey.DeletePayPalReturnKeyCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.PayPal.Commands.DeletePayPalReturnKey.DeletePayPalReturnKeyCommandHandler.html",
    "title": "Class DeletePayPalReturnKeyCommandHandler",
    "keywords": "Class DeletePayPalReturnKeyCommandHandler Namespace Ecommerce.Application.Features.PayPal.Commands.DeletePayPalReturnKey Assembly Ecommerce.Application.dll A MediatR.Mediator request for deleting a PayPal return key public class DeletePayPalReturnKeyCommandHandler : IRequestHandler<DeletePayPalReturnKeyCommand, bool> Inheritance object DeletePayPalReturnKeyCommandHandler Implements IRequestHandler<DeletePayPalReturnKeyCommand, bool> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeletePayPalReturnKeyCommandHandler(ILogger<DeletePayPalReturnKeyCommandHandler>, IOrderKeyRepository) Initializes a new instance of the DeletePayPalReturnKeyCommandHandler class. public DeletePayPalReturnKeyCommandHandler(ILogger<DeletePayPalReturnKeyCommandHandler> logger, IOrderKeyRepository orderKeyRepository) Parameters logger ILogger<DeletePayPalReturnKeyCommandHandler> The ILogger instance used for logging. orderKeyRepository IOrderKeyRepository The IOrderKeyRepository instance used for data access for OrderKey entities. Methods Handle(DeletePayPalReturnKeyCommand, CancellationToken) Handles the DeletePayPalReturnKeyCommand request public Task<bool> Handle(DeletePayPalReturnKeyCommand command, CancellationToken cancellationToken) Parameters command DeletePayPalReturnKeyCommand The DeletePayPalReturnKeyCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<bool> Returns true if the OrderKey was successfully deleted Returns false if the OrderKey was not deleted"
  },
  "api/Ecommerce.Application.Features.PayPal.Commands.DeletePayPalReturnKey.html": {
    "href": "api/Ecommerce.Application.Features.PayPal.Commands.DeletePayPalReturnKey.html",
    "title": "Namespace Ecommerce.Application.Features.PayPal.Commands.DeletePayPalReturnKey",
    "keywords": "Namespace Ecommerce.Application.Features.PayPal.Commands.DeletePayPalReturnKey Classes DeletePayPalReturnKeyCommand A MediatR.Mediator request for deleting a PayPal return key DeletePayPalReturnKeyCommandHandler A MediatR.Mediator request for deleting a PayPal return key"
  },
  "api/Ecommerce.Application.Features.PayPal.Commands.HandlePayPalSuccess.HandlePayPalSuccessCommand.html": {
    "href": "api/Ecommerce.Application.Features.PayPal.Commands.HandlePayPalSuccess.HandlePayPalSuccessCommand.html",
    "title": "Class HandlePayPalSuccessCommand",
    "keywords": "Class HandlePayPalSuccessCommand Namespace Ecommerce.Application.Features.PayPal.Commands.HandlePayPalSuccess Assembly Ecommerce.Application.dll A MediatR.Mediator request for handling a successful return from PayPal public class HandlePayPalSuccessCommand : IRequest<bool>, IBaseRequest Inheritance object HandlePayPalSuccessCommand Implements IRequest<bool> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HandlePayPalSuccessCommand() public HandlePayPalSuccessCommand() Properties ReturnKey The return key from the PayPal success return public string? ReturnKey { get; set; } Property Value string"
  },
  "api/Ecommerce.Application.Features.PayPal.Commands.HandlePayPalSuccess.HandlePayPalSuccessCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.PayPal.Commands.HandlePayPalSuccess.HandlePayPalSuccessCommandHandler.html",
    "title": "Class HandlePayPalSuccessCommandHandler",
    "keywords": "Class HandlePayPalSuccessCommandHandler Namespace Ecommerce.Application.Features.PayPal.Commands.HandlePayPalSuccess Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for HandlePayPalSuccessCommand public class HandlePayPalSuccessCommandHandler : IRequestHandler<HandlePayPalSuccessCommand, bool> Inheritance object HandlePayPalSuccessCommandHandler Implements IRequestHandler<HandlePayPalSuccessCommand, bool> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HandlePayPalSuccessCommandHandler(ILogger<HandlePayPalSuccessCommandHandler>, IMediator) Initializes a new instance of the HandlePayPalSuccessCommandHandler class. public HandlePayPalSuccessCommandHandler(ILogger<HandlePayPalSuccessCommandHandler> logger, IMediator mediator) Parameters logger ILogger<HandlePayPalSuccessCommandHandler> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. Methods Handle(HandlePayPalSuccessCommand, CancellationToken) Handles the HandlePayPalSuccessCommand command public Task<bool> Handle(HandlePayPalSuccessCommand command, CancellationToken cancellationToken) Parameters command HandlePayPalSuccessCommand The HandlePayPalSuccessCommand command to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<bool> Returns true if the Ecommerce Order is updated successfully and the cart is emptied Returns false if the Ecommerce Order fails to update or the cart fails to empty"
  },
  "api/Ecommerce.Application.Features.PayPal.Commands.HandlePayPalSuccess.html": {
    "href": "api/Ecommerce.Application.Features.PayPal.Commands.HandlePayPalSuccess.html",
    "title": "Namespace Ecommerce.Application.Features.PayPal.Commands.HandlePayPalSuccess",
    "keywords": "Namespace Ecommerce.Application.Features.PayPal.Commands.HandlePayPalSuccess Classes HandlePayPalSuccessCommand A MediatR.Mediator request for handling a successful return from PayPal HandlePayPalSuccessCommandHandler A MediatR.Mediator request handler for HandlePayPalSuccessCommand"
  },
  "api/Ecommerce.Application.Features.PayPal.Queries.GetOrderByReturnKey.GetOrderByReturnKeyQuery.html": {
    "href": "api/Ecommerce.Application.Features.PayPal.Queries.GetOrderByReturnKey.GetOrderByReturnKeyQuery.html",
    "title": "Class GetOrderByReturnKeyQuery",
    "keywords": "Class GetOrderByReturnKeyQuery Namespace Ecommerce.Application.Features.PayPal.Queries.GetOrderByReturnKey Assembly Ecommerce.Application.dll A MediatR.Mediator request for getting an Ecommerce Order by the PayPal return key public class GetOrderByReturnKeyQuery : IRequest<OrderDto?>, IBaseRequest Inheritance object GetOrderByReturnKeyQuery Implements IRequest<OrderDto> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetOrderByReturnKeyQuery() public GetOrderByReturnKeyQuery() Properties ReturnKey The return key to find the Ecommerce Order public string ReturnKey { get; set; } Property Value string"
  },
  "api/Ecommerce.Application.Features.PayPal.Queries.GetOrderByReturnKey.GetOrderByReturnKeyQueryHandler.html": {
    "href": "api/Ecommerce.Application.Features.PayPal.Queries.GetOrderByReturnKey.GetOrderByReturnKeyQueryHandler.html",
    "title": "Class GetOrderByReturnKeyQueryHandler",
    "keywords": "Class GetOrderByReturnKeyQueryHandler Namespace Ecommerce.Application.Features.PayPal.Queries.GetOrderByReturnKey Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for GetOrderByReturnKeyQuery public class GetOrderByReturnKeyQueryHandler : IRequestHandler<GetOrderByReturnKeyQuery, OrderDto?> Inheritance object GetOrderByReturnKeyQueryHandler Implements IRequestHandler<GetOrderByReturnKeyQuery, OrderDto> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetOrderByReturnKeyQueryHandler(ILogger<GetOrderByReturnKeyQueryHandler>, IMediator, IOrderKeyRepository) Initializes a new instance of the GetOrderByReturnKeyQueryHandler class. public GetOrderByReturnKeyQueryHandler(ILogger<GetOrderByReturnKeyQueryHandler> logger, IMediator mediator, IOrderKeyRepository orderKeyRepository) Parameters logger ILogger<GetOrderByReturnKeyQueryHandler> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. orderKeyRepository IOrderKeyRepository The IOrderKeyRepository instance used for data access for Order Keys Methods Handle(GetOrderByReturnKeyQuery, CancellationToken) Handles the GetOrderByReturnKeyQuery request public Task<OrderDto?> Handle(GetOrderByReturnKeyQuery request, CancellationToken cancellationToken) Parameters request GetOrderByReturnKeyQuery The GetOrderByReturnKeyQuery request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<OrderDto> Returns the Order if the Order was found; Returns null if no Order with the specified return key is not found."
  },
  "api/Ecommerce.Application.Features.PayPal.Queries.GetOrderByReturnKey.html": {
    "href": "api/Ecommerce.Application.Features.PayPal.Queries.GetOrderByReturnKey.html",
    "title": "Namespace Ecommerce.Application.Features.PayPal.Queries.GetOrderByReturnKey",
    "keywords": "Namespace Ecommerce.Application.Features.PayPal.Queries.GetOrderByReturnKey Classes GetOrderByReturnKeyQuery A MediatR.Mediator request for getting an Ecommerce Order by the PayPal return key GetOrderByReturnKeyQueryHandler A MediatR.Mediator request handler for GetOrderByReturnKeyQuery"
  },
  "api/Ecommerce.Application.Features.Product.Commands.CreateProduct.CreateProductCommand.html": {
    "href": "api/Ecommerce.Application.Features.Product.Commands.CreateProduct.CreateProductCommand.html",
    "title": "Class CreateProductCommand",
    "keywords": "Class CreateProductCommand Namespace Ecommerce.Application.Features.Product.Commands.CreateProduct Assembly Ecommerce.Application.dll A MediatR.Mediator request for creating a new Ecommerce.Application.Features.Product public class CreateProductCommand : IRequest<CreateProductResponse>, IBaseRequest Inheritance object CreateProductCommand Implements IRequest<CreateProductResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateProductCommand() public CreateProductCommand() Properties ProductToCreate The Product to be created public ProductDto? ProductToCreate { get; set; } Property Value ProductDto UserName The User requesting to create the Product public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Application.Features.Product.Commands.CreateProduct.CreateProductCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.Product.Commands.CreateProduct.CreateProductCommandHandler.html",
    "title": "Class CreateProductCommandHandler",
    "keywords": "Class CreateProductCommandHandler Namespace Ecommerce.Application.Features.Product.Commands.CreateProduct Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for CreateProductCommand public class CreateProductCommandHandler : IRequestHandler<CreateProductCommand, CreateProductResponse> Inheritance object CreateProductCommandHandler Implements IRequestHandler<CreateProductCommand, CreateProductResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateProductCommandHandler(ILogger<CreateProductCommandHandler>, IMapper, IProductAsyncRepository, IMediator) Initializes a new instance of the CreateProductCommandHandler class. public CreateProductCommandHandler(ILogger<CreateProductCommandHandler> logger, IMapper mapper, IProductAsyncRepository productAsyncRepository, IMediator mediator) Parameters logger ILogger<CreateProductCommandHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. productAsyncRepository IProductAsyncRepository The IProductAsyncRepository instance used for data access for Ecommerce.Application.Features.Product entities. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. Methods Handle(CreateProductCommand, CancellationToken) Handles the CreateProductCommand request public Task<CreateProductResponse> Handle(CreateProductCommand command, CancellationToken cancellationToken) Parameters command CreateProductCommand The CreateProductCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<CreateProductResponse> A CreateProductResponse with Success being true if the Ecommerce.Application.Features.Product was created; Success will be false if validation of the command fails or Sql fails to create the Ecommerce.Application.Features.Product. Message will contain the message to display to the user. Validation Errors will be populated with errors to present if validation fails. Product will contain the new ProductDto if creation was successful."
  },
  "api/Ecommerce.Application.Features.Product.Commands.CreateProduct.html": {
    "href": "api/Ecommerce.Application.Features.Product.Commands.CreateProduct.html",
    "title": "Namespace Ecommerce.Application.Features.Product.Commands.CreateProduct",
    "keywords": "Namespace Ecommerce.Application.Features.Product.Commands.CreateProduct Classes CreateProductCommand A MediatR.Mediator request for creating a new Ecommerce.Application.Features.Product CreateProductCommandHandler A MediatR.Mediator request handler for CreateProductCommand"
  },
  "api/Ecommerce.Application.Features.Product.Commands.DeleteProduct.DeleteProductCommand.html": {
    "href": "api/Ecommerce.Application.Features.Product.Commands.DeleteProduct.DeleteProductCommand.html",
    "title": "Class DeleteProductCommand",
    "keywords": "Class DeleteProductCommand Namespace Ecommerce.Application.Features.Product.Commands.DeleteProduct Assembly Ecommerce.Application.dll A MediatR.Mediator request for deleting a Ecommerce.Application.Features.Product public class DeleteProductCommand : IRequest<DeleteProductResponse>, IBaseRequest Inheritance object DeleteProductCommand Implements IRequest<DeleteProductResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteProductCommand() public DeleteProductCommand() Properties ProductToDelete The Product to delete public ProductDto? ProductToDelete { get; set; } Property Value ProductDto"
  },
  "api/Ecommerce.Application.Features.Product.Commands.DeleteProduct.DeleteProductCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.Product.Commands.DeleteProduct.DeleteProductCommandHandler.html",
    "title": "Class DeleteProductCommandHandler",
    "keywords": "Class DeleteProductCommandHandler Namespace Ecommerce.Application.Features.Product.Commands.DeleteProduct Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for DeleteProductCommand public class DeleteProductCommandHandler : IRequestHandler<DeleteProductCommand, DeleteProductResponse> Inheritance object DeleteProductCommandHandler Implements IRequestHandler<DeleteProductCommand, DeleteProductResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteProductCommandHandler(ILogger<DeleteProductCommandHandler>, IMapper, IProductAsyncRepository) Initializes a new instance of the DeleteProductCommandHandler class. public DeleteProductCommandHandler(ILogger<DeleteProductCommandHandler> logger, IMapper mapper, IProductAsyncRepository productAsyncRepository) Parameters logger ILogger<DeleteProductCommandHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. productAsyncRepository IProductAsyncRepository The IProductAsyncRepository instance used for data access for Ecommerce.Application.Features.Product entities. Methods Handle(DeleteProductCommand, CancellationToken) Handles the DeleteProductCommand request public Task<DeleteProductResponse> Handle(DeleteProductCommand command, CancellationToken cancellationToken) Parameters command DeleteProductCommand The DeleteProductCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<DeleteProductResponse> A DeleteProductResponse with Success being true if the Ecommerce.Application.Features.Product was deleted; Success will be false if no Ecommerce.Application.Features.Product is found or validation of the command fails. Message will contain the message to display to the user."
  },
  "api/Ecommerce.Application.Features.Product.Commands.DeleteProduct.html": {
    "href": "api/Ecommerce.Application.Features.Product.Commands.DeleteProduct.html",
    "title": "Namespace Ecommerce.Application.Features.Product.Commands.DeleteProduct",
    "keywords": "Namespace Ecommerce.Application.Features.Product.Commands.DeleteProduct Classes DeleteProductCommand A MediatR.Mediator request for deleting a Ecommerce.Application.Features.Product DeleteProductCommandHandler A MediatR.Mediator request handler for DeleteProductCommand"
  },
  "api/Ecommerce.Application.Features.Product.Commands.UpdateProduct.UpdateProductCommand.html": {
    "href": "api/Ecommerce.Application.Features.Product.Commands.UpdateProduct.UpdateProductCommand.html",
    "title": "Class UpdateProductCommand",
    "keywords": "Class UpdateProductCommand Namespace Ecommerce.Application.Features.Product.Commands.UpdateProduct Assembly Ecommerce.Application.dll A MediatR.Mediator request for updating an existing Ecommerce.Application.Features.Product public class UpdateProductCommand : IRequest<UpdateProductResponse>, IBaseRequest Inheritance object UpdateProductCommand Implements IRequest<UpdateProductResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateProductCommand() public UpdateProductCommand() Properties ProductToUpdate The Product to update with public ProductDto? ProductToUpdate { get; set; } Property Value ProductDto UserName The User requesting to update the Product public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Application.Features.Product.Commands.UpdateProduct.UpdateProductCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.Product.Commands.UpdateProduct.UpdateProductCommandHandler.html",
    "title": "Class UpdateProductCommandHandler",
    "keywords": "Class UpdateProductCommandHandler Namespace Ecommerce.Application.Features.Product.Commands.UpdateProduct Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for UpdateProductCommand public class UpdateProductCommandHandler : IRequestHandler<UpdateProductCommand, UpdateProductResponse> Inheritance object UpdateProductCommandHandler Implements IRequestHandler<UpdateProductCommand, UpdateProductResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateProductCommandHandler(ILogger<UpdateProductCommandHandler>, IMapper, IProductAsyncRepository, IMediator) Initializes a new instance of the UpdateProductCommandHandler class. public UpdateProductCommandHandler(ILogger<UpdateProductCommandHandler> logger, IMapper mapper, IProductAsyncRepository productAsyncRepository, IMediator mediator) Parameters logger ILogger<UpdateProductCommandHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. productAsyncRepository IProductAsyncRepository The IProductAsyncRepository instance used for data access for Ecommerce.Application.Features.Product entities. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. Methods Handle(UpdateProductCommand, CancellationToken) Handles the UpdateProductCommand request public Task<UpdateProductResponse> Handle(UpdateProductCommand command, CancellationToken cancellationToken) Parameters command UpdateProductCommand The UpdateProductCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<UpdateProductResponse> A UpdateProductResponse with Success being true if the Ecommerce.Application.Features.Product was updated; Success will be false if no Ecommerce.Application.Features.Product is found or validation of the command fails. Message will contain the message to display to the user. Validation Errors will be populated with errors to present if validation fails"
  },
  "api/Ecommerce.Application.Features.Product.Commands.UpdateProduct.html": {
    "href": "api/Ecommerce.Application.Features.Product.Commands.UpdateProduct.html",
    "title": "Namespace Ecommerce.Application.Features.Product.Commands.UpdateProduct",
    "keywords": "Namespace Ecommerce.Application.Features.Product.Commands.UpdateProduct Classes UpdateProductCommand A MediatR.Mediator request for updating an existing Ecommerce.Application.Features.Product UpdateProductCommandHandler A MediatR.Mediator request handler for UpdateProductCommand"
  },
  "api/Ecommerce.Application.Features.Product.Queries.GetProductById.GetProductByIdQuery.html": {
    "href": "api/Ecommerce.Application.Features.Product.Queries.GetProductById.GetProductByIdQuery.html",
    "title": "Class GetProductByIdQuery",
    "keywords": "Class GetProductByIdQuery Namespace Ecommerce.Application.Features.Product.Queries.GetProductById Assembly Ecommerce.Application.dll A MediatR.Mediator request for retrieving an existing Ecommerce.Application.Features.Product by its Id public class GetProductByIdQuery : IRequest<GetProductByIdResponse>, IBaseRequest Inheritance object GetProductByIdQuery Implements IRequest<GetProductByIdResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetProductByIdQuery() public GetProductByIdQuery() Properties Id The unique identifier of the Ecommerce.Application.Features.Product to retrieve public int Id { get; set; } Property Value int"
  },
  "api/Ecommerce.Application.Features.Product.Queries.GetProductById.GetProductByIdQueryHandler.html": {
    "href": "api/Ecommerce.Application.Features.Product.Queries.GetProductById.GetProductByIdQueryHandler.html",
    "title": "Class GetProductByIdQueryHandler",
    "keywords": "Class GetProductByIdQueryHandler Namespace Ecommerce.Application.Features.Product.Queries.GetProductById Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for GetProductByIdQuery public class GetProductByIdQueryHandler : IRequestHandler<GetProductByIdQuery, GetProductByIdResponse> Inheritance object GetProductByIdQueryHandler Implements IRequestHandler<GetProductByIdQuery, GetProductByIdResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetProductByIdQueryHandler(ILogger<GetProductByIdQueryHandler>, IMapper, IMediator, IProductAsyncRepository) Initializes a new instance of the GetProductByIdQueryHandler class. public GetProductByIdQueryHandler(ILogger<GetProductByIdQueryHandler> logger, IMapper mapper, IMediator mediator, IProductAsyncRepository productAsyncRepository) Parameters logger ILogger<GetProductByIdQueryHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. productAsyncRepository IProductAsyncRepository The IProductAsyncRepository instance used for data access for Ecommerce.Application.Features.Product entities. Methods Handle(GetProductByIdQuery, CancellationToken) Handles the GetProductByIdQuery request public Task<GetProductByIdResponse> Handle(GetProductByIdQuery query, CancellationToken cancellationToken) Parameters query GetProductByIdQuery The GetProductByIdQuery request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<GetProductByIdResponse> A GetProductByIdResponse with Success being true if the Ecommerce.Application.Features.Product was found; Success will be false if no Ecommerce.Application.Features.Product with the specified ID is found. Message will contain the message to display to the user."
  },
  "api/Ecommerce.Application.Features.Product.Queries.GetProductById.html": {
    "href": "api/Ecommerce.Application.Features.Product.Queries.GetProductById.html",
    "title": "Namespace Ecommerce.Application.Features.Product.Queries.GetProductById",
    "keywords": "Namespace Ecommerce.Application.Features.Product.Queries.GetProductById Classes GetProductByIdQuery A MediatR.Mediator request for retrieving an existing Ecommerce.Application.Features.Product by its Id GetProductByIdQueryHandler A MediatR.Mediator request handler for GetProductByIdQuery"
  },
  "api/Ecommerce.Application.Features.Product.Queries.GetProductsByCategoryId.GetAllProductsByCategoryIdQuery.html": {
    "href": "api/Ecommerce.Application.Features.Product.Queries.GetProductsByCategoryId.GetAllProductsByCategoryIdQuery.html",
    "title": "Class GetAllProductsByCategoryIdQuery",
    "keywords": "Class GetAllProductsByCategoryIdQuery Namespace Ecommerce.Application.Features.Product.Queries.GetProductsByCategoryId Assembly Ecommerce.Application.dll A MediatR.Mediator request for retrieving all existing Ecommerce.Application.Features.Product entities for an Ecommerce.Application.Features.Category public class GetAllProductsByCategoryIdQuery : IRequest<GetAllProductsByCategoryIdResponse>, IBaseRequest Inheritance object GetAllProductsByCategoryIdQuery Implements IRequest<GetAllProductsByCategoryIdResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetAllProductsByCategoryIdQuery() public GetAllProductsByCategoryIdQuery() Properties CategoryId Id of the Ecommerce.Application.Features.Category to find all Ecommerce.Application.Features.Product entities for public int CategoryId { get; set; } Property Value int"
  },
  "api/Ecommerce.Application.Features.Product.Queries.GetProductsByCategoryId.GetAllProductsByCategoryIdQueryHandler.html": {
    "href": "api/Ecommerce.Application.Features.Product.Queries.GetProductsByCategoryId.GetAllProductsByCategoryIdQueryHandler.html",
    "title": "Class GetAllProductsByCategoryIdQueryHandler",
    "keywords": "Class GetAllProductsByCategoryIdQueryHandler Namespace Ecommerce.Application.Features.Product.Queries.GetProductsByCategoryId Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for GetAllProductsByCategoryIdQuery public class GetAllProductsByCategoryIdQueryHandler : IRequestHandler<GetAllProductsByCategoryIdQuery, GetAllProductsByCategoryIdResponse> Inheritance object GetAllProductsByCategoryIdQueryHandler Implements IRequestHandler<GetAllProductsByCategoryIdQuery, GetAllProductsByCategoryIdResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetAllProductsByCategoryIdQueryHandler(ILogger<GetAllProductsByCategoryIdQueryHandler>, IMapper, IProductAsyncRepository) Initializes a new instance of the GetAllProductsByCategoryIdQueryHandler class. public GetAllProductsByCategoryIdQueryHandler(ILogger<GetAllProductsByCategoryIdQueryHandler> logger, IMapper mapper, IProductAsyncRepository productAsyncRepository) Parameters logger ILogger<GetAllProductsByCategoryIdQueryHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. productAsyncRepository IProductAsyncRepository The IProductAsyncRepository instance used for data access for Ecommerce.Application.Features.Product entities. Methods Handle(GetAllProductsByCategoryIdQuery, CancellationToken) Handles the GetAllProductsByCategoryIdQuery request public Task<GetAllProductsByCategoryIdResponse> Handle(GetAllProductsByCategoryIdQuery query, CancellationToken cancellationToken) Parameters query GetAllProductsByCategoryIdQuery The GetAllProductsByCategoryIdQuery request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<GetAllProductsByCategoryIdResponse> A GetAllProductsByCategoryIdResponse with Success being true if any Ecommerce.Application.Features.Product entities were found; Success will be false if no Ecommerce.Application.Features.Product entities were found. Message will contain the message to display to the user. Products will contain all Ecommerce.Application.Features.Product entities or will be empty if none are found"
  },
  "api/Ecommerce.Application.Features.Product.Queries.GetProductsByCategoryId.html": {
    "href": "api/Ecommerce.Application.Features.Product.Queries.GetProductsByCategoryId.html",
    "title": "Namespace Ecommerce.Application.Features.Product.Queries.GetProductsByCategoryId",
    "keywords": "Namespace Ecommerce.Application.Features.Product.Queries.GetProductsByCategoryId Classes GetAllProductsByCategoryIdQuery A MediatR.Mediator request for retrieving all existing Ecommerce.Application.Features.Product entities for an Ecommerce.Application.Features.Category GetAllProductsByCategoryIdQueryHandler A MediatR.Mediator request handler for GetAllProductsByCategoryIdQuery"
  },
  "api/Ecommerce.Application.Features.Review.Commands.CreateReview.CreateReviewCommand.html": {
    "href": "api/Ecommerce.Application.Features.Review.Commands.CreateReview.CreateReviewCommand.html",
    "title": "Class CreateReviewCommand",
    "keywords": "Class CreateReviewCommand Namespace Ecommerce.Application.Features.Review.Commands.CreateReview Assembly Ecommerce.Application.dll A MediatR.Mediator request for creating a new Ecommerce.Application.Features.Review public class CreateReviewCommand : IRequest<CreateReviewResponse>, IBaseRequest Inheritance object CreateReviewCommand Implements IRequest<CreateReviewResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateReviewCommand() public CreateReviewCommand() Properties ReviewToCreate The Review to be created public ReviewDto? ReviewToCreate { get; set; } Property Value ReviewDto UserName The User requesting to create the Review public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Application.Features.Review.Commands.CreateReview.CreateReviewCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.Review.Commands.CreateReview.CreateReviewCommandHandler.html",
    "title": "Class CreateReviewCommandHandler",
    "keywords": "Class CreateReviewCommandHandler Namespace Ecommerce.Application.Features.Review.Commands.CreateReview Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for CreateReviewCommand public class CreateReviewCommandHandler : IRequestHandler<CreateReviewCommand, CreateReviewResponse> Inheritance object CreateReviewCommandHandler Implements IRequestHandler<CreateReviewCommand, CreateReviewResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateReviewCommandHandler(ILogger<CreateReviewCommandHandler>, IMapper, IMediator, IReviewAsyncRepository) Initializes a new instance of the CreateReviewCommandHandler class. public CreateReviewCommandHandler(ILogger<CreateReviewCommandHandler> logger, IMapper mapper, IMediator mediator, IReviewAsyncRepository reviewAsyncRepository) Parameters logger ILogger<CreateReviewCommandHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. reviewAsyncRepository IReviewAsyncRepository The IReviewAsyncRepository instance used for data access for Ecommerce.Application.Features.Review entities. Methods Handle(CreateReviewCommand, CancellationToken) Handles the CreateReviewCommand request public Task<CreateReviewResponse> Handle(CreateReviewCommand command, CancellationToken cancellationToken) Parameters command CreateReviewCommand The CreateReviewCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<CreateReviewResponse> A CreateReviewResponse with Success being true if the Ecommerce.Application.Features.Review was created; Success will be false if validation of the command fails or Sql fails to create the Ecommerce.Application.Features.Review. Message will contain the message to display to the user. Validation Errors will be populated with errors to present if validation fails. Review will contain the new ReviewDto if creation was successful."
  },
  "api/Ecommerce.Application.Features.Review.Commands.CreateReview.html": {
    "href": "api/Ecommerce.Application.Features.Review.Commands.CreateReview.html",
    "title": "Namespace Ecommerce.Application.Features.Review.Commands.CreateReview",
    "keywords": "Namespace Ecommerce.Application.Features.Review.Commands.CreateReview Classes CreateReviewCommand A MediatR.Mediator request for creating a new Ecommerce.Application.Features.Review CreateReviewCommandHandler A MediatR.Mediator request handler for CreateReviewCommand"
  },
  "api/Ecommerce.Application.Features.Review.Commands.DeleteReview.DeleteReviewCommand.html": {
    "href": "api/Ecommerce.Application.Features.Review.Commands.DeleteReview.DeleteReviewCommand.html",
    "title": "Class DeleteReviewCommand",
    "keywords": "Class DeleteReviewCommand Namespace Ecommerce.Application.Features.Review.Commands.DeleteReview Assembly Ecommerce.Application.dll A MediatR.Mediator request for deleting a Ecommerce.Application.Features.Review public class DeleteReviewCommand : IRequest<DeleteReviewResponse>, IBaseRequest Inheritance object DeleteReviewCommand Implements IRequest<DeleteReviewResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteReviewCommand() public DeleteReviewCommand() Properties ReviewToDelete The Review to delete public ReviewDto? ReviewToDelete { get; set; } Property Value ReviewDto"
  },
  "api/Ecommerce.Application.Features.Review.Commands.DeleteReview.DeleteReviewCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.Review.Commands.DeleteReview.DeleteReviewCommandHandler.html",
    "title": "Class DeleteReviewCommandHandler",
    "keywords": "Class DeleteReviewCommandHandler Namespace Ecommerce.Application.Features.Review.Commands.DeleteReview Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for DeleteReviewCommand public class DeleteReviewCommandHandler : IRequestHandler<DeleteReviewCommand, DeleteReviewResponse> Inheritance object DeleteReviewCommandHandler Implements IRequestHandler<DeleteReviewCommand, DeleteReviewResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteReviewCommandHandler(ILogger<DeleteReviewCommandHandler>, IMapper, IMediator, IReviewAsyncRepository) Initializes a new instance of the DeleteReviewCommandHandler class. public DeleteReviewCommandHandler(ILogger<DeleteReviewCommandHandler> logger, IMapper mapper, IMediator mediator, IReviewAsyncRepository reviewAsyncRepository) Parameters logger ILogger<DeleteReviewCommandHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. reviewAsyncRepository IReviewAsyncRepository The IReviewAsyncRepository instance used for data access for Ecommerce.Application.Features.Review entities. Methods Handle(DeleteReviewCommand, CancellationToken) Handles the DeleteReviewCommand request public Task<DeleteReviewResponse> Handle(DeleteReviewCommand command, CancellationToken cancellationToken) Parameters command DeleteReviewCommand The DeleteReviewCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<DeleteReviewResponse> A DeleteReviewResponse with Success being true if the Ecommerce.Application.Features.Review was deleted; Success will be false if no Ecommerce.Application.Features.Review is found or validation of the command fails. Message will contain the message to display to the user."
  },
  "api/Ecommerce.Application.Features.Review.Commands.DeleteReview.html": {
    "href": "api/Ecommerce.Application.Features.Review.Commands.DeleteReview.html",
    "title": "Namespace Ecommerce.Application.Features.Review.Commands.DeleteReview",
    "keywords": "Namespace Ecommerce.Application.Features.Review.Commands.DeleteReview Classes DeleteReviewCommand A MediatR.Mediator request for deleting a Ecommerce.Application.Features.Review DeleteReviewCommandHandler A MediatR.Mediator request handler for DeleteReviewCommand"
  },
  "api/Ecommerce.Application.Features.Review.Commands.UpdateReview.UpdateReviewCommand.html": {
    "href": "api/Ecommerce.Application.Features.Review.Commands.UpdateReview.UpdateReviewCommand.html",
    "title": "Class UpdateReviewCommand",
    "keywords": "Class UpdateReviewCommand Namespace Ecommerce.Application.Features.Review.Commands.UpdateReview Assembly Ecommerce.Application.dll A MediatR.Mediator request for updating an existing Ecommerce.Application.Features.Review public class UpdateReviewCommand : IRequest<UpdateReviewResponse>, IBaseRequest Inheritance object UpdateReviewCommand Implements IRequest<UpdateReviewResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateReviewCommand() public UpdateReviewCommand() Properties ReviewToUpdate The Review to update with public ReviewDto? ReviewToUpdate { get; set; } Property Value ReviewDto UserName The User requesting to update the Review public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Application.Features.Review.Commands.UpdateReview.UpdateReviewCommandHandler.html": {
    "href": "api/Ecommerce.Application.Features.Review.Commands.UpdateReview.UpdateReviewCommandHandler.html",
    "title": "Class UpdateReviewCommandHandler",
    "keywords": "Class UpdateReviewCommandHandler Namespace Ecommerce.Application.Features.Review.Commands.UpdateReview Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for UpdateReviewCommand public class UpdateReviewCommandHandler : IRequestHandler<UpdateReviewCommand, UpdateReviewResponse> Inheritance object UpdateReviewCommandHandler Implements IRequestHandler<UpdateReviewCommand, UpdateReviewResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateReviewCommandHandler(ILogger<UpdateReviewCommandHandler>, IMapper, IMediator, IReviewAsyncRepository) Initializes a new instance of the UpdateReviewCommandHandler class. public UpdateReviewCommandHandler(ILogger<UpdateReviewCommandHandler> logger, IMapper mapper, IMediator mediator, IReviewAsyncRepository reviewAsyncRepository) Parameters logger ILogger<UpdateReviewCommandHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. reviewAsyncRepository IReviewAsyncRepository The IReviewAsyncRepository instance used for data access for Ecommerce.Application.Features.Review entities. Methods Handle(UpdateReviewCommand, CancellationToken) Handles the UpdateReviewCommand request public Task<UpdateReviewResponse> Handle(UpdateReviewCommand command, CancellationToken cancellationToken) Parameters command UpdateReviewCommand The UpdateReviewCommand request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<UpdateReviewResponse> A UpdateReviewResponse with Success being true if the Ecommerce.Application.Features.Review was updated; Success will be false if no Ecommerce.Application.Features.Review is found or validation of the command fails. Message will contain the message to display to the user.. Validation Errors will be populated with errors to present if validation fails."
  },
  "api/Ecommerce.Application.Features.Review.Commands.UpdateReview.html": {
    "href": "api/Ecommerce.Application.Features.Review.Commands.UpdateReview.html",
    "title": "Namespace Ecommerce.Application.Features.Review.Commands.UpdateReview",
    "keywords": "Namespace Ecommerce.Application.Features.Review.Commands.UpdateReview Classes UpdateReviewCommand A MediatR.Mediator request for updating an existing Ecommerce.Application.Features.Review UpdateReviewCommandHandler A MediatR.Mediator request handler for UpdateReviewCommand"
  },
  "api/Ecommerce.Application.Features.Review.Queries.GetReviewsForProduct.GetReviewsForProductQuery.html": {
    "href": "api/Ecommerce.Application.Features.Review.Queries.GetReviewsForProduct.GetReviewsForProductQuery.html",
    "title": "Class GetReviewsForProductQuery",
    "keywords": "Class GetReviewsForProductQuery Namespace Ecommerce.Application.Features.Review.Queries.GetReviewsForProduct Assembly Ecommerce.Application.dll A MediatR.Mediator request for retrieving all existing Ecommerce.Application.Features.Review entities for an Ecommerce.Application.Features.Product public class GetReviewsForProductQuery : IRequest<GetReviewsForProductResponse>, IBaseRequest Inheritance object GetReviewsForProductQuery Implements IRequest<GetReviewsForProductResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetReviewsForProductQuery() public GetReviewsForProductQuery() Properties ProductId Id of the Ecommerce.Application.Features.Product to find all Ecommerce.Application.Features.Review entities for public int ProductId { get; set; } Property Value int"
  },
  "api/Ecommerce.Application.Features.Review.Queries.GetReviewsForProduct.GetReviewsForProductQueryHandler.html": {
    "href": "api/Ecommerce.Application.Features.Review.Queries.GetReviewsForProduct.GetReviewsForProductQueryHandler.html",
    "title": "Class GetReviewsForProductQueryHandler",
    "keywords": "Class GetReviewsForProductQueryHandler Namespace Ecommerce.Application.Features.Review.Queries.GetReviewsForProduct Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for GetReviewsForProductQuery public class GetReviewsForProductQueryHandler : IRequestHandler<GetReviewsForProductQuery, GetReviewsForProductResponse> Inheritance object GetReviewsForProductQueryHandler Implements IRequestHandler<GetReviewsForProductQuery, GetReviewsForProductResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetReviewsForProductQueryHandler(ILogger<GetReviewsForProductQueryHandler>, IMapper, IReviewAsyncRepository) Initializes a new instance of the GetReviewsForProductQueryHandler class. public GetReviewsForProductQueryHandler(ILogger<GetReviewsForProductQueryHandler> logger, IMapper mapper, IReviewAsyncRepository reviewAsyncRepository) Parameters logger ILogger<GetReviewsForProductQueryHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. reviewAsyncRepository IReviewAsyncRepository The IReviewAsyncRepository instance used for data access for Ecommerce.Application.Features.Review entities. Methods Handle(GetReviewsForProductQuery, CancellationToken) Handles the GetReviewsForProductQuery request public Task<GetReviewsForProductResponse> Handle(GetReviewsForProductQuery query, CancellationToken cancellationToken) Parameters query GetReviewsForProductQuery The GetReviewsForProductQuery request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<GetReviewsForProductResponse> A GetReviewsForProductResponse with Success being true if any Ecommerce.Application.Features.Review entities were found; Success will be false if no Ecommerce.Application.Features.Review entities were found. Message will contain the message to display to the user. Reviews will contain all Ecommerce.Application.Features.Review entities or will be empty if none are found or an error occurred."
  },
  "api/Ecommerce.Application.Features.Review.Queries.GetReviewsForProduct.html": {
    "href": "api/Ecommerce.Application.Features.Review.Queries.GetReviewsForProduct.html",
    "title": "Namespace Ecommerce.Application.Features.Review.Queries.GetReviewsForProduct",
    "keywords": "Namespace Ecommerce.Application.Features.Review.Queries.GetReviewsForProduct Classes GetReviewsForProductQuery A MediatR.Mediator request for retrieving all existing Ecommerce.Application.Features.Review entities for an Ecommerce.Application.Features.Product GetReviewsForProductQueryHandler A MediatR.Mediator request handler for GetReviewsForProductQuery"
  },
  "api/Ecommerce.Application.Features.Review.Queries.GetUserReviewForProduct.GetUserReviewForProductQuery.html": {
    "href": "api/Ecommerce.Application.Features.Review.Queries.GetUserReviewForProduct.GetUserReviewForProductQuery.html",
    "title": "Class GetUserReviewForProductQuery",
    "keywords": "Class GetUserReviewForProductQuery Namespace Ecommerce.Application.Features.Review.Queries.GetUserReviewForProduct Assembly Ecommerce.Application.dll A MediatR.Mediator request for retrieving a Ecommerce.Application.Features.EcommerceUser's Ecommerce.Application.Features.Review of a Ecommerce.Application.Features.Product if it exists public class GetUserReviewForProductQuery : IRequest<GetUserReviewForProductResponse>, IBaseRequest Inheritance object GetUserReviewForProductQuery Implements IRequest<GetUserReviewForProductResponse> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetUserReviewForProductQuery() public GetUserReviewForProductQuery() Properties ProductId The unique identifier of the Ecommerce.Application.Features.Product the Ecommerce.Application.Features.Review is for public int ProductId { get; set; } Property Value int UserName The UserName of the Ecommerce.Application.Features.EcommerceUser public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Application.Features.Review.Queries.GetUserReviewForProduct.GetUserReviewForProductQueryHandler.html": {
    "href": "api/Ecommerce.Application.Features.Review.Queries.GetUserReviewForProduct.GetUserReviewForProductQueryHandler.html",
    "title": "Class GetUserReviewForProductQueryHandler",
    "keywords": "Class GetUserReviewForProductQueryHandler Namespace Ecommerce.Application.Features.Review.Queries.GetUserReviewForProduct Assembly Ecommerce.Application.dll A MediatR.Mediator request handler for GetUserReviewForProductQuery public class GetUserReviewForProductQueryHandler : IRequestHandler<GetUserReviewForProductQuery, GetUserReviewForProductResponse> Inheritance object GetUserReviewForProductQueryHandler Implements IRequestHandler<GetUserReviewForProductQuery, GetUserReviewForProductResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetUserReviewForProductQueryHandler(ILogger<GetUserReviewForProductQueryHandler>, IMapper, IReviewAsyncRepository) Initializes a new instance of the GetUserReviewForProductQueryHandler class. public GetUserReviewForProductQueryHandler(ILogger<GetUserReviewForProductQueryHandler> logger, IMapper mapper, IReviewAsyncRepository reviewAsyncRepository) Parameters logger ILogger<GetUserReviewForProductQueryHandler> The ILogger instance used for logging. mapper IMapper The AutoMapper.IMapper instance used for mapping objects. reviewAsyncRepository IReviewAsyncRepository The IReviewAsyncRepository instance used for data access for Ecommerce.Application.Features.Review entities. Methods Handle(GetUserReviewForProductQuery, CancellationToken) Handles the GetUserReviewForProductQuery request public Task<GetUserReviewForProductResponse> Handle(GetUserReviewForProductQuery query, CancellationToken cancellationToken) Parameters query GetUserReviewForProductQuery The GetUserReviewForProductQuery request to be handled. cancellationToken CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task<GetUserReviewForProductResponse> A GetUserReviewForProductResponse with Success being true if a Ecommerce.Application.Features.Review is found; Success will be false if no Ecommerce.Application.Features.Review is found. Message will contain the message to display to the user. UserReview will contain the Ecommerce.Application.Features.Review of the Ecommerce.Application.Features.EcommerceUser or will be empty if it does not exist."
  },
  "api/Ecommerce.Application.Features.Review.Queries.GetUserReviewForProduct.html": {
    "href": "api/Ecommerce.Application.Features.Review.Queries.GetUserReviewForProduct.html",
    "title": "Namespace Ecommerce.Application.Features.Review.Queries.GetUserReviewForProduct",
    "keywords": "Namespace Ecommerce.Application.Features.Review.Queries.GetUserReviewForProduct Classes GetUserReviewForProductQuery A MediatR.Mediator request for retrieving a Ecommerce.Application.Features.EcommerceUser's Ecommerce.Application.Features.Review of a Ecommerce.Application.Features.Product if it exists GetUserReviewForProductQueryHandler A MediatR.Mediator request handler for GetUserReviewForProductQuery"
  },
  "api/Ecommerce.Application.Profiles.MappingProfile.html": {
    "href": "api/Ecommerce.Application.Profiles.MappingProfile.html",
    "title": "Class MappingProfile",
    "keywords": "Class MappingProfile Namespace Ecommerce.Application.Profiles Assembly Ecommerce.Application.dll public class MappingProfile : Profile, IProfileExpression, IProfileConfiguration Inheritance object Profile MappingProfile Implements IProfileExpression IProfileConfiguration Inherited Members Profile.DisableConstructorMapping() Profile.CreateProjection<TSource, TDestination>() Profile.CreateProjection<TSource, TDestination>(MemberList) Profile.CreateMap<TSource, TDestination>() Profile.CreateMap<TSource, TDestination>(MemberList) Profile.CreateMap(Type, Type) Profile.CreateMap(Type, Type, MemberList) Profile.ClearPrefixes() Profile.ReplaceMemberName(string, string) Profile.RecognizePrefixes(params string[]) Profile.RecognizePostfixes(params string[]) Profile.RecognizeDestinationPrefixes(params string[]) Profile.RecognizeDestinationPostfixes(params string[]) Profile.AddGlobalIgnore(string) Profile.IncludeSourceExtensionMethods(Type) Profile.ProfileName Profile.AllowNullDestinationValues Profile.AllowNullCollections Profile.ShouldMapProperty Profile.ShouldMapField Profile.ShouldMapMethod Profile.ShouldUseConstructor Profile.SourceMemberNamingConvention Profile.DestinationMemberNamingConvention Profile.ValueTransformers object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MappingProfile() public MappingProfile()"
  },
  "api/Ecommerce.Application.Profiles.html": {
    "href": "api/Ecommerce.Application.Profiles.html",
    "title": "Namespace Ecommerce.Application.Profiles",
    "keywords": "Namespace Ecommerce.Application.Profiles Classes MappingProfile"
  },
  "api/Ecommerce.Application.Validators.CartItem.CreateCartItemValidator.html": {
    "href": "api/Ecommerce.Application.Validators.CartItem.CreateCartItemValidator.html",
    "title": "Class CreateCartItemValidator",
    "keywords": "Class CreateCartItemValidator Namespace Ecommerce.Application.Validators.CartItem Assembly Ecommerce.Application.dll public class CreateCartItemValidator : AbstractValidator<CreateCartItemCommand>, IValidator<CreateCartItemCommand>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<CreateCartItemCommand> CreateCartItemValidator Implements IValidator<CreateCartItemCommand> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<CreateCartItemCommand>.Validate(CreateCartItemCommand) AbstractValidator<CreateCartItemCommand>.ValidateAsync(CreateCartItemCommand, CancellationToken) AbstractValidator<CreateCartItemCommand>.Validate(ValidationContext<CreateCartItemCommand>) AbstractValidator<CreateCartItemCommand>.ValidateAsync(ValidationContext<CreateCartItemCommand>, CancellationToken) AbstractValidator<CreateCartItemCommand>.CreateDescriptor() AbstractValidator<CreateCartItemCommand>.RuleFor<TProperty>(Expression<Func<CreateCartItemCommand, TProperty>>) AbstractValidator<CreateCartItemCommand>.Transform<TProperty, TTransformed>(Expression<Func<CreateCartItemCommand, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<CreateCartItemCommand>.Transform<TProperty, TTransformed>(Expression<Func<CreateCartItemCommand, TProperty>>, Func<CreateCartItemCommand, TProperty, TTransformed>) AbstractValidator<CreateCartItemCommand>.RuleForEach<TElement>(Expression<Func<CreateCartItemCommand, IEnumerable<TElement>>>) AbstractValidator<CreateCartItemCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateCartItemCommand, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<CreateCartItemCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateCartItemCommand, IEnumerable<TElement>>>, Func<CreateCartItemCommand, TElement, TTransformed>) AbstractValidator<CreateCartItemCommand>.RuleSet(string, Action) AbstractValidator<CreateCartItemCommand>.When(Func<CreateCartItemCommand, bool>, Action) AbstractValidator<CreateCartItemCommand>.When(Func<CreateCartItemCommand, ValidationContext<CreateCartItemCommand>, bool>, Action) AbstractValidator<CreateCartItemCommand>.Unless(Func<CreateCartItemCommand, bool>, Action) AbstractValidator<CreateCartItemCommand>.Unless(Func<CreateCartItemCommand, ValidationContext<CreateCartItemCommand>, bool>, Action) AbstractValidator<CreateCartItemCommand>.WhenAsync(Func<CreateCartItemCommand, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateCartItemCommand>.WhenAsync(Func<CreateCartItemCommand, ValidationContext<CreateCartItemCommand>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateCartItemCommand>.UnlessAsync(Func<CreateCartItemCommand, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateCartItemCommand>.UnlessAsync(Func<CreateCartItemCommand, ValidationContext<CreateCartItemCommand>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateCartItemCommand>.Include(IValidator<CreateCartItemCommand>) AbstractValidator<CreateCartItemCommand>.Include<TValidator>(Func<CreateCartItemCommand, TValidator>) AbstractValidator<CreateCartItemCommand>.GetEnumerator() AbstractValidator<CreateCartItemCommand>.EnsureInstanceNotNull(object) AbstractValidator<CreateCartItemCommand>.PreValidate(ValidationContext<CreateCartItemCommand>, ValidationResult) AbstractValidator<CreateCartItemCommand>.RaiseValidationException(ValidationContext<CreateCartItemCommand>, ValidationResult) AbstractValidator<CreateCartItemCommand>.OnRuleAdded(IValidationRule<CreateCartItemCommand>) AbstractValidator<CreateCartItemCommand>.CascadeMode AbstractValidator<CreateCartItemCommand>.ClassLevelCascadeMode AbstractValidator<CreateCartItemCommand>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateCartItemValidator(ICartItemRepository, IMediator) public CreateCartItemValidator(ICartItemRepository cartItemRepository, IMediator mediator) Parameters cartItemRepository ICartItemRepository mediator IMediator"
  },
  "api/Ecommerce.Application.Validators.CartItem.UpdateCartItemValidator.html": {
    "href": "api/Ecommerce.Application.Validators.CartItem.UpdateCartItemValidator.html",
    "title": "Class UpdateCartItemValidator",
    "keywords": "Class UpdateCartItemValidator Namespace Ecommerce.Application.Validators.CartItem Assembly Ecommerce.Application.dll public class UpdateCartItemValidator : AbstractValidator<UpdateCartItemCommand>, IValidator<UpdateCartItemCommand>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<UpdateCartItemCommand> UpdateCartItemValidator Implements IValidator<UpdateCartItemCommand> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<UpdateCartItemCommand>.Validate(UpdateCartItemCommand) AbstractValidator<UpdateCartItemCommand>.ValidateAsync(UpdateCartItemCommand, CancellationToken) AbstractValidator<UpdateCartItemCommand>.Validate(ValidationContext<UpdateCartItemCommand>) AbstractValidator<UpdateCartItemCommand>.ValidateAsync(ValidationContext<UpdateCartItemCommand>, CancellationToken) AbstractValidator<UpdateCartItemCommand>.CreateDescriptor() AbstractValidator<UpdateCartItemCommand>.RuleFor<TProperty>(Expression<Func<UpdateCartItemCommand, TProperty>>) AbstractValidator<UpdateCartItemCommand>.Transform<TProperty, TTransformed>(Expression<Func<UpdateCartItemCommand, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<UpdateCartItemCommand>.Transform<TProperty, TTransformed>(Expression<Func<UpdateCartItemCommand, TProperty>>, Func<UpdateCartItemCommand, TProperty, TTransformed>) AbstractValidator<UpdateCartItemCommand>.RuleForEach<TElement>(Expression<Func<UpdateCartItemCommand, IEnumerable<TElement>>>) AbstractValidator<UpdateCartItemCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateCartItemCommand, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<UpdateCartItemCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateCartItemCommand, IEnumerable<TElement>>>, Func<UpdateCartItemCommand, TElement, TTransformed>) AbstractValidator<UpdateCartItemCommand>.RuleSet(string, Action) AbstractValidator<UpdateCartItemCommand>.When(Func<UpdateCartItemCommand, bool>, Action) AbstractValidator<UpdateCartItemCommand>.When(Func<UpdateCartItemCommand, ValidationContext<UpdateCartItemCommand>, bool>, Action) AbstractValidator<UpdateCartItemCommand>.Unless(Func<UpdateCartItemCommand, bool>, Action) AbstractValidator<UpdateCartItemCommand>.Unless(Func<UpdateCartItemCommand, ValidationContext<UpdateCartItemCommand>, bool>, Action) AbstractValidator<UpdateCartItemCommand>.WhenAsync(Func<UpdateCartItemCommand, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateCartItemCommand>.WhenAsync(Func<UpdateCartItemCommand, ValidationContext<UpdateCartItemCommand>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateCartItemCommand>.UnlessAsync(Func<UpdateCartItemCommand, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateCartItemCommand>.UnlessAsync(Func<UpdateCartItemCommand, ValidationContext<UpdateCartItemCommand>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateCartItemCommand>.Include(IValidator<UpdateCartItemCommand>) AbstractValidator<UpdateCartItemCommand>.Include<TValidator>(Func<UpdateCartItemCommand, TValidator>) AbstractValidator<UpdateCartItemCommand>.GetEnumerator() AbstractValidator<UpdateCartItemCommand>.EnsureInstanceNotNull(object) AbstractValidator<UpdateCartItemCommand>.PreValidate(ValidationContext<UpdateCartItemCommand>, ValidationResult) AbstractValidator<UpdateCartItemCommand>.RaiseValidationException(ValidationContext<UpdateCartItemCommand>, ValidationResult) AbstractValidator<UpdateCartItemCommand>.OnRuleAdded(IValidationRule<UpdateCartItemCommand>) AbstractValidator<UpdateCartItemCommand>.CascadeMode AbstractValidator<UpdateCartItemCommand>.ClassLevelCascadeMode AbstractValidator<UpdateCartItemCommand>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateCartItemValidator(ICartItemRepository, IMediator) public UpdateCartItemValidator(ICartItemRepository cartItemRepository, IMediator mediator) Parameters cartItemRepository ICartItemRepository mediator IMediator"
  },
  "api/Ecommerce.Application.Validators.CartItem.html": {
    "href": "api/Ecommerce.Application.Validators.CartItem.html",
    "title": "Namespace Ecommerce.Application.Validators.CartItem",
    "keywords": "Namespace Ecommerce.Application.Validators.CartItem Classes CreateCartItemValidator UpdateCartItemValidator"
  },
  "api/Ecommerce.Application.Validators.Category.CreateCategoryValidator.html": {
    "href": "api/Ecommerce.Application.Validators.Category.CreateCategoryValidator.html",
    "title": "Class CreateCategoryValidator",
    "keywords": "Class CreateCategoryValidator Namespace Ecommerce.Application.Validators.Category Assembly Ecommerce.Application.dll public class CreateCategoryValidator : AbstractValidator<CreateCategoryCommand>, IValidator<CreateCategoryCommand>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<CreateCategoryCommand> CreateCategoryValidator Implements IValidator<CreateCategoryCommand> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<CreateCategoryCommand>.Validate(CreateCategoryCommand) AbstractValidator<CreateCategoryCommand>.ValidateAsync(CreateCategoryCommand, CancellationToken) AbstractValidator<CreateCategoryCommand>.Validate(ValidationContext<CreateCategoryCommand>) AbstractValidator<CreateCategoryCommand>.ValidateAsync(ValidationContext<CreateCategoryCommand>, CancellationToken) AbstractValidator<CreateCategoryCommand>.CreateDescriptor() AbstractValidator<CreateCategoryCommand>.RuleFor<TProperty>(Expression<Func<CreateCategoryCommand, TProperty>>) AbstractValidator<CreateCategoryCommand>.Transform<TProperty, TTransformed>(Expression<Func<CreateCategoryCommand, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<CreateCategoryCommand>.Transform<TProperty, TTransformed>(Expression<Func<CreateCategoryCommand, TProperty>>, Func<CreateCategoryCommand, TProperty, TTransformed>) AbstractValidator<CreateCategoryCommand>.RuleForEach<TElement>(Expression<Func<CreateCategoryCommand, IEnumerable<TElement>>>) AbstractValidator<CreateCategoryCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateCategoryCommand, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<CreateCategoryCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateCategoryCommand, IEnumerable<TElement>>>, Func<CreateCategoryCommand, TElement, TTransformed>) AbstractValidator<CreateCategoryCommand>.RuleSet(string, Action) AbstractValidator<CreateCategoryCommand>.When(Func<CreateCategoryCommand, bool>, Action) AbstractValidator<CreateCategoryCommand>.When(Func<CreateCategoryCommand, ValidationContext<CreateCategoryCommand>, bool>, Action) AbstractValidator<CreateCategoryCommand>.Unless(Func<CreateCategoryCommand, bool>, Action) AbstractValidator<CreateCategoryCommand>.Unless(Func<CreateCategoryCommand, ValidationContext<CreateCategoryCommand>, bool>, Action) AbstractValidator<CreateCategoryCommand>.WhenAsync(Func<CreateCategoryCommand, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateCategoryCommand>.WhenAsync(Func<CreateCategoryCommand, ValidationContext<CreateCategoryCommand>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateCategoryCommand>.UnlessAsync(Func<CreateCategoryCommand, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateCategoryCommand>.UnlessAsync(Func<CreateCategoryCommand, ValidationContext<CreateCategoryCommand>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateCategoryCommand>.Include(IValidator<CreateCategoryCommand>) AbstractValidator<CreateCategoryCommand>.Include<TValidator>(Func<CreateCategoryCommand, TValidator>) AbstractValidator<CreateCategoryCommand>.GetEnumerator() AbstractValidator<CreateCategoryCommand>.EnsureInstanceNotNull(object) AbstractValidator<CreateCategoryCommand>.PreValidate(ValidationContext<CreateCategoryCommand>, ValidationResult) AbstractValidator<CreateCategoryCommand>.RaiseValidationException(ValidationContext<CreateCategoryCommand>, ValidationResult) AbstractValidator<CreateCategoryCommand>.OnRuleAdded(IValidationRule<CreateCategoryCommand>) AbstractValidator<CreateCategoryCommand>.CascadeMode AbstractValidator<CreateCategoryCommand>.ClassLevelCascadeMode AbstractValidator<CreateCategoryCommand>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateCategoryValidator(ICategoryAsyncRepository) public CreateCategoryValidator(ICategoryAsyncRepository categoryAsyncRepository) Parameters categoryAsyncRepository ICategoryAsyncRepository"
  },
  "api/Ecommerce.Application.Validators.Category.UpdateCategoryValidator.html": {
    "href": "api/Ecommerce.Application.Validators.Category.UpdateCategoryValidator.html",
    "title": "Class UpdateCategoryValidator",
    "keywords": "Class UpdateCategoryValidator Namespace Ecommerce.Application.Validators.Category Assembly Ecommerce.Application.dll public class UpdateCategoryValidator : AbstractValidator<UpdateCategoryCommand>, IValidator<UpdateCategoryCommand>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<UpdateCategoryCommand> UpdateCategoryValidator Implements IValidator<UpdateCategoryCommand> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<UpdateCategoryCommand>.Validate(UpdateCategoryCommand) AbstractValidator<UpdateCategoryCommand>.ValidateAsync(UpdateCategoryCommand, CancellationToken) AbstractValidator<UpdateCategoryCommand>.Validate(ValidationContext<UpdateCategoryCommand>) AbstractValidator<UpdateCategoryCommand>.ValidateAsync(ValidationContext<UpdateCategoryCommand>, CancellationToken) AbstractValidator<UpdateCategoryCommand>.CreateDescriptor() AbstractValidator<UpdateCategoryCommand>.RuleFor<TProperty>(Expression<Func<UpdateCategoryCommand, TProperty>>) AbstractValidator<UpdateCategoryCommand>.Transform<TProperty, TTransformed>(Expression<Func<UpdateCategoryCommand, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<UpdateCategoryCommand>.Transform<TProperty, TTransformed>(Expression<Func<UpdateCategoryCommand, TProperty>>, Func<UpdateCategoryCommand, TProperty, TTransformed>) AbstractValidator<UpdateCategoryCommand>.RuleForEach<TElement>(Expression<Func<UpdateCategoryCommand, IEnumerable<TElement>>>) AbstractValidator<UpdateCategoryCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateCategoryCommand, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<UpdateCategoryCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateCategoryCommand, IEnumerable<TElement>>>, Func<UpdateCategoryCommand, TElement, TTransformed>) AbstractValidator<UpdateCategoryCommand>.RuleSet(string, Action) AbstractValidator<UpdateCategoryCommand>.When(Func<UpdateCategoryCommand, bool>, Action) AbstractValidator<UpdateCategoryCommand>.When(Func<UpdateCategoryCommand, ValidationContext<UpdateCategoryCommand>, bool>, Action) AbstractValidator<UpdateCategoryCommand>.Unless(Func<UpdateCategoryCommand, bool>, Action) AbstractValidator<UpdateCategoryCommand>.Unless(Func<UpdateCategoryCommand, ValidationContext<UpdateCategoryCommand>, bool>, Action) AbstractValidator<UpdateCategoryCommand>.WhenAsync(Func<UpdateCategoryCommand, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateCategoryCommand>.WhenAsync(Func<UpdateCategoryCommand, ValidationContext<UpdateCategoryCommand>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateCategoryCommand>.UnlessAsync(Func<UpdateCategoryCommand, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateCategoryCommand>.UnlessAsync(Func<UpdateCategoryCommand, ValidationContext<UpdateCategoryCommand>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateCategoryCommand>.Include(IValidator<UpdateCategoryCommand>) AbstractValidator<UpdateCategoryCommand>.Include<TValidator>(Func<UpdateCategoryCommand, TValidator>) AbstractValidator<UpdateCategoryCommand>.GetEnumerator() AbstractValidator<UpdateCategoryCommand>.EnsureInstanceNotNull(object) AbstractValidator<UpdateCategoryCommand>.PreValidate(ValidationContext<UpdateCategoryCommand>, ValidationResult) AbstractValidator<UpdateCategoryCommand>.RaiseValidationException(ValidationContext<UpdateCategoryCommand>, ValidationResult) AbstractValidator<UpdateCategoryCommand>.OnRuleAdded(IValidationRule<UpdateCategoryCommand>) AbstractValidator<UpdateCategoryCommand>.CascadeMode AbstractValidator<UpdateCategoryCommand>.ClassLevelCascadeMode AbstractValidator<UpdateCategoryCommand>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateCategoryValidator(ICategoryAsyncRepository) public UpdateCategoryValidator(ICategoryAsyncRepository categoryAsyncRepository) Parameters categoryAsyncRepository ICategoryAsyncRepository"
  },
  "api/Ecommerce.Application.Validators.Category.html": {
    "href": "api/Ecommerce.Application.Validators.Category.html",
    "title": "Namespace Ecommerce.Application.Validators.Category",
    "keywords": "Namespace Ecommerce.Application.Validators.Category Classes CreateCategoryValidator UpdateCategoryValidator"
  },
  "api/Ecommerce.Application.Validators.Order.CreateOrderValidator.html": {
    "href": "api/Ecommerce.Application.Validators.Order.CreateOrderValidator.html",
    "title": "Class CreateOrderValidator",
    "keywords": "Class CreateOrderValidator Namespace Ecommerce.Application.Validators.Order Assembly Ecommerce.Application.dll public class CreateOrderValidator : AbstractValidator<OrderDto>, IValidator<OrderDto>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<OrderDto> CreateOrderValidator Implements IValidator<OrderDto> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<OrderDto>.Validate(OrderDto) AbstractValidator<OrderDto>.ValidateAsync(OrderDto, CancellationToken) AbstractValidator<OrderDto>.Validate(ValidationContext<OrderDto>) AbstractValidator<OrderDto>.ValidateAsync(ValidationContext<OrderDto>, CancellationToken) AbstractValidator<OrderDto>.CreateDescriptor() AbstractValidator<OrderDto>.RuleFor<TProperty>(Expression<Func<OrderDto, TProperty>>) AbstractValidator<OrderDto>.Transform<TProperty, TTransformed>(Expression<Func<OrderDto, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<OrderDto>.Transform<TProperty, TTransformed>(Expression<Func<OrderDto, TProperty>>, Func<OrderDto, TProperty, TTransformed>) AbstractValidator<OrderDto>.RuleForEach<TElement>(Expression<Func<OrderDto, IEnumerable<TElement>>>) AbstractValidator<OrderDto>.TransformForEach<TElement, TTransformed>(Expression<Func<OrderDto, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<OrderDto>.TransformForEach<TElement, TTransformed>(Expression<Func<OrderDto, IEnumerable<TElement>>>, Func<OrderDto, TElement, TTransformed>) AbstractValidator<OrderDto>.RuleSet(string, Action) AbstractValidator<OrderDto>.When(Func<OrderDto, bool>, Action) AbstractValidator<OrderDto>.When(Func<OrderDto, ValidationContext<OrderDto>, bool>, Action) AbstractValidator<OrderDto>.Unless(Func<OrderDto, bool>, Action) AbstractValidator<OrderDto>.Unless(Func<OrderDto, ValidationContext<OrderDto>, bool>, Action) AbstractValidator<OrderDto>.WhenAsync(Func<OrderDto, CancellationToken, Task<bool>>, Action) AbstractValidator<OrderDto>.WhenAsync(Func<OrderDto, ValidationContext<OrderDto>, CancellationToken, Task<bool>>, Action) AbstractValidator<OrderDto>.UnlessAsync(Func<OrderDto, CancellationToken, Task<bool>>, Action) AbstractValidator<OrderDto>.UnlessAsync(Func<OrderDto, ValidationContext<OrderDto>, CancellationToken, Task<bool>>, Action) AbstractValidator<OrderDto>.Include(IValidator<OrderDto>) AbstractValidator<OrderDto>.Include<TValidator>(Func<OrderDto, TValidator>) AbstractValidator<OrderDto>.GetEnumerator() AbstractValidator<OrderDto>.EnsureInstanceNotNull(object) AbstractValidator<OrderDto>.PreValidate(ValidationContext<OrderDto>, ValidationResult) AbstractValidator<OrderDto>.RaiseValidationException(ValidationContext<OrderDto>, ValidationResult) AbstractValidator<OrderDto>.OnRuleAdded(IValidationRule<OrderDto>) AbstractValidator<OrderDto>.CascadeMode AbstractValidator<OrderDto>.ClassLevelCascadeMode AbstractValidator<OrderDto>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateOrderValidator() public CreateOrderValidator()"
  },
  "api/Ecommerce.Application.Validators.Order.UpdateOrderValidator.html": {
    "href": "api/Ecommerce.Application.Validators.Order.UpdateOrderValidator.html",
    "title": "Class UpdateOrderValidator",
    "keywords": "Class UpdateOrderValidator Namespace Ecommerce.Application.Validators.Order Assembly Ecommerce.Application.dll public class UpdateOrderValidator : AbstractValidator<UpdateOrderCommand>, IValidator<UpdateOrderCommand>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<UpdateOrderCommand> UpdateOrderValidator Implements IValidator<UpdateOrderCommand> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<UpdateOrderCommand>.Validate(UpdateOrderCommand) AbstractValidator<UpdateOrderCommand>.ValidateAsync(UpdateOrderCommand, CancellationToken) AbstractValidator<UpdateOrderCommand>.Validate(ValidationContext<UpdateOrderCommand>) AbstractValidator<UpdateOrderCommand>.ValidateAsync(ValidationContext<UpdateOrderCommand>, CancellationToken) AbstractValidator<UpdateOrderCommand>.CreateDescriptor() AbstractValidator<UpdateOrderCommand>.RuleFor<TProperty>(Expression<Func<UpdateOrderCommand, TProperty>>) AbstractValidator<UpdateOrderCommand>.Transform<TProperty, TTransformed>(Expression<Func<UpdateOrderCommand, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<UpdateOrderCommand>.Transform<TProperty, TTransformed>(Expression<Func<UpdateOrderCommand, TProperty>>, Func<UpdateOrderCommand, TProperty, TTransformed>) AbstractValidator<UpdateOrderCommand>.RuleForEach<TElement>(Expression<Func<UpdateOrderCommand, IEnumerable<TElement>>>) AbstractValidator<UpdateOrderCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateOrderCommand, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<UpdateOrderCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateOrderCommand, IEnumerable<TElement>>>, Func<UpdateOrderCommand, TElement, TTransformed>) AbstractValidator<UpdateOrderCommand>.RuleSet(string, Action) AbstractValidator<UpdateOrderCommand>.When(Func<UpdateOrderCommand, bool>, Action) AbstractValidator<UpdateOrderCommand>.When(Func<UpdateOrderCommand, ValidationContext<UpdateOrderCommand>, bool>, Action) AbstractValidator<UpdateOrderCommand>.Unless(Func<UpdateOrderCommand, bool>, Action) AbstractValidator<UpdateOrderCommand>.Unless(Func<UpdateOrderCommand, ValidationContext<UpdateOrderCommand>, bool>, Action) AbstractValidator<UpdateOrderCommand>.WhenAsync(Func<UpdateOrderCommand, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateOrderCommand>.WhenAsync(Func<UpdateOrderCommand, ValidationContext<UpdateOrderCommand>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateOrderCommand>.UnlessAsync(Func<UpdateOrderCommand, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateOrderCommand>.UnlessAsync(Func<UpdateOrderCommand, ValidationContext<UpdateOrderCommand>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateOrderCommand>.Include(IValidator<UpdateOrderCommand>) AbstractValidator<UpdateOrderCommand>.Include<TValidator>(Func<UpdateOrderCommand, TValidator>) AbstractValidator<UpdateOrderCommand>.GetEnumerator() AbstractValidator<UpdateOrderCommand>.EnsureInstanceNotNull(object) AbstractValidator<UpdateOrderCommand>.PreValidate(ValidationContext<UpdateOrderCommand>, ValidationResult) AbstractValidator<UpdateOrderCommand>.RaiseValidationException(ValidationContext<UpdateOrderCommand>, ValidationResult) AbstractValidator<UpdateOrderCommand>.OnRuleAdded(IValidationRule<UpdateOrderCommand>) AbstractValidator<UpdateOrderCommand>.CascadeMode AbstractValidator<UpdateOrderCommand>.ClassLevelCascadeMode AbstractValidator<UpdateOrderCommand>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateOrderValidator() public UpdateOrderValidator()"
  },
  "api/Ecommerce.Application.Validators.Order.html": {
    "href": "api/Ecommerce.Application.Validators.Order.html",
    "title": "Namespace Ecommerce.Application.Validators.Order",
    "keywords": "Namespace Ecommerce.Application.Validators.Order Classes CreateOrderValidator UpdateOrderValidator"
  },
  "api/Ecommerce.Application.Validators.OrderItem.CreateOrderItemValidator.html": {
    "href": "api/Ecommerce.Application.Validators.OrderItem.CreateOrderItemValidator.html",
    "title": "Class CreateOrderItemValidator",
    "keywords": "Class CreateOrderItemValidator Namespace Ecommerce.Application.Validators.OrderItem Assembly Ecommerce.Application.dll public class CreateOrderItemValidator : AbstractValidator<CreateOrderItemCommand>, IValidator<CreateOrderItemCommand>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<CreateOrderItemCommand> CreateOrderItemValidator Implements IValidator<CreateOrderItemCommand> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<CreateOrderItemCommand>.Validate(CreateOrderItemCommand) AbstractValidator<CreateOrderItemCommand>.ValidateAsync(CreateOrderItemCommand, CancellationToken) AbstractValidator<CreateOrderItemCommand>.Validate(ValidationContext<CreateOrderItemCommand>) AbstractValidator<CreateOrderItemCommand>.ValidateAsync(ValidationContext<CreateOrderItemCommand>, CancellationToken) AbstractValidator<CreateOrderItemCommand>.CreateDescriptor() AbstractValidator<CreateOrderItemCommand>.RuleFor<TProperty>(Expression<Func<CreateOrderItemCommand, TProperty>>) AbstractValidator<CreateOrderItemCommand>.Transform<TProperty, TTransformed>(Expression<Func<CreateOrderItemCommand, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<CreateOrderItemCommand>.Transform<TProperty, TTransformed>(Expression<Func<CreateOrderItemCommand, TProperty>>, Func<CreateOrderItemCommand, TProperty, TTransformed>) AbstractValidator<CreateOrderItemCommand>.RuleForEach<TElement>(Expression<Func<CreateOrderItemCommand, IEnumerable<TElement>>>) AbstractValidator<CreateOrderItemCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateOrderItemCommand, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<CreateOrderItemCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateOrderItemCommand, IEnumerable<TElement>>>, Func<CreateOrderItemCommand, TElement, TTransformed>) AbstractValidator<CreateOrderItemCommand>.RuleSet(string, Action) AbstractValidator<CreateOrderItemCommand>.When(Func<CreateOrderItemCommand, bool>, Action) AbstractValidator<CreateOrderItemCommand>.When(Func<CreateOrderItemCommand, ValidationContext<CreateOrderItemCommand>, bool>, Action) AbstractValidator<CreateOrderItemCommand>.Unless(Func<CreateOrderItemCommand, bool>, Action) AbstractValidator<CreateOrderItemCommand>.Unless(Func<CreateOrderItemCommand, ValidationContext<CreateOrderItemCommand>, bool>, Action) AbstractValidator<CreateOrderItemCommand>.WhenAsync(Func<CreateOrderItemCommand, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateOrderItemCommand>.WhenAsync(Func<CreateOrderItemCommand, ValidationContext<CreateOrderItemCommand>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateOrderItemCommand>.UnlessAsync(Func<CreateOrderItemCommand, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateOrderItemCommand>.UnlessAsync(Func<CreateOrderItemCommand, ValidationContext<CreateOrderItemCommand>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateOrderItemCommand>.Include(IValidator<CreateOrderItemCommand>) AbstractValidator<CreateOrderItemCommand>.Include<TValidator>(Func<CreateOrderItemCommand, TValidator>) AbstractValidator<CreateOrderItemCommand>.GetEnumerator() AbstractValidator<CreateOrderItemCommand>.EnsureInstanceNotNull(object) AbstractValidator<CreateOrderItemCommand>.PreValidate(ValidationContext<CreateOrderItemCommand>, ValidationResult) AbstractValidator<CreateOrderItemCommand>.RaiseValidationException(ValidationContext<CreateOrderItemCommand>, ValidationResult) AbstractValidator<CreateOrderItemCommand>.OnRuleAdded(IValidationRule<CreateOrderItemCommand>) AbstractValidator<CreateOrderItemCommand>.CascadeMode AbstractValidator<CreateOrderItemCommand>.ClassLevelCascadeMode AbstractValidator<CreateOrderItemCommand>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateOrderItemValidator(IMediator) public CreateOrderItemValidator(IMediator mediator) Parameters mediator IMediator"
  },
  "api/Ecommerce.Application.Validators.OrderItem.html": {
    "href": "api/Ecommerce.Application.Validators.OrderItem.html",
    "title": "Namespace Ecommerce.Application.Validators.OrderItem",
    "keywords": "Namespace Ecommerce.Application.Validators.OrderItem Classes CreateOrderItemValidator"
  },
  "api/Ecommerce.Application.Validators.Product.CreateProductValidator.html": {
    "href": "api/Ecommerce.Application.Validators.Product.CreateProductValidator.html",
    "title": "Class CreateProductValidator",
    "keywords": "Class CreateProductValidator Namespace Ecommerce.Application.Validators.Product Assembly Ecommerce.Application.dll public class CreateProductValidator : AbstractValidator<CreateProductCommand>, IValidator<CreateProductCommand>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<CreateProductCommand> CreateProductValidator Implements IValidator<CreateProductCommand> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<CreateProductCommand>.Validate(CreateProductCommand) AbstractValidator<CreateProductCommand>.ValidateAsync(CreateProductCommand, CancellationToken) AbstractValidator<CreateProductCommand>.Validate(ValidationContext<CreateProductCommand>) AbstractValidator<CreateProductCommand>.ValidateAsync(ValidationContext<CreateProductCommand>, CancellationToken) AbstractValidator<CreateProductCommand>.CreateDescriptor() AbstractValidator<CreateProductCommand>.RuleFor<TProperty>(Expression<Func<CreateProductCommand, TProperty>>) AbstractValidator<CreateProductCommand>.Transform<TProperty, TTransformed>(Expression<Func<CreateProductCommand, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<CreateProductCommand>.Transform<TProperty, TTransformed>(Expression<Func<CreateProductCommand, TProperty>>, Func<CreateProductCommand, TProperty, TTransformed>) AbstractValidator<CreateProductCommand>.RuleForEach<TElement>(Expression<Func<CreateProductCommand, IEnumerable<TElement>>>) AbstractValidator<CreateProductCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateProductCommand, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<CreateProductCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateProductCommand, IEnumerable<TElement>>>, Func<CreateProductCommand, TElement, TTransformed>) AbstractValidator<CreateProductCommand>.RuleSet(string, Action) AbstractValidator<CreateProductCommand>.When(Func<CreateProductCommand, bool>, Action) AbstractValidator<CreateProductCommand>.When(Func<CreateProductCommand, ValidationContext<CreateProductCommand>, bool>, Action) AbstractValidator<CreateProductCommand>.Unless(Func<CreateProductCommand, bool>, Action) AbstractValidator<CreateProductCommand>.Unless(Func<CreateProductCommand, ValidationContext<CreateProductCommand>, bool>, Action) AbstractValidator<CreateProductCommand>.WhenAsync(Func<CreateProductCommand, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateProductCommand>.WhenAsync(Func<CreateProductCommand, ValidationContext<CreateProductCommand>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateProductCommand>.UnlessAsync(Func<CreateProductCommand, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateProductCommand>.UnlessAsync(Func<CreateProductCommand, ValidationContext<CreateProductCommand>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateProductCommand>.Include(IValidator<CreateProductCommand>) AbstractValidator<CreateProductCommand>.Include<TValidator>(Func<CreateProductCommand, TValidator>) AbstractValidator<CreateProductCommand>.GetEnumerator() AbstractValidator<CreateProductCommand>.EnsureInstanceNotNull(object) AbstractValidator<CreateProductCommand>.PreValidate(ValidationContext<CreateProductCommand>, ValidationResult) AbstractValidator<CreateProductCommand>.RaiseValidationException(ValidationContext<CreateProductCommand>, ValidationResult) AbstractValidator<CreateProductCommand>.OnRuleAdded(IValidationRule<CreateProductCommand>) AbstractValidator<CreateProductCommand>.CascadeMode AbstractValidator<CreateProductCommand>.ClassLevelCascadeMode AbstractValidator<CreateProductCommand>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateProductValidator(IProductAsyncRepository, IMediator) public CreateProductValidator(IProductAsyncRepository productAsyncRepository, IMediator mediator) Parameters productAsyncRepository IProductAsyncRepository mediator IMediator"
  },
  "api/Ecommerce.Application.Validators.Product.UpdateProductValidator.html": {
    "href": "api/Ecommerce.Application.Validators.Product.UpdateProductValidator.html",
    "title": "Class UpdateProductValidator",
    "keywords": "Class UpdateProductValidator Namespace Ecommerce.Application.Validators.Product Assembly Ecommerce.Application.dll public class UpdateProductValidator : AbstractValidator<UpdateProductCommand>, IValidator<UpdateProductCommand>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<UpdateProductCommand> UpdateProductValidator Implements IValidator<UpdateProductCommand> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<UpdateProductCommand>.Validate(UpdateProductCommand) AbstractValidator<UpdateProductCommand>.ValidateAsync(UpdateProductCommand, CancellationToken) AbstractValidator<UpdateProductCommand>.Validate(ValidationContext<UpdateProductCommand>) AbstractValidator<UpdateProductCommand>.ValidateAsync(ValidationContext<UpdateProductCommand>, CancellationToken) AbstractValidator<UpdateProductCommand>.CreateDescriptor() AbstractValidator<UpdateProductCommand>.RuleFor<TProperty>(Expression<Func<UpdateProductCommand, TProperty>>) AbstractValidator<UpdateProductCommand>.Transform<TProperty, TTransformed>(Expression<Func<UpdateProductCommand, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<UpdateProductCommand>.Transform<TProperty, TTransformed>(Expression<Func<UpdateProductCommand, TProperty>>, Func<UpdateProductCommand, TProperty, TTransformed>) AbstractValidator<UpdateProductCommand>.RuleForEach<TElement>(Expression<Func<UpdateProductCommand, IEnumerable<TElement>>>) AbstractValidator<UpdateProductCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateProductCommand, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<UpdateProductCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateProductCommand, IEnumerable<TElement>>>, Func<UpdateProductCommand, TElement, TTransformed>) AbstractValidator<UpdateProductCommand>.RuleSet(string, Action) AbstractValidator<UpdateProductCommand>.When(Func<UpdateProductCommand, bool>, Action) AbstractValidator<UpdateProductCommand>.When(Func<UpdateProductCommand, ValidationContext<UpdateProductCommand>, bool>, Action) AbstractValidator<UpdateProductCommand>.Unless(Func<UpdateProductCommand, bool>, Action) AbstractValidator<UpdateProductCommand>.Unless(Func<UpdateProductCommand, ValidationContext<UpdateProductCommand>, bool>, Action) AbstractValidator<UpdateProductCommand>.WhenAsync(Func<UpdateProductCommand, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateProductCommand>.WhenAsync(Func<UpdateProductCommand, ValidationContext<UpdateProductCommand>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateProductCommand>.UnlessAsync(Func<UpdateProductCommand, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateProductCommand>.UnlessAsync(Func<UpdateProductCommand, ValidationContext<UpdateProductCommand>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateProductCommand>.Include(IValidator<UpdateProductCommand>) AbstractValidator<UpdateProductCommand>.Include<TValidator>(Func<UpdateProductCommand, TValidator>) AbstractValidator<UpdateProductCommand>.GetEnumerator() AbstractValidator<UpdateProductCommand>.EnsureInstanceNotNull(object) AbstractValidator<UpdateProductCommand>.PreValidate(ValidationContext<UpdateProductCommand>, ValidationResult) AbstractValidator<UpdateProductCommand>.RaiseValidationException(ValidationContext<UpdateProductCommand>, ValidationResult) AbstractValidator<UpdateProductCommand>.OnRuleAdded(IValidationRule<UpdateProductCommand>) AbstractValidator<UpdateProductCommand>.CascadeMode AbstractValidator<UpdateProductCommand>.ClassLevelCascadeMode AbstractValidator<UpdateProductCommand>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateProductValidator(IProductAsyncRepository, IMediator) public UpdateProductValidator(IProductAsyncRepository productAsyncRepository, IMediator mediator) Parameters productAsyncRepository IProductAsyncRepository mediator IMediator"
  },
  "api/Ecommerce.Application.Validators.Product.html": {
    "href": "api/Ecommerce.Application.Validators.Product.html",
    "title": "Namespace Ecommerce.Application.Validators.Product",
    "keywords": "Namespace Ecommerce.Application.Validators.Product Classes CreateProductValidator UpdateProductValidator"
  },
  "api/Ecommerce.Application.Validators.Review.CreateReviewValidator.html": {
    "href": "api/Ecommerce.Application.Validators.Review.CreateReviewValidator.html",
    "title": "Class CreateReviewValidator",
    "keywords": "Class CreateReviewValidator Namespace Ecommerce.Application.Validators.Review Assembly Ecommerce.Application.dll public class CreateReviewValidator : AbstractValidator<CreateReviewCommand>, IValidator<CreateReviewCommand>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<CreateReviewCommand> CreateReviewValidator Implements IValidator<CreateReviewCommand> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<CreateReviewCommand>.Validate(CreateReviewCommand) AbstractValidator<CreateReviewCommand>.ValidateAsync(CreateReviewCommand, CancellationToken) AbstractValidator<CreateReviewCommand>.Validate(ValidationContext<CreateReviewCommand>) AbstractValidator<CreateReviewCommand>.ValidateAsync(ValidationContext<CreateReviewCommand>, CancellationToken) AbstractValidator<CreateReviewCommand>.CreateDescriptor() AbstractValidator<CreateReviewCommand>.RuleFor<TProperty>(Expression<Func<CreateReviewCommand, TProperty>>) AbstractValidator<CreateReviewCommand>.Transform<TProperty, TTransformed>(Expression<Func<CreateReviewCommand, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<CreateReviewCommand>.Transform<TProperty, TTransformed>(Expression<Func<CreateReviewCommand, TProperty>>, Func<CreateReviewCommand, TProperty, TTransformed>) AbstractValidator<CreateReviewCommand>.RuleForEach<TElement>(Expression<Func<CreateReviewCommand, IEnumerable<TElement>>>) AbstractValidator<CreateReviewCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateReviewCommand, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<CreateReviewCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateReviewCommand, IEnumerable<TElement>>>, Func<CreateReviewCommand, TElement, TTransformed>) AbstractValidator<CreateReviewCommand>.RuleSet(string, Action) AbstractValidator<CreateReviewCommand>.When(Func<CreateReviewCommand, bool>, Action) AbstractValidator<CreateReviewCommand>.When(Func<CreateReviewCommand, ValidationContext<CreateReviewCommand>, bool>, Action) AbstractValidator<CreateReviewCommand>.Unless(Func<CreateReviewCommand, bool>, Action) AbstractValidator<CreateReviewCommand>.Unless(Func<CreateReviewCommand, ValidationContext<CreateReviewCommand>, bool>, Action) AbstractValidator<CreateReviewCommand>.WhenAsync(Func<CreateReviewCommand, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateReviewCommand>.WhenAsync(Func<CreateReviewCommand, ValidationContext<CreateReviewCommand>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateReviewCommand>.UnlessAsync(Func<CreateReviewCommand, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateReviewCommand>.UnlessAsync(Func<CreateReviewCommand, ValidationContext<CreateReviewCommand>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateReviewCommand>.Include(IValidator<CreateReviewCommand>) AbstractValidator<CreateReviewCommand>.Include<TValidator>(Func<CreateReviewCommand, TValidator>) AbstractValidator<CreateReviewCommand>.GetEnumerator() AbstractValidator<CreateReviewCommand>.EnsureInstanceNotNull(object) AbstractValidator<CreateReviewCommand>.PreValidate(ValidationContext<CreateReviewCommand>, ValidationResult) AbstractValidator<CreateReviewCommand>.RaiseValidationException(ValidationContext<CreateReviewCommand>, ValidationResult) AbstractValidator<CreateReviewCommand>.OnRuleAdded(IValidationRule<CreateReviewCommand>) AbstractValidator<CreateReviewCommand>.CascadeMode AbstractValidator<CreateReviewCommand>.ClassLevelCascadeMode AbstractValidator<CreateReviewCommand>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateReviewValidator(IReviewAsyncRepository, IMediator) public CreateReviewValidator(IReviewAsyncRepository reviewAsyncRepository, IMediator mediator) Parameters reviewAsyncRepository IReviewAsyncRepository mediator IMediator"
  },
  "api/Ecommerce.Application.Validators.Review.UpdateReviewValidator.html": {
    "href": "api/Ecommerce.Application.Validators.Review.UpdateReviewValidator.html",
    "title": "Class UpdateReviewValidator",
    "keywords": "Class UpdateReviewValidator Namespace Ecommerce.Application.Validators.Review Assembly Ecommerce.Application.dll public class UpdateReviewValidator : AbstractValidator<UpdateReviewCommand>, IValidator<UpdateReviewCommand>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<UpdateReviewCommand> UpdateReviewValidator Implements IValidator<UpdateReviewCommand> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<UpdateReviewCommand>.Validate(UpdateReviewCommand) AbstractValidator<UpdateReviewCommand>.ValidateAsync(UpdateReviewCommand, CancellationToken) AbstractValidator<UpdateReviewCommand>.Validate(ValidationContext<UpdateReviewCommand>) AbstractValidator<UpdateReviewCommand>.ValidateAsync(ValidationContext<UpdateReviewCommand>, CancellationToken) AbstractValidator<UpdateReviewCommand>.CreateDescriptor() AbstractValidator<UpdateReviewCommand>.RuleFor<TProperty>(Expression<Func<UpdateReviewCommand, TProperty>>) AbstractValidator<UpdateReviewCommand>.Transform<TProperty, TTransformed>(Expression<Func<UpdateReviewCommand, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<UpdateReviewCommand>.Transform<TProperty, TTransformed>(Expression<Func<UpdateReviewCommand, TProperty>>, Func<UpdateReviewCommand, TProperty, TTransformed>) AbstractValidator<UpdateReviewCommand>.RuleForEach<TElement>(Expression<Func<UpdateReviewCommand, IEnumerable<TElement>>>) AbstractValidator<UpdateReviewCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateReviewCommand, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<UpdateReviewCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateReviewCommand, IEnumerable<TElement>>>, Func<UpdateReviewCommand, TElement, TTransformed>) AbstractValidator<UpdateReviewCommand>.RuleSet(string, Action) AbstractValidator<UpdateReviewCommand>.When(Func<UpdateReviewCommand, bool>, Action) AbstractValidator<UpdateReviewCommand>.When(Func<UpdateReviewCommand, ValidationContext<UpdateReviewCommand>, bool>, Action) AbstractValidator<UpdateReviewCommand>.Unless(Func<UpdateReviewCommand, bool>, Action) AbstractValidator<UpdateReviewCommand>.Unless(Func<UpdateReviewCommand, ValidationContext<UpdateReviewCommand>, bool>, Action) AbstractValidator<UpdateReviewCommand>.WhenAsync(Func<UpdateReviewCommand, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateReviewCommand>.WhenAsync(Func<UpdateReviewCommand, ValidationContext<UpdateReviewCommand>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateReviewCommand>.UnlessAsync(Func<UpdateReviewCommand, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateReviewCommand>.UnlessAsync(Func<UpdateReviewCommand, ValidationContext<UpdateReviewCommand>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateReviewCommand>.Include(IValidator<UpdateReviewCommand>) AbstractValidator<UpdateReviewCommand>.Include<TValidator>(Func<UpdateReviewCommand, TValidator>) AbstractValidator<UpdateReviewCommand>.GetEnumerator() AbstractValidator<UpdateReviewCommand>.EnsureInstanceNotNull(object) AbstractValidator<UpdateReviewCommand>.PreValidate(ValidationContext<UpdateReviewCommand>, ValidationResult) AbstractValidator<UpdateReviewCommand>.RaiseValidationException(ValidationContext<UpdateReviewCommand>, ValidationResult) AbstractValidator<UpdateReviewCommand>.OnRuleAdded(IValidationRule<UpdateReviewCommand>) AbstractValidator<UpdateReviewCommand>.CascadeMode AbstractValidator<UpdateReviewCommand>.ClassLevelCascadeMode AbstractValidator<UpdateReviewCommand>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateReviewValidator(IReviewAsyncRepository, IMediator) public UpdateReviewValidator(IReviewAsyncRepository reviewAsyncRepository, IMediator mediator) Parameters reviewAsyncRepository IReviewAsyncRepository mediator IMediator"
  },
  "api/Ecommerce.Application.Validators.Review.html": {
    "href": "api/Ecommerce.Application.Validators.Review.html",
    "title": "Namespace Ecommerce.Application.Validators.Review",
    "keywords": "Namespace Ecommerce.Application.Validators.Review Classes CreateReviewValidator UpdateReviewValidator"
  },
  "api/Ecommerce.Application.html": {
    "href": "api/Ecommerce.Application.html",
    "title": "Namespace Ecommerce.Application",
    "keywords": "Namespace Ecommerce.Application Classes ApplicationServiceRegistration"
  },
  "api/Ecommerce.Domain.Common.AuditableEntity.html": {
    "href": "api/Ecommerce.Domain.Common.AuditableEntity.html",
    "title": "Class AuditableEntity",
    "keywords": "Class AuditableEntity Namespace Ecommerce.Domain.Common Assembly Ecommerce.Domain.dll public abstract class AuditableEntity Inheritance object AuditableEntity Derived CartItem Category Order OrderItem Product Review Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuditableEntity() protected AuditableEntity() Properties CreatedBy [MaxLength(255)] [Required] public string CreatedBy { get; set; } Property Value string CreatedDate [Required] public DateTime CreatedDate { get; set; } Property Value DateTime LastModifiedBy [MaxLength(255)] public string? LastModifiedBy { get; set; } Property Value string LastModifiedDate public DateTime? LastModifiedDate { get; set; } Property Value DateTime?"
  },
  "api/Ecommerce.Domain.Common.html": {
    "href": "api/Ecommerce.Domain.Common.html",
    "title": "Namespace Ecommerce.Domain.Common",
    "keywords": "Namespace Ecommerce.Domain.Common Classes AuditableEntity"
  },
  "api/Ecommerce.Domain.Constants.Entities.CartItemConstants.html": {
    "href": "api/Ecommerce.Domain.Constants.Entities.CartItemConstants.html",
    "title": "Class CartItemConstants",
    "keywords": "Class CartItemConstants Namespace Ecommerce.Domain.Constants.Entities Assembly Ecommerce.Domain.dll public static class CartItemConstants Inheritance object CartItemConstants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields _createErrorMessage public const string _createErrorMessage = \"Error adding the item to your cart, please try again later.\" Field Value string _createSuccessMessage public const string _createSuccessMessage = \"Successfully added the item to your cart.\" Field Value string _deleteAllItemsErrorMessage public const string _deleteAllItemsErrorMessage = \"Error clearing your cart, please try again later.\" Field Value string _deleteAllItemsSuccessMessage public const string _deleteAllItemsSuccessMessage = \"Successfully cleared your cart.\" Field Value string _deleteSingleItemErrorMessage public const string _deleteSingleItemErrorMessage = \"Error removing the item from your cart, please try again later.\" Field Value string _deleteSingleItemSuccessMessage public const string _deleteSingleItemSuccessMessage = \"Successfully removed the item from your cart.\" Field Value string _genericValidationErrorMessage public const string _genericValidationErrorMessage = \"Please fix the listed errors and try again.\" Field Value string _getAllItemsErrorMessage public const string _getAllItemsErrorMessage = \"Error retrieving all items in your cart, please try again later.\" Field Value string _getAllItemsSuccessMessage public const string _getAllItemsSuccessMessage = \"Successfully retrieved all items in your cart.\" Field Value string _updateErrorMessage public const string _updateErrorMessage = \"Error updating the item in your cart, please try again later.\" Field Value string _updateSuccessMessage public const string _updateSuccessMessage = \"Successfully updated the item in your cart.\" Field Value string"
  },
  "api/Ecommerce.Domain.Constants.Entities.CategoryConstants.html": {
    "href": "api/Ecommerce.Domain.Constants.Entities.CategoryConstants.html",
    "title": "Class CategoryConstants",
    "keywords": "Class CategoryConstants Namespace Ecommerce.Domain.Constants.Entities Assembly Ecommerce.Domain.dll public static class CategoryConstants Inheritance object CategoryConstants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields _createErrorMessage public const string _createErrorMessage = \"Error creating the category, please try again later.\" Field Value string _createSuccessMessage public const string _createSuccessMessage = \"Successfully created the category.\" Field Value string _deleteErrorMessage public const string _deleteErrorMessage = \"Error deleting the category, please try again later.\" Field Value string _deleteSuccessMessage public const string _deleteSuccessMessage = \"Successfully deleted the category.\" Field Value string _genericValidationErrorMessage public const string _genericValidationErrorMessage = \"Please fix the listed errors and try again.\" Field Value string _getAllErrorMessage public const string _getAllErrorMessage = \"Error retrieving all categories, please try again later.\" Field Value string _getAllSuccessMessage public const string _getAllSuccessMessage = \"Successfully retrieved all categories.\" Field Value string _getByIdErrorMessage public const string _getByIdErrorMessage = \"Error retrieving the category, please try again later.\" Field Value string _getByIdSuccessMessage public const string _getByIdSuccessMessage = \"Successfully retrieved the category.\" Field Value string _updateErrorMessage public const string _updateErrorMessage = \"Error updating the category, please try again later.\" Field Value string _updateSuccessMessage public const string _updateSuccessMessage = \"Successfully updated the category.\" Field Value string"
  },
  "api/Ecommerce.Domain.Constants.Entities.EcommerceUserConstants.html": {
    "href": "api/Ecommerce.Domain.Constants.Entities.EcommerceUserConstants.html",
    "title": "Class EcommerceUserConstants",
    "keywords": "Class EcommerceUserConstants Namespace Ecommerce.Domain.Constants.Entities Assembly Ecommerce.Domain.dll public static class EcommerceUserConstants Inheritance object EcommerceUserConstants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields _confirmEmailErrorMessage public const string _confirmEmailErrorMessage = \"Failed to confirm your Email, Please try again later\" Field Value string _confirmEmailSuccessMessage public const string _confirmEmailSuccessMessage = \"Email Confirmed Successfully\" Field Value string _genericValidationErrorMessage public const string _genericValidationErrorMessage = \"Please fix the listed errors and try again\" Field Value string _updatePasswordErrorMessage public const string _updatePasswordErrorMessage = \"Failed to update your Password, Please try again later\" Field Value string _updatePasswordSuccessMessage public const string _updatePasswordSuccessMessage = \"Password Updated Successfully\" Field Value string _updateUserErrorMessage public const string _updateUserErrorMessage = \"Failed to save your changes, Please try again later\" Field Value string _updateUserSuccessMessage public const string _updateUserSuccessMessage = \"Saved your changes successfully\" Field Value string"
  },
  "api/Ecommerce.Domain.Constants.Entities.OrderConstants.html": {
    "href": "api/Ecommerce.Domain.Constants.Entities.OrderConstants.html",
    "title": "Class OrderConstants",
    "keywords": "Class OrderConstants Namespace Ecommerce.Domain.Constants.Entities Assembly Ecommerce.Domain.dll public static class OrderConstants Inheritance object OrderConstants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields _createErrorMessage public const string _createErrorMessage = \"Error creating your order, please try again later.\" Field Value string _createSuccessMessage public const string _createSuccessMessage = \"Order created successfully\" Field Value string _deleteErrorMessage public const string _deleteErrorMessage = \"Error deleting your order, please try again later.\" Field Value string _deleteSuccessMessage public const string _deleteSuccessMessage = \"Order deleted successfully\" Field Value string _genericValidationErrorMessage public const string _genericValidationErrorMessage = \"Please fix the listed errors and try again.\" Field Value string _getAllOrdersErrorMessage public const string _getAllOrdersErrorMessage = \"Error getting all of your Orders, please try again later.\" Field Value string _getAllOrdersSuccessMessage public const string _getAllOrdersSuccessMessage = \"Successfully Got all Orders\" Field Value string _getOrderAfterSuccessfulCheckoutErrorMessage public const string _getOrderAfterSuccessfulCheckoutErrorMessage = \"Error Processing Order\" Field Value string _getOrderAfterSuccessfulCheckoutSuccessMessage public const string _getOrderAfterSuccessfulCheckoutSuccessMessage = \"Order processed successfully\" Field Value string _getOrderByIdErrorMessage public const string _getOrderByIdErrorMessage = \"Error getting your Order, please try again later.\" Field Value string _getOrderByIdSuccessMessage public const string _getOrderByIdSuccessMessage = \"Successfully Got Your Order\" Field Value string _updateErrorMessage public const string _updateErrorMessage = \"Error updating your order, please try again later.\" Field Value string _updateSuccessMessage public const string _updateSuccessMessage = \"Order updated successfully\" Field Value string"
  },
  "api/Ecommerce.Domain.Constants.Entities.OrderItemConstants.html": {
    "href": "api/Ecommerce.Domain.Constants.Entities.OrderItemConstants.html",
    "title": "Class OrderItemConstants",
    "keywords": "Class OrderItemConstants Namespace Ecommerce.Domain.Constants.Entities Assembly Ecommerce.Domain.dll public static class OrderItemConstants Inheritance object OrderItemConstants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields _createSqlErrorMessage public const string _createSqlErrorMessage = \"Sql failed to create OrderItem\" Field Value string _createUserNameErrorMessage public const string _createUserNameErrorMessage = \"Username cannot be null or empty\" Field Value string _genericValidationErrorMessage public const string _genericValidationErrorMessage = \"Validation failed\" Field Value string _getAllOrderItemsByOrderIdErrorMessage public const string _getAllOrderItemsByOrderIdErrorMessage = \"No OrderItems Found\" Field Value string"
  },
  "api/Ecommerce.Domain.Constants.Entities.ProductConstants.html": {
    "href": "api/Ecommerce.Domain.Constants.Entities.ProductConstants.html",
    "title": "Class ProductConstants",
    "keywords": "Class ProductConstants Namespace Ecommerce.Domain.Constants.Entities Assembly Ecommerce.Domain.dll public class ProductConstants Inheritance object ProductConstants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProductConstants() public ProductConstants() Fields _createErrorMessage public const string _createErrorMessage = \"Error creating the product, please try again later.\" Field Value string _createSuccessMessage public const string _createSuccessMessage = \"Product created successfully.\" Field Value string _deleteErrorMessage public const string _deleteErrorMessage = \"Error deleting the product, please try again later.\" Field Value string _deleteSuccessMessage public const string _deleteSuccessMessage = \"Product deleted successfully.\" Field Value string _genericValidationErrorMessage public const string _genericValidationErrorMessage = \"Please fix the listed errors and try again.\" Field Value string _getAllProductsByCategoryErrorMessage public const string _getAllProductsByCategoryErrorMessage = \"Error retrieving products, please try again later.\" Field Value string _getAllProductsByCategorySuccessMessage public const string _getAllProductsByCategorySuccessMessage = \"Successfully retrieved all products.\" Field Value string _getProductByIdErrorMessage public const string _getProductByIdErrorMessage = \"Error retrieving the product, please try again later.\" Field Value string _getProductByIdReviewsNotFoundErrorMessage public const string _getProductByIdReviewsNotFoundErrorMessage = \"Error retrieving the product reviews, please try again later.\" Field Value string _getProductByIdSuccessMessage public const string _getProductByIdSuccessMessage = \"Successfully retrieved the product.\" Field Value string _updateErrorMessage public const string _updateErrorMessage = \"Error updating the product, please try again later.\" Field Value string _updateSuccessMessage public const string _updateSuccessMessage = \"Product updated successfully.\" Field Value string"
  },
  "api/Ecommerce.Domain.Constants.Entities.ReviewConstants.html": {
    "href": "api/Ecommerce.Domain.Constants.Entities.ReviewConstants.html",
    "title": "Class ReviewConstants",
    "keywords": "Class ReviewConstants Namespace Ecommerce.Domain.Constants.Entities Assembly Ecommerce.Domain.dll public static class ReviewConstants Inheritance object ReviewConstants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields _createErrorMessage public const string _createErrorMessage = \"Error creating your Review, please try again later.\" Field Value string _createSuccessMessage public const string _createSuccessMessage = \"Created your Review Successfully\" Field Value string _deleteErrorMessage public const string _deleteErrorMessage = \"Error deleting your Review, please try again later.\" Field Value string _deleteSuccessMessage public const string _deleteSuccessMessage = \"Deleted your Review Successfully\" Field Value string _genericValidationErrorMessage public const string _genericValidationErrorMessage = \"Please fix the listed errors and try again.\" Field Value string _getAllErrorMessage public const string _getAllErrorMessage = \"Failed to load all Reviews, please try again later.\" Field Value string _getAllSuccessMessage public const string _getAllSuccessMessage = \"Retrieved all Reviews Successfully\" Field Value string _getUserReviewErrorMessage public const string _getUserReviewErrorMessage = \"Failed to get your Review, please try again later.\" Field Value string _getUserReviewSuccessMessage public const string _getUserReviewSuccessMessage = \"Retrieved your Review Successfully\" Field Value string _updateErrorMessage public const string _updateErrorMessage = \"Error updating your Review, please try again later.\" Field Value string _updateSuccessMessage public const string _updateSuccessMessage = \"Updated your Review Successfully\" Field Value string"
  },
  "api/Ecommerce.Domain.Constants.Entities.html": {
    "href": "api/Ecommerce.Domain.Constants.Entities.html",
    "title": "Namespace Ecommerce.Domain.Constants.Entities",
    "keywords": "Namespace Ecommerce.Domain.Constants.Entities Classes CartItemConstants CategoryConstants EcommerceUserConstants OrderConstants OrderItemConstants ProductConstants ReviewConstants"
  },
  "api/Ecommerce.Domain.Constants.Identity.PolicyNames.html": {
    "href": "api/Ecommerce.Domain.Constants.Identity.PolicyNames.html",
    "title": "Class PolicyNames",
    "keywords": "Class PolicyNames Namespace Ecommerce.Domain.Constants.Identity Assembly Ecommerce.Domain.dll public static class PolicyNames Inheritance object PolicyNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields _adminPolicy public const string _adminPolicy = \"AdminOnly\" Field Value string _generalPolicy public const string _generalPolicy = \"General\" Field Value string"
  },
  "api/Ecommerce.Domain.Constants.Identity.RoleNames.html": {
    "href": "api/Ecommerce.Domain.Constants.Identity.RoleNames.html",
    "title": "Class RoleNames",
    "keywords": "Class RoleNames Namespace Ecommerce.Domain.Constants.Identity Assembly Ecommerce.Domain.dll public static class RoleNames Inheritance object RoleNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields _admin public const string _admin = \"Admin\" Field Value string _user public const string _user = \"User\" Field Value string"
  },
  "api/Ecommerce.Domain.Constants.Identity.html": {
    "href": "api/Ecommerce.Domain.Constants.Identity.html",
    "title": "Namespace Ecommerce.Domain.Constants.Identity",
    "keywords": "Namespace Ecommerce.Domain.Constants.Identity Classes PolicyNames RoleNames"
  },
  "api/Ecommerce.Domain.Constants.Infrastructure.PayPalConstants.html": {
    "href": "api/Ecommerce.Domain.Constants.Infrastructure.PayPalConstants.html",
    "title": "Class PayPalConstants",
    "keywords": "Class PayPalConstants Namespace Ecommerce.Domain.Constants.Infrastructure Assembly Ecommerce.Domain.dll public class PayPalConstants Inheritance object PayPalConstants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PayPalConstants() public PayPalConstants() Fields _createOrderErrorMessage public const string _createOrderErrorMessage = \"Error creating the order with PayPal\" Field Value string _createOrderSuccessMessage public const string _createOrderSuccessMessage = \"Successfully created your order with PayPal\" Field Value string"
  },
  "api/Ecommerce.Domain.Constants.Infrastructure.html": {
    "href": "api/Ecommerce.Domain.Constants.Infrastructure.html",
    "title": "Namespace Ecommerce.Domain.Constants.Infrastructure",
    "keywords": "Namespace Ecommerce.Domain.Constants.Infrastructure Classes PayPalConstants"
  },
  "api/Ecommerce.Domain.Entities.CartItem.html": {
    "href": "api/Ecommerce.Domain.Entities.CartItem.html",
    "title": "Class CartItem",
    "keywords": "Class CartItem Namespace Ecommerce.Domain.Entities Assembly Ecommerce.Domain.dll public class CartItem : AuditableEntity Inheritance object AuditableEntity CartItem Inherited Members AuditableEntity.CreatedBy AuditableEntity.CreatedDate AuditableEntity.LastModifiedBy AuditableEntity.LastModifiedDate object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CartItem() public CartItem() Properties Id public int Id { get; set; } Property Value int ProductId public int ProductId { get; set; } Property Value int Quantity public int Quantity { get; set; } Property Value int UserId public Guid UserId { get; set; } Property Value Guid"
  },
  "api/Ecommerce.Domain.Entities.Category.html": {
    "href": "api/Ecommerce.Domain.Entities.Category.html",
    "title": "Class Category",
    "keywords": "Class Category Namespace Ecommerce.Domain.Entities Assembly Ecommerce.Domain.dll public class Category : AuditableEntity Inheritance object AuditableEntity Category Inherited Members AuditableEntity.CreatedBy AuditableEntity.CreatedDate AuditableEntity.LastModifiedBy AuditableEntity.LastModifiedDate object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Category() public Category() Properties Id public int Id { get; set; } Property Value int Name [MaxLength(50)] public string Name { get; set; } Property Value string Summary [MaxLength(200)] public string Summary { get; set; } Property Value string"
  },
  "api/Ecommerce.Domain.Entities.EcommerceUser.html": {
    "href": "api/Ecommerce.Domain.Entities.EcommerceUser.html",
    "title": "Class EcommerceUser",
    "keywords": "Class EcommerceUser Namespace Ecommerce.Domain.Entities Assembly Ecommerce.Domain.dll public class EcommerceUser : IdentityUser<Guid> Inheritance object IdentityUser<Guid> EcommerceUser Inherited Members IdentityUser<Guid>.ToString() IdentityUser<Guid>.Id IdentityUser<Guid>.UserName IdentityUser<Guid>.NormalizedUserName IdentityUser<Guid>.Email IdentityUser<Guid>.NormalizedEmail IdentityUser<Guid>.EmailConfirmed IdentityUser<Guid>.PasswordHash IdentityUser<Guid>.SecurityStamp IdentityUser<Guid>.ConcurrencyStamp IdentityUser<Guid>.PhoneNumber IdentityUser<Guid>.PhoneNumberConfirmed IdentityUser<Guid>.TwoFactorEnabled IdentityUser<Guid>.LockoutEnd IdentityUser<Guid>.LockoutEnabled IdentityUser<Guid>.AccessFailedCount object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EcommerceUser() public EcommerceUser() Properties FirstName [Required] [MaxLength(255)] public string FirstName { get; set; } Property Value string LastName [Required] [MaxLength(255)] public string LastName { get; set; } Property Value string"
  },
  "api/Ecommerce.Domain.Entities.Order.html": {
    "href": "api/Ecommerce.Domain.Entities.Order.html",
    "title": "Class Order",
    "keywords": "Class Order Namespace Ecommerce.Domain.Entities Assembly Ecommerce.Domain.dll public class Order : AuditableEntity Inheritance object AuditableEntity Order Inherited Members AuditableEntity.CreatedBy AuditableEntity.CreatedDate AuditableEntity.LastModifiedBy AuditableEntity.LastModifiedDate object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Order() public Order() Properties Id public int Id { get; set; } Property Value int OrderItems public IEnumerable<OrderItem> OrderItems { get; set; } Property Value IEnumerable<OrderItem> PayPalRequestId public Guid PayPalRequestId { get; set; } Property Value Guid Status public OrderStatus Status { get; set; } Property Value OrderStatus Total public double Total { get; set; } Property Value double UserId public Guid UserId { get; set; } Property Value Guid"
  },
  "api/Ecommerce.Domain.Entities.OrderItem.html": {
    "href": "api/Ecommerce.Domain.Entities.OrderItem.html",
    "title": "Class OrderItem",
    "keywords": "Class OrderItem Namespace Ecommerce.Domain.Entities Assembly Ecommerce.Domain.dll public class OrderItem : AuditableEntity Inheritance object AuditableEntity OrderItem Inherited Members AuditableEntity.CreatedBy AuditableEntity.CreatedDate AuditableEntity.LastModifiedBy AuditableEntity.LastModifiedDate object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrderItem() public OrderItem() Properties Id public int Id { get; set; } Property Value int OrderId public int OrderId { get; set; } Property Value int Price public double Price { get; set; } Property Value double ProductDescription [MaxLength(255)] public string ProductDescription { get; set; } Property Value string ProductName [MaxLength(255)] public string ProductName { get; set; } Property Value string ProductSku [MaxLength(255)] public string ProductSku { get; set; } Property Value string Quantity public int Quantity { get; set; } Property Value int"
  },
  "api/Ecommerce.Domain.Entities.Product.html": {
    "href": "api/Ecommerce.Domain.Entities.Product.html",
    "title": "Class Product",
    "keywords": "Class Product Namespace Ecommerce.Domain.Entities Assembly Ecommerce.Domain.dll public class Product : AuditableEntity Inheritance object AuditableEntity Product Inherited Members AuditableEntity.CreatedBy AuditableEntity.CreatedDate AuditableEntity.LastModifiedBy AuditableEntity.LastModifiedDate object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Product() public Product() Properties AverageRating public decimal AverageRating { get; set; } Property Value decimal CategoryId public int CategoryId { get; set; } Property Value int CustomerReviews public IEnumerable<Review> CustomerReviews { get; set; } Property Value IEnumerable<Review> Description [MaxLength(500)] public string Description { get; set; } Property Value string Id public int Id { get; set; } Property Value int ImageUrl public string ImageUrl { get; set; } Property Value string Name [MaxLength(100)] public string Name { get; set; } Property Value string Price public double Price { get; set; } Property Value double QuantityAvailable public int QuantityAvailable { get; set; } Property Value int"
  },
  "api/Ecommerce.Domain.Entities.Review.html": {
    "href": "api/Ecommerce.Domain.Entities.Review.html",
    "title": "Class Review",
    "keywords": "Class Review Namespace Ecommerce.Domain.Entities Assembly Ecommerce.Domain.dll public class Review : AuditableEntity Inheritance object AuditableEntity Review Inherited Members AuditableEntity.CreatedBy AuditableEntity.CreatedDate AuditableEntity.LastModifiedBy AuditableEntity.LastModifiedDate object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Review() public Review() Properties Comments public string? Comments { get; set; } Property Value string Id public int Id { get; set; } Property Value int ProductId public int ProductId { get; set; } Property Value int Stars public int Stars { get; set; } Property Value int UserName [MaxLength(256)] public string UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Domain.Entities.html": {
    "href": "api/Ecommerce.Domain.Entities.html",
    "title": "Namespace Ecommerce.Domain.Entities",
    "keywords": "Namespace Ecommerce.Domain.Entities Classes CartItem Category EcommerceUser Order OrderItem Product Review"
  },
  "api/Ecommerce.Domain.Infrastructure.OrderKey.html": {
    "href": "api/Ecommerce.Domain.Infrastructure.OrderKey.html",
    "title": "Class OrderKey",
    "keywords": "Class OrderKey Namespace Ecommerce.Domain.Infrastructure Assembly Ecommerce.Domain.dll public class OrderKey Inheritance object OrderKey Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrderKey() public OrderKey() Properties CreatedAt public DateTime CreatedAt { get; set; } Property Value DateTime Id public int Id { get; set; } Property Value int OrderId public int OrderId { get; set; } Property Value int OrderToken [MaxLength(50)] public string OrderToken { get; set; } Property Value string"
  },
  "api/Ecommerce.Domain.Infrastructure.html": {
    "href": "api/Ecommerce.Domain.Infrastructure.html",
    "title": "Namespace Ecommerce.Domain.Infrastructure",
    "keywords": "Namespace Ecommerce.Domain.Infrastructure Classes OrderKey"
  },
  "api/Ecommerce.FastEndpoints.Contracts.ITokenService.html": {
    "href": "api/Ecommerce.FastEndpoints.Contracts.ITokenService.html",
    "title": "Interface ITokenService",
    "keywords": "Interface ITokenService Namespace Ecommerce.FastEndpoints.Contracts Assembly Ecommerce.FastEndpoints.dll A service that handles operations on the JWT token passed in HTTP requests public interface ITokenService Methods GetUserIdFromToken(string?) Retrieves the user id from the auth token Guid? GetUserIdFromToken(string? token) Parameters token string The auth token to parse Returns Guid? The user id if found; null if token is null or no claim is found for NameIdentifier GetUserNameFromToken(string?) Retrieves the username from the token string? GetUserNameFromToken(string? token) Parameters token string The JWT token passed in the HTTP request Returns string A string containing the username if found; null if token is null or no claim is found for Name ValidateTokenAsync(string?) Validates if the JWT token passed in the HTTP request is still valid for use Task<bool> ValidateTokenAsync(string? token) Parameters token string The JWT token passed in the HTTP request Returns Task<bool>"
  },
  "api/Ecommerce.FastEndpoints.Contracts.html": {
    "href": "api/Ecommerce.FastEndpoints.Contracts.html",
    "title": "Namespace Ecommerce.FastEndpoints.Contracts",
    "keywords": "Namespace Ecommerce.FastEndpoints.Contracts Interfaces ITokenService A service that handles operations on the JWT token passed in HTTP requests"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.CartItem.CreateCartItemEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.CartItem.CreateCartItemEndpoint.html",
    "title": "Class CreateCartItemEndpoint",
    "keywords": "Class CreateCartItemEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.CartItem Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles creating a new CartItem public class CreateCartItemEndpoint : Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<CreateCartItemApiRequest, CreateCartItemResponse> CreateCartItemEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.HandleAsync(CreateCartItemApiRequest, CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.ExecuteAsync(CreateCartItemApiRequest, CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.TryResolve<TService>() Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.TryResolve(Type) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Resolve<TService>() Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Resolve(Type) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.CreateScope() Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.TryResolve<TService>(string) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.TryResolve(Type, string) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Resolve<TService>(string) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Resolve(Type, string) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Route<T>(string, bool) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Query<T>(string, bool) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.ProcessorState<TState>() Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.OnBeforeValidate(CreateCartItemApiRequest) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.OnBeforeValidateAsync(CreateCartItemApiRequest, CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.OnAfterValidate(CreateCartItemApiRequest) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.OnAfterValidateAsync(CreateCartItemApiRequest, CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.OnBeforeHandle(CreateCartItemApiRequest) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.OnBeforeHandleAsync(CreateCartItemApiRequest, CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.OnAfterHandle(CreateCartItemApiRequest, CreateCartItemResponse) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.OnAfterHandleAsync(CreateCartItemApiRequest, CreateCartItemResponse, CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.OnValidationFailed() Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SendAsync(CreateCartItemResponse, int, CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SendResultAsync(IResult) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SendCreatedAtAsync<TEndpoint>(object, CreateCartItemResponse, Http?, int?, bool, CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SendCreatedAtAsync(string, object, CreateCartItemResponse, bool, CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SendOkAsync(CreateCartItemResponse, CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SendOkAsync(CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SendNoContentAsync(CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SendNotFoundAsync(CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SendForbiddenAsync(CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SendRedirectAsync(string, bool, bool) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.AccessControl(string, Apply?, params string[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.AccessControl(string, params string[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.AllowAnonymous(params Http[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.AllowAnonymous(string[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.AllowFileUploads(bool) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.AllowFormData(bool) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.AuthSchemes(params string[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Claims(params string[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.ClaimsAll(params string[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Delete(params string[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Delete(string, Expression<Func<CreateCartItemApiRequest, object>>) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.DontAutoSendResponse() Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.DontAutoTag() Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.DontCatchExceptions() Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.DontThrowIfValidationFails() Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.EnableAntiforgery() Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Get(params string[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Get(string, Expression<Func<CreateCartItemApiRequest, object>>) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Group<TEndpointGroup>() Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Head(params string[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Head(string, Expression<Func<CreateCartItemApiRequest, object>>) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Patch(params string[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Patch(string, Expression<Func<CreateCartItemApiRequest, object>>) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Permissions(params string[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.PermissionsAll(params string[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Policies(params string[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Post(params string[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Post(string, Expression<Func<CreateCartItemApiRequest, object>>) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.PostProcessor<TPostProcessor>() Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.PostProcessors(params IPostProcessor<CreateCartItemApiRequest, CreateCartItemResponse>[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.PreProcessor<TPreProcessor>() Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.PreProcessors(params IPreProcessor<CreateCartItemApiRequest>[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Put(params string[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Put(string, Expression<Func<CreateCartItemApiRequest, object>>) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.RequestBinder(IRequestBinder<CreateCartItemApiRequest>) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Roles(params string[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.RoutePrefixOverride(string) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Routes(params string[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SerializerContext<TContext>(TContext) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.SerializerContext<TContext>() Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Summary(Action<EndpointSummary>) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Summary(Action<EndpointSummary<CreateCartItemApiRequest>>) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Summary(EndpointSummary) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Tags(params string[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Throttle(int, double, string) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Validator<TValidator>() Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Verbs(params Http[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Verbs(params string[]) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Version(int, int?) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.AddError(ValidationFailure) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.AddError(string, string, Severity) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.AddError(Expression<Func<CreateCartItemApiRequest, object>>, string, string, Severity) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.ThrowError(ValidationFailure, int?) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.ThrowError(string, int?) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.ThrowError(Expression<Func<CreateCartItemApiRequest, object>>, string, int?) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.ThrowIfAnyErrors(int?) Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.User Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Response Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Config Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Env Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Logger Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.BaseURL Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.HttpMethod Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Form Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.Files Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.ResponseStarted Endpoint<CreateCartItemApiRequest, CreateCartItemResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateCartItemEndpoint(ILogger<CreateCartItemEndpoint>, IMediator, ITokenService) Initializes a new instance of the CreateCartItemEndpoint class. public CreateCartItemEndpoint(ILogger<CreateCartItemEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<CreateCartItemEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(CreateCartItemApiRequest, CancellationToken) Handles the CreateCartItemApiRequest and generates a CreateCartItemResponse public override Task HandleAsync(CreateCartItemApiRequest req, CancellationToken ct) Parameters req CreateCartItemApiRequest The CreateCartItemApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.CartItem.DeleteCartItemEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.CartItem.DeleteCartItemEndpoint.html",
    "title": "Class DeleteCartItemEndpoint",
    "keywords": "Class DeleteCartItemEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.CartItem Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles deleting a CartItem public class DeleteCartItemEndpoint : Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse> DeleteCartItemEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.HandleAsync(DeleteCartItemApiRequest, CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.ExecuteAsync(DeleteCartItemApiRequest, CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.TryResolve<TService>() Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.TryResolve(Type) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Resolve<TService>() Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Resolve(Type) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.CreateScope() Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.TryResolve<TService>(string) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.TryResolve(Type, string) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Resolve<TService>(string) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Resolve(Type, string) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Route<T>(string, bool) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Query<T>(string, bool) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.ProcessorState<TState>() Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.OnBeforeValidate(DeleteCartItemApiRequest) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.OnBeforeValidateAsync(DeleteCartItemApiRequest, CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.OnAfterValidate(DeleteCartItemApiRequest) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.OnAfterValidateAsync(DeleteCartItemApiRequest, CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.OnBeforeHandle(DeleteCartItemApiRequest) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.OnBeforeHandleAsync(DeleteCartItemApiRequest, CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.OnAfterHandle(DeleteCartItemApiRequest, DeleteCartItemResponse) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.OnAfterHandleAsync(DeleteCartItemApiRequest, DeleteCartItemResponse, CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.OnValidationFailed() Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SendAsync(DeleteCartItemResponse, int, CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SendResultAsync(IResult) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SendCreatedAtAsync<TEndpoint>(object, DeleteCartItemResponse, Http?, int?, bool, CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SendCreatedAtAsync(string, object, DeleteCartItemResponse, bool, CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SendOkAsync(DeleteCartItemResponse, CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SendOkAsync(CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SendNoContentAsync(CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SendNotFoundAsync(CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SendForbiddenAsync(CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SendRedirectAsync(string, bool, bool) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.AccessControl(string, Apply?, params string[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.AccessControl(string, params string[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.AllowAnonymous(params Http[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.AllowAnonymous(string[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.AllowFileUploads(bool) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.AllowFormData(bool) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.AuthSchemes(params string[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Claims(params string[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.ClaimsAll(params string[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Delete(params string[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Delete(string, Expression<Func<DeleteCartItemApiRequest, object>>) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.DontAutoSendResponse() Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.DontAutoTag() Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.DontCatchExceptions() Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.DontThrowIfValidationFails() Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.EnableAntiforgery() Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Get(params string[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Get(string, Expression<Func<DeleteCartItemApiRequest, object>>) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Group<TEndpointGroup>() Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Head(params string[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Head(string, Expression<Func<DeleteCartItemApiRequest, object>>) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Patch(params string[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Patch(string, Expression<Func<DeleteCartItemApiRequest, object>>) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Permissions(params string[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.PermissionsAll(params string[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Policies(params string[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Post(params string[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Post(string, Expression<Func<DeleteCartItemApiRequest, object>>) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.PostProcessor<TPostProcessor>() Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.PostProcessors(params IPostProcessor<DeleteCartItemApiRequest, DeleteCartItemResponse>[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.PreProcessor<TPreProcessor>() Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.PreProcessors(params IPreProcessor<DeleteCartItemApiRequest>[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Put(params string[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Put(string, Expression<Func<DeleteCartItemApiRequest, object>>) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.RequestBinder(IRequestBinder<DeleteCartItemApiRequest>) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Roles(params string[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.RoutePrefixOverride(string) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Routes(params string[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SerializerContext<TContext>(TContext) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.SerializerContext<TContext>() Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Summary(Action<EndpointSummary>) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Summary(Action<EndpointSummary<DeleteCartItemApiRequest>>) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Summary(EndpointSummary) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Tags(params string[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Throttle(int, double, string) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Validator<TValidator>() Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Verbs(params Http[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Verbs(params string[]) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Version(int, int?) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.AddError(ValidationFailure) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.AddError(string, string, Severity) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.AddError(Expression<Func<DeleteCartItemApiRequest, object>>, string, string, Severity) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.ThrowError(ValidationFailure, int?) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.ThrowError(string, int?) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.ThrowError(Expression<Func<DeleteCartItemApiRequest, object>>, string, int?) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.ThrowIfAnyErrors(int?) Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.User Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Response Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Config Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Env Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Logger Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.BaseURL Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.HttpMethod Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Form Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.Files Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.ResponseStarted Endpoint<DeleteCartItemApiRequest, DeleteCartItemResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteCartItemEndpoint(ILogger<DeleteCartItemEndpoint>, IMediator, ITokenService) Initializes a new instance of the DeleteCartItemEndpoint class. public DeleteCartItemEndpoint(ILogger<DeleteCartItemEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<DeleteCartItemEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(DeleteCartItemApiRequest, CancellationToken) Handles the DeleteCartItemApiRequest and generates a DeleteCartItemResponse public override Task HandleAsync(DeleteCartItemApiRequest req, CancellationToken ct) Parameters req DeleteCartItemApiRequest The DeleteCartItemApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.CartItem.DeleteUserCartItemsEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.CartItem.DeleteUserCartItemsEndpoint.html",
    "title": "Class DeleteUserCartItemsEndpoint",
    "keywords": "Class DeleteUserCartItemsEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.CartItem Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles deleting a User's CartItems public class DeleteUserCartItemsEndpoint : Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse> DeleteUserCartItemsEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.HandleAsync(DeleteUserCartItemsApiRequest, CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.ExecuteAsync(DeleteUserCartItemsApiRequest, CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.TryResolve<TService>() Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.TryResolve(Type) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Resolve<TService>() Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Resolve(Type) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.CreateScope() Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.TryResolve<TService>(string) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.TryResolve(Type, string) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Resolve<TService>(string) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Resolve(Type, string) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Route<T>(string, bool) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Query<T>(string, bool) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.ProcessorState<TState>() Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.OnBeforeValidate(DeleteUserCartItemsApiRequest) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.OnBeforeValidateAsync(DeleteUserCartItemsApiRequest, CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.OnAfterValidate(DeleteUserCartItemsApiRequest) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.OnAfterValidateAsync(DeleteUserCartItemsApiRequest, CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.OnBeforeHandle(DeleteUserCartItemsApiRequest) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.OnBeforeHandleAsync(DeleteUserCartItemsApiRequest, CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.OnAfterHandle(DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.OnAfterHandleAsync(DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse, CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.OnValidationFailed() Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SendAsync(DeleteUserCartItemsResponse, int, CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SendResultAsync(IResult) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SendCreatedAtAsync<TEndpoint>(object, DeleteUserCartItemsResponse, Http?, int?, bool, CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SendCreatedAtAsync(string, object, DeleteUserCartItemsResponse, bool, CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SendOkAsync(DeleteUserCartItemsResponse, CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SendOkAsync(CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SendNoContentAsync(CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SendNotFoundAsync(CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SendForbiddenAsync(CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SendRedirectAsync(string, bool, bool) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.AccessControl(string, Apply?, params string[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.AccessControl(string, params string[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.AllowAnonymous(params Http[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.AllowAnonymous(string[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.AllowFileUploads(bool) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.AllowFormData(bool) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.AuthSchemes(params string[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Claims(params string[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.ClaimsAll(params string[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Delete(params string[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Delete(string, Expression<Func<DeleteUserCartItemsApiRequest, object>>) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.DontAutoSendResponse() Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.DontAutoTag() Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.DontCatchExceptions() Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.DontThrowIfValidationFails() Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.EnableAntiforgery() Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Get(params string[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Get(string, Expression<Func<DeleteUserCartItemsApiRequest, object>>) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Group<TEndpointGroup>() Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Head(params string[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Head(string, Expression<Func<DeleteUserCartItemsApiRequest, object>>) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Patch(params string[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Patch(string, Expression<Func<DeleteUserCartItemsApiRequest, object>>) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Permissions(params string[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.PermissionsAll(params string[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Policies(params string[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Post(params string[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Post(string, Expression<Func<DeleteUserCartItemsApiRequest, object>>) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.PostProcessor<TPostProcessor>() Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.PostProcessors(params IPostProcessor<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.PreProcessor<TPreProcessor>() Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.PreProcessors(params IPreProcessor<DeleteUserCartItemsApiRequest>[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Put(params string[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Put(string, Expression<Func<DeleteUserCartItemsApiRequest, object>>) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.RequestBinder(IRequestBinder<DeleteUserCartItemsApiRequest>) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Roles(params string[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.RoutePrefixOverride(string) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Routes(params string[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SerializerContext<TContext>(TContext) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.SerializerContext<TContext>() Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Summary(Action<EndpointSummary>) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Summary(Action<EndpointSummary<DeleteUserCartItemsApiRequest>>) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Summary(EndpointSummary) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Tags(params string[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Throttle(int, double, string) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Validator<TValidator>() Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Verbs(params Http[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Verbs(params string[]) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Version(int, int?) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.AddError(ValidationFailure) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.AddError(string, string, Severity) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.AddError(Expression<Func<DeleteUserCartItemsApiRequest, object>>, string, string, Severity) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.ThrowError(ValidationFailure, int?) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.ThrowError(string, int?) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.ThrowError(Expression<Func<DeleteUserCartItemsApiRequest, object>>, string, int?) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.ThrowIfAnyErrors(int?) Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.User Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Response Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Config Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Env Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Logger Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.BaseURL Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.HttpMethod Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Form Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.Files Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.ResponseStarted Endpoint<DeleteUserCartItemsApiRequest, DeleteUserCartItemsResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteUserCartItemsEndpoint(ILogger<DeleteUserCartItemsEndpoint>, IMediator, ITokenService) Initializes a new instance of the DeleteUserCartItemsEndpoint class. public DeleteUserCartItemsEndpoint(ILogger<DeleteUserCartItemsEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<DeleteUserCartItemsEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(DeleteUserCartItemsApiRequest, CancellationToken) Handles the DeleteUserCartItemsApiRequest and generates a DeleteUserCartItemsResponse public override Task HandleAsync(DeleteUserCartItemsApiRequest req, CancellationToken ct) Parameters req DeleteUserCartItemsApiRequest The DeleteUserCartItemsApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.CartItem.GetUserCartItemsEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.CartItem.GetUserCartItemsEndpoint.html",
    "title": "Class GetUserCartItemsEndpoint",
    "keywords": "Class GetUserCartItemsEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.CartItem Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles getting all CartItems for a User public class GetUserCartItemsEndpoint : Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse> GetUserCartItemsEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.HandleAsync(GetUserCartItemsApiRequest, CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.ExecuteAsync(GetUserCartItemsApiRequest, CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.TryResolve<TService>() Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.TryResolve(Type) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Resolve<TService>() Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Resolve(Type) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.CreateScope() Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.TryResolve<TService>(string) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.TryResolve(Type, string) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Resolve<TService>(string) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Resolve(Type, string) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Route<T>(string, bool) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Query<T>(string, bool) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.ProcessorState<TState>() Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.OnBeforeValidate(GetUserCartItemsApiRequest) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.OnBeforeValidateAsync(GetUserCartItemsApiRequest, CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.OnAfterValidate(GetUserCartItemsApiRequest) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.OnAfterValidateAsync(GetUserCartItemsApiRequest, CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.OnBeforeHandle(GetUserCartItemsApiRequest) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.OnBeforeHandleAsync(GetUserCartItemsApiRequest, CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.OnAfterHandle(GetUserCartItemsApiRequest, GetUserCartItemsResponse) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.OnAfterHandleAsync(GetUserCartItemsApiRequest, GetUserCartItemsResponse, CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.OnValidationFailed() Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SendAsync(GetUserCartItemsResponse, int, CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SendResultAsync(IResult) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SendCreatedAtAsync<TEndpoint>(object, GetUserCartItemsResponse, Http?, int?, bool, CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SendCreatedAtAsync(string, object, GetUserCartItemsResponse, bool, CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SendOkAsync(GetUserCartItemsResponse, CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SendOkAsync(CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SendNoContentAsync(CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SendNotFoundAsync(CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SendForbiddenAsync(CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SendRedirectAsync(string, bool, bool) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.AccessControl(string, Apply?, params string[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.AccessControl(string, params string[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.AllowAnonymous(params Http[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.AllowAnonymous(string[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.AllowFileUploads(bool) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.AllowFormData(bool) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.AuthSchemes(params string[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Claims(params string[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.ClaimsAll(params string[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Delete(params string[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Delete(string, Expression<Func<GetUserCartItemsApiRequest, object>>) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.DontAutoSendResponse() Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.DontAutoTag() Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.DontCatchExceptions() Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.DontThrowIfValidationFails() Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.EnableAntiforgery() Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Get(params string[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Get(string, Expression<Func<GetUserCartItemsApiRequest, object>>) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Group<TEndpointGroup>() Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Head(params string[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Head(string, Expression<Func<GetUserCartItemsApiRequest, object>>) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Patch(params string[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Patch(string, Expression<Func<GetUserCartItemsApiRequest, object>>) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Permissions(params string[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.PermissionsAll(params string[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Policies(params string[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Post(params string[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Post(string, Expression<Func<GetUserCartItemsApiRequest, object>>) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.PostProcessor<TPostProcessor>() Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.PostProcessors(params IPostProcessor<GetUserCartItemsApiRequest, GetUserCartItemsResponse>[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.PreProcessor<TPreProcessor>() Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.PreProcessors(params IPreProcessor<GetUserCartItemsApiRequest>[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Put(params string[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Put(string, Expression<Func<GetUserCartItemsApiRequest, object>>) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.RequestBinder(IRequestBinder<GetUserCartItemsApiRequest>) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Roles(params string[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.RoutePrefixOverride(string) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Routes(params string[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SerializerContext<TContext>(TContext) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.SerializerContext<TContext>() Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Summary(Action<EndpointSummary>) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Summary(Action<EndpointSummary<GetUserCartItemsApiRequest>>) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Summary(EndpointSummary) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Tags(params string[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Throttle(int, double, string) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Validator<TValidator>() Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Verbs(params Http[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Verbs(params string[]) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Version(int, int?) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.AddError(ValidationFailure) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.AddError(string, string, Severity) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.AddError(Expression<Func<GetUserCartItemsApiRequest, object>>, string, string, Severity) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.ThrowError(ValidationFailure, int?) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.ThrowError(string, int?) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.ThrowError(Expression<Func<GetUserCartItemsApiRequest, object>>, string, int?) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.ThrowIfAnyErrors(int?) Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.User Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Response Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Config Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Env Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Logger Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.BaseURL Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.HttpMethod Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Form Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.Files Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.ResponseStarted Endpoint<GetUserCartItemsApiRequest, GetUserCartItemsResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetUserCartItemsEndpoint(ILogger<GetUserCartItemsEndpoint>, IMediator, ITokenService) Initializes a new instance of the GetUserCartItemsEndpoint class. public GetUserCartItemsEndpoint(ILogger<GetUserCartItemsEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<GetUserCartItemsEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(GetUserCartItemsApiRequest, CancellationToken) Handles the GetUserCartItemsApiRequest and generates a GetUserCartItemsResponse public override Task HandleAsync(GetUserCartItemsApiRequest req, CancellationToken ct) Parameters req GetUserCartItemsApiRequest The GetUserCartItemsApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.CartItem.UpdateCartItemEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.CartItem.UpdateCartItemEndpoint.html",
    "title": "Class UpdateCartItemEndpoint",
    "keywords": "Class UpdateCartItemEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.CartItem Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles updating an existing CartItem public class UpdateCartItemEndpoint : Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse> UpdateCartItemEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.HandleAsync(UpdateCartItemApiRequest, CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.ExecuteAsync(UpdateCartItemApiRequest, CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.TryResolve<TService>() Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.TryResolve(Type) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Resolve<TService>() Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Resolve(Type) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.CreateScope() Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.TryResolve<TService>(string) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.TryResolve(Type, string) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Resolve<TService>(string) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Resolve(Type, string) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Route<T>(string, bool) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Query<T>(string, bool) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.ProcessorState<TState>() Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.OnBeforeValidate(UpdateCartItemApiRequest) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.OnBeforeValidateAsync(UpdateCartItemApiRequest, CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.OnAfterValidate(UpdateCartItemApiRequest) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.OnAfterValidateAsync(UpdateCartItemApiRequest, CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.OnBeforeHandle(UpdateCartItemApiRequest) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.OnBeforeHandleAsync(UpdateCartItemApiRequest, CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.OnAfterHandle(UpdateCartItemApiRequest, UpdateCartItemResponse) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.OnAfterHandleAsync(UpdateCartItemApiRequest, UpdateCartItemResponse, CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.OnValidationFailed() Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SendAsync(UpdateCartItemResponse, int, CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SendResultAsync(IResult) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SendCreatedAtAsync<TEndpoint>(object, UpdateCartItemResponse, Http?, int?, bool, CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SendCreatedAtAsync(string, object, UpdateCartItemResponse, bool, CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SendOkAsync(UpdateCartItemResponse, CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SendOkAsync(CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SendNoContentAsync(CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SendNotFoundAsync(CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SendForbiddenAsync(CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SendRedirectAsync(string, bool, bool) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.AccessControl(string, Apply?, params string[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.AccessControl(string, params string[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.AllowAnonymous(params Http[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.AllowAnonymous(string[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.AllowFileUploads(bool) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.AllowFormData(bool) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.AuthSchemes(params string[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Claims(params string[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.ClaimsAll(params string[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Delete(params string[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Delete(string, Expression<Func<UpdateCartItemApiRequest, object>>) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.DontAutoSendResponse() Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.DontAutoTag() Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.DontCatchExceptions() Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.DontThrowIfValidationFails() Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.EnableAntiforgery() Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Get(params string[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Get(string, Expression<Func<UpdateCartItemApiRequest, object>>) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Group<TEndpointGroup>() Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Head(params string[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Head(string, Expression<Func<UpdateCartItemApiRequest, object>>) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Patch(params string[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Patch(string, Expression<Func<UpdateCartItemApiRequest, object>>) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Permissions(params string[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.PermissionsAll(params string[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Policies(params string[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Post(params string[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Post(string, Expression<Func<UpdateCartItemApiRequest, object>>) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.PostProcessor<TPostProcessor>() Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.PostProcessors(params IPostProcessor<UpdateCartItemApiRequest, UpdateCartItemResponse>[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.PreProcessor<TPreProcessor>() Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.PreProcessors(params IPreProcessor<UpdateCartItemApiRequest>[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Put(params string[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Put(string, Expression<Func<UpdateCartItemApiRequest, object>>) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.RequestBinder(IRequestBinder<UpdateCartItemApiRequest>) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Roles(params string[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.RoutePrefixOverride(string) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Routes(params string[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SerializerContext<TContext>(TContext) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.SerializerContext<TContext>() Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Summary(Action<EndpointSummary>) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Summary(Action<EndpointSummary<UpdateCartItemApiRequest>>) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Summary(EndpointSummary) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Tags(params string[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Throttle(int, double, string) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Validator<TValidator>() Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Verbs(params Http[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Verbs(params string[]) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Version(int, int?) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.AddError(ValidationFailure) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.AddError(string, string, Severity) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.AddError(Expression<Func<UpdateCartItemApiRequest, object>>, string, string, Severity) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.ThrowError(ValidationFailure, int?) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.ThrowError(string, int?) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.ThrowError(Expression<Func<UpdateCartItemApiRequest, object>>, string, int?) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.ThrowIfAnyErrors(int?) Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.User Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Response Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Config Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Env Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Logger Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.BaseURL Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.HttpMethod Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Form Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.Files Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.ResponseStarted Endpoint<UpdateCartItemApiRequest, UpdateCartItemResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateCartItemEndpoint(ILogger<UpdateCartItemEndpoint>, IMediator, ITokenService) Initializes a new instance of the UpdateCartItemEndpoint class. public UpdateCartItemEndpoint(ILogger<UpdateCartItemEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<UpdateCartItemEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(UpdateCartItemApiRequest, CancellationToken) Handles the UpdateCartItemApiRequest and generates a UpdateCartItemResponse public override Task HandleAsync(UpdateCartItemApiRequest req, CancellationToken ct) Parameters req UpdateCartItemApiRequest The UpdateCartItemApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.CartItem.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.CartItem.html",
    "title": "Namespace Ecommerce.FastEndpoints.Endpoints.CartItem",
    "keywords": "Namespace Ecommerce.FastEndpoints.Endpoints.CartItem Classes CreateCartItemEndpoint A Fast Endpoint implementation that handles creating a new CartItem DeleteCartItemEndpoint A Fast Endpoint implementation that handles deleting a CartItem DeleteUserCartItemsEndpoint A Fast Endpoint implementation that handles deleting a User's CartItems GetUserCartItemsEndpoint A Fast Endpoint implementation that handles getting all CartItems for a User UpdateCartItemEndpoint A Fast Endpoint implementation that handles updating an existing CartItem"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Category.CreateCategoryEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Category.CreateCategoryEndpoint.html",
    "title": "Class CreateCategoryEndpoint",
    "keywords": "Class CreateCategoryEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Category Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles creating a new Category public class CreateCategoryEndpoint : Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<CreateCategoryApiRequest, CreateCategoryResponse> CreateCategoryEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.HandleAsync(CreateCategoryApiRequest, CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.ExecuteAsync(CreateCategoryApiRequest, CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.TryResolve<TService>() Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.TryResolve(Type) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Resolve<TService>() Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Resolve(Type) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.CreateScope() Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.TryResolve<TService>(string) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.TryResolve(Type, string) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Resolve<TService>(string) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Resolve(Type, string) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Route<T>(string, bool) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Query<T>(string, bool) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.ProcessorState<TState>() Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.OnBeforeValidate(CreateCategoryApiRequest) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.OnBeforeValidateAsync(CreateCategoryApiRequest, CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.OnAfterValidate(CreateCategoryApiRequest) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.OnAfterValidateAsync(CreateCategoryApiRequest, CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.OnBeforeHandle(CreateCategoryApiRequest) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.OnBeforeHandleAsync(CreateCategoryApiRequest, CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.OnAfterHandle(CreateCategoryApiRequest, CreateCategoryResponse) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.OnAfterHandleAsync(CreateCategoryApiRequest, CreateCategoryResponse, CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.OnValidationFailed() Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SendAsync(CreateCategoryResponse, int, CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SendResultAsync(IResult) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SendCreatedAtAsync<TEndpoint>(object, CreateCategoryResponse, Http?, int?, bool, CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SendCreatedAtAsync(string, object, CreateCategoryResponse, bool, CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SendOkAsync(CreateCategoryResponse, CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SendOkAsync(CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SendNoContentAsync(CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SendNotFoundAsync(CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SendForbiddenAsync(CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SendRedirectAsync(string, bool, bool) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.AccessControl(string, Apply?, params string[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.AccessControl(string, params string[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.AllowAnonymous(params Http[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.AllowAnonymous(string[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.AllowFileUploads(bool) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.AllowFormData(bool) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.AuthSchemes(params string[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Claims(params string[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.ClaimsAll(params string[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Delete(params string[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Delete(string, Expression<Func<CreateCategoryApiRequest, object>>) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.DontAutoSendResponse() Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.DontAutoTag() Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.DontCatchExceptions() Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.DontThrowIfValidationFails() Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.EnableAntiforgery() Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Get(params string[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Get(string, Expression<Func<CreateCategoryApiRequest, object>>) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Group<TEndpointGroup>() Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Head(params string[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Head(string, Expression<Func<CreateCategoryApiRequest, object>>) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Patch(params string[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Patch(string, Expression<Func<CreateCategoryApiRequest, object>>) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Permissions(params string[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.PermissionsAll(params string[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Policies(params string[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Post(params string[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Post(string, Expression<Func<CreateCategoryApiRequest, object>>) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.PostProcessor<TPostProcessor>() Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.PostProcessors(params IPostProcessor<CreateCategoryApiRequest, CreateCategoryResponse>[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.PreProcessor<TPreProcessor>() Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.PreProcessors(params IPreProcessor<CreateCategoryApiRequest>[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Put(params string[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Put(string, Expression<Func<CreateCategoryApiRequest, object>>) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.RequestBinder(IRequestBinder<CreateCategoryApiRequest>) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Roles(params string[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.RoutePrefixOverride(string) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Routes(params string[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SerializerContext<TContext>(TContext) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.SerializerContext<TContext>() Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Summary(Action<EndpointSummary>) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Summary(Action<EndpointSummary<CreateCategoryApiRequest>>) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Summary(EndpointSummary) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Tags(params string[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Throttle(int, double, string) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Validator<TValidator>() Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Verbs(params Http[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Verbs(params string[]) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Version(int, int?) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.AddError(ValidationFailure) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.AddError(string, string, Severity) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.AddError(Expression<Func<CreateCategoryApiRequest, object>>, string, string, Severity) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.ThrowError(ValidationFailure, int?) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.ThrowError(string, int?) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.ThrowError(Expression<Func<CreateCategoryApiRequest, object>>, string, int?) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.ThrowIfAnyErrors(int?) Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.User Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Response Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Config Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Env Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Logger Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.BaseURL Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.HttpMethod Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Form Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.Files Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.ResponseStarted Endpoint<CreateCategoryApiRequest, CreateCategoryResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateCategoryEndpoint(ILogger<CreateCategoryEndpoint>, IMediator, ITokenService) Initializes a new instance of the CreateCategoryEndpoint class. public CreateCategoryEndpoint(ILogger<CreateCategoryEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<CreateCategoryEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(CreateCategoryApiRequest, CancellationToken) Handles the CreateCategoryApiRequest and generates a CreateCategoryResponse public override Task HandleAsync(CreateCategoryApiRequest req, CancellationToken ct) Parameters req CreateCategoryApiRequest The CreateCategoryApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Category.DeleteCategoryEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Category.DeleteCategoryEndpoint.html",
    "title": "Class DeleteCategoryEndpoint",
    "keywords": "Class DeleteCategoryEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Category Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles deleting a Category public class DeleteCategoryEndpoint : Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse> DeleteCategoryEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.HandleAsync(DeleteCategoryApiRequest, CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.ExecuteAsync(DeleteCategoryApiRequest, CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.TryResolve<TService>() Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.TryResolve(Type) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Resolve<TService>() Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Resolve(Type) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.CreateScope() Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.TryResolve<TService>(string) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.TryResolve(Type, string) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Resolve<TService>(string) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Resolve(Type, string) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Route<T>(string, bool) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Query<T>(string, bool) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.ProcessorState<TState>() Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.OnBeforeValidate(DeleteCategoryApiRequest) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.OnBeforeValidateAsync(DeleteCategoryApiRequest, CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.OnAfterValidate(DeleteCategoryApiRequest) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.OnAfterValidateAsync(DeleteCategoryApiRequest, CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.OnBeforeHandle(DeleteCategoryApiRequest) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.OnBeforeHandleAsync(DeleteCategoryApiRequest, CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.OnAfterHandle(DeleteCategoryApiRequest, DeleteCategoryResponse) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.OnAfterHandleAsync(DeleteCategoryApiRequest, DeleteCategoryResponse, CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.OnValidationFailed() Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SendAsync(DeleteCategoryResponse, int, CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SendResultAsync(IResult) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SendCreatedAtAsync<TEndpoint>(object, DeleteCategoryResponse, Http?, int?, bool, CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SendCreatedAtAsync(string, object, DeleteCategoryResponse, bool, CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SendOkAsync(DeleteCategoryResponse, CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SendOkAsync(CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SendNoContentAsync(CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SendNotFoundAsync(CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SendForbiddenAsync(CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SendRedirectAsync(string, bool, bool) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.AccessControl(string, Apply?, params string[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.AccessControl(string, params string[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.AllowAnonymous(params Http[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.AllowAnonymous(string[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.AllowFileUploads(bool) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.AllowFormData(bool) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.AuthSchemes(params string[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Claims(params string[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.ClaimsAll(params string[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Delete(params string[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Delete(string, Expression<Func<DeleteCategoryApiRequest, object>>) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.DontAutoSendResponse() Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.DontAutoTag() Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.DontCatchExceptions() Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.DontThrowIfValidationFails() Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.EnableAntiforgery() Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Get(params string[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Get(string, Expression<Func<DeleteCategoryApiRequest, object>>) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Group<TEndpointGroup>() Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Head(params string[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Head(string, Expression<Func<DeleteCategoryApiRequest, object>>) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Patch(params string[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Patch(string, Expression<Func<DeleteCategoryApiRequest, object>>) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Permissions(params string[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.PermissionsAll(params string[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Policies(params string[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Post(params string[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Post(string, Expression<Func<DeleteCategoryApiRequest, object>>) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.PostProcessor<TPostProcessor>() Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.PostProcessors(params IPostProcessor<DeleteCategoryApiRequest, DeleteCategoryResponse>[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.PreProcessor<TPreProcessor>() Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.PreProcessors(params IPreProcessor<DeleteCategoryApiRequest>[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Put(params string[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Put(string, Expression<Func<DeleteCategoryApiRequest, object>>) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.RequestBinder(IRequestBinder<DeleteCategoryApiRequest>) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Roles(params string[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.RoutePrefixOverride(string) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Routes(params string[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SerializerContext<TContext>(TContext) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.SerializerContext<TContext>() Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Summary(Action<EndpointSummary>) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Summary(Action<EndpointSummary<DeleteCategoryApiRequest>>) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Summary(EndpointSummary) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Tags(params string[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Throttle(int, double, string) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Validator<TValidator>() Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Verbs(params Http[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Verbs(params string[]) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Version(int, int?) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.AddError(ValidationFailure) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.AddError(string, string, Severity) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.AddError(Expression<Func<DeleteCategoryApiRequest, object>>, string, string, Severity) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.ThrowError(ValidationFailure, int?) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.ThrowError(string, int?) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.ThrowError(Expression<Func<DeleteCategoryApiRequest, object>>, string, int?) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.ThrowIfAnyErrors(int?) Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.User Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Response Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Config Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Env Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Logger Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.BaseURL Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.HttpMethod Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Form Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.Files Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.ResponseStarted Endpoint<DeleteCategoryApiRequest, DeleteCategoryResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteCategoryEndpoint(ILogger<DeleteCategoryEndpoint>, IMediator, ITokenService) Initializes a new instance of the DeleteCategoryEndpoint class. public DeleteCategoryEndpoint(ILogger<DeleteCategoryEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<DeleteCategoryEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(DeleteCategoryApiRequest, CancellationToken) Handles the DeleteCategoryApiRequest and generates a DeleteCategoryResponse public override Task HandleAsync(DeleteCategoryApiRequest req, CancellationToken ct) Parameters req DeleteCategoryApiRequest The DeleteCategoryApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Category.GetAllCategoriesEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Category.GetAllCategoriesEndpoint.html",
    "title": "Class GetAllCategoriesEndpoint",
    "keywords": "Class GetAllCategoriesEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Category Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles getting all Categories public class GetAllCategoriesEndpoint : Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse> GetAllCategoriesEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.HandleAsync(GetAllCategoriesApiRequest, CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.ExecuteAsync(GetAllCategoriesApiRequest, CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.TryResolve<TService>() Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.TryResolve(Type) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Resolve<TService>() Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Resolve(Type) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.CreateScope() Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.TryResolve<TService>(string) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.TryResolve(Type, string) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Resolve<TService>(string) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Resolve(Type, string) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Route<T>(string, bool) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Query<T>(string, bool) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.ProcessorState<TState>() Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.OnBeforeValidate(GetAllCategoriesApiRequest) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.OnBeforeValidateAsync(GetAllCategoriesApiRequest, CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.OnAfterValidate(GetAllCategoriesApiRequest) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.OnAfterValidateAsync(GetAllCategoriesApiRequest, CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.OnBeforeHandle(GetAllCategoriesApiRequest) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.OnBeforeHandleAsync(GetAllCategoriesApiRequest, CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.OnAfterHandle(GetAllCategoriesApiRequest, GetAllCategoriesResponse) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.OnAfterHandleAsync(GetAllCategoriesApiRequest, GetAllCategoriesResponse, CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.OnValidationFailed() Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SendAsync(GetAllCategoriesResponse, int, CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SendResultAsync(IResult) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SendCreatedAtAsync<TEndpoint>(object, GetAllCategoriesResponse, Http?, int?, bool, CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SendCreatedAtAsync(string, object, GetAllCategoriesResponse, bool, CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SendOkAsync(GetAllCategoriesResponse, CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SendOkAsync(CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SendNoContentAsync(CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SendNotFoundAsync(CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SendForbiddenAsync(CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SendRedirectAsync(string, bool, bool) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.AccessControl(string, Apply?, params string[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.AccessControl(string, params string[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.AllowAnonymous(params Http[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.AllowAnonymous(string[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.AllowFileUploads(bool) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.AllowFormData(bool) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.AuthSchemes(params string[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Claims(params string[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.ClaimsAll(params string[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Delete(params string[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Delete(string, Expression<Func<GetAllCategoriesApiRequest, object>>) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.DontAutoSendResponse() Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.DontAutoTag() Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.DontCatchExceptions() Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.DontThrowIfValidationFails() Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.EnableAntiforgery() Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Get(params string[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Get(string, Expression<Func<GetAllCategoriesApiRequest, object>>) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Group<TEndpointGroup>() Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Head(params string[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Head(string, Expression<Func<GetAllCategoriesApiRequest, object>>) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Patch(params string[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Patch(string, Expression<Func<GetAllCategoriesApiRequest, object>>) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Permissions(params string[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.PermissionsAll(params string[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Policies(params string[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Post(params string[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Post(string, Expression<Func<GetAllCategoriesApiRequest, object>>) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.PostProcessor<TPostProcessor>() Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.PostProcessors(params IPostProcessor<GetAllCategoriesApiRequest, GetAllCategoriesResponse>[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.PreProcessor<TPreProcessor>() Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.PreProcessors(params IPreProcessor<GetAllCategoriesApiRequest>[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Put(params string[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Put(string, Expression<Func<GetAllCategoriesApiRequest, object>>) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.RequestBinder(IRequestBinder<GetAllCategoriesApiRequest>) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Roles(params string[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.RoutePrefixOverride(string) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Routes(params string[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SerializerContext<TContext>(TContext) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.SerializerContext<TContext>() Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Summary(Action<EndpointSummary>) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Summary(Action<EndpointSummary<GetAllCategoriesApiRequest>>) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Summary(EndpointSummary) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Tags(params string[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Throttle(int, double, string) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Validator<TValidator>() Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Verbs(params Http[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Verbs(params string[]) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Version(int, int?) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.AddError(ValidationFailure) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.AddError(string, string, Severity) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.AddError(Expression<Func<GetAllCategoriesApiRequest, object>>, string, string, Severity) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.ThrowError(ValidationFailure, int?) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.ThrowError(string, int?) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.ThrowError(Expression<Func<GetAllCategoriesApiRequest, object>>, string, int?) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.ThrowIfAnyErrors(int?) Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.User Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Response Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Config Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Env Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Logger Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.BaseURL Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.HttpMethod Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Form Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.Files Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.ResponseStarted Endpoint<GetAllCategoriesApiRequest, GetAllCategoriesResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetAllCategoriesEndpoint(ILogger<GetAllCategoriesEndpoint>, IMediator) Initializes a new instance of the GetAllCategoriesEndpoint class. public GetAllCategoriesEndpoint(ILogger<GetAllCategoriesEndpoint> logger, IMediator mediator) Parameters logger ILogger<GetAllCategoriesEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. Methods Configure() Configures the route for the Endpoint public override void Configure() HandleAsync(GetAllCategoriesApiRequest, CancellationToken) Handles the GetAllCategoriesApiRequest and generates a GetAllCategoriesResponse public override Task HandleAsync(GetAllCategoriesApiRequest req, CancellationToken ct) Parameters req GetAllCategoriesApiRequest The GetAllCategoriesApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Category.UpdateCategoryEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Category.UpdateCategoryEndpoint.html",
    "title": "Class UpdateCategoryEndpoint",
    "keywords": "Class UpdateCategoryEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Category Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles updating an existing Category public class UpdateCategoryEndpoint : Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse> UpdateCategoryEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.HandleAsync(UpdateCategoryApiRequest, CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.ExecuteAsync(UpdateCategoryApiRequest, CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.TryResolve<TService>() Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.TryResolve(Type) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Resolve<TService>() Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Resolve(Type) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.CreateScope() Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.TryResolve<TService>(string) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.TryResolve(Type, string) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Resolve<TService>(string) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Resolve(Type, string) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Route<T>(string, bool) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Query<T>(string, bool) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.ProcessorState<TState>() Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.OnBeforeValidate(UpdateCategoryApiRequest) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.OnBeforeValidateAsync(UpdateCategoryApiRequest, CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.OnAfterValidate(UpdateCategoryApiRequest) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.OnAfterValidateAsync(UpdateCategoryApiRequest, CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.OnBeforeHandle(UpdateCategoryApiRequest) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.OnBeforeHandleAsync(UpdateCategoryApiRequest, CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.OnAfterHandle(UpdateCategoryApiRequest, UpdateCategoryResponse) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.OnAfterHandleAsync(UpdateCategoryApiRequest, UpdateCategoryResponse, CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.OnValidationFailed() Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SendAsync(UpdateCategoryResponse, int, CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SendResultAsync(IResult) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SendCreatedAtAsync<TEndpoint>(object, UpdateCategoryResponse, Http?, int?, bool, CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SendCreatedAtAsync(string, object, UpdateCategoryResponse, bool, CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SendOkAsync(UpdateCategoryResponse, CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SendOkAsync(CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SendNoContentAsync(CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SendNotFoundAsync(CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SendForbiddenAsync(CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SendRedirectAsync(string, bool, bool) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.AccessControl(string, Apply?, params string[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.AccessControl(string, params string[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.AllowAnonymous(params Http[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.AllowAnonymous(string[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.AllowFileUploads(bool) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.AllowFormData(bool) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.AuthSchemes(params string[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Claims(params string[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.ClaimsAll(params string[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Delete(params string[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Delete(string, Expression<Func<UpdateCategoryApiRequest, object>>) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.DontAutoSendResponse() Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.DontAutoTag() Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.DontCatchExceptions() Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.DontThrowIfValidationFails() Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.EnableAntiforgery() Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Get(params string[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Get(string, Expression<Func<UpdateCategoryApiRequest, object>>) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Group<TEndpointGroup>() Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Head(params string[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Head(string, Expression<Func<UpdateCategoryApiRequest, object>>) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Patch(params string[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Patch(string, Expression<Func<UpdateCategoryApiRequest, object>>) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Permissions(params string[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.PermissionsAll(params string[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Policies(params string[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Post(params string[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Post(string, Expression<Func<UpdateCategoryApiRequest, object>>) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.PostProcessor<TPostProcessor>() Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.PostProcessors(params IPostProcessor<UpdateCategoryApiRequest, UpdateCategoryResponse>[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.PreProcessor<TPreProcessor>() Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.PreProcessors(params IPreProcessor<UpdateCategoryApiRequest>[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Put(params string[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Put(string, Expression<Func<UpdateCategoryApiRequest, object>>) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.RequestBinder(IRequestBinder<UpdateCategoryApiRequest>) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Roles(params string[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.RoutePrefixOverride(string) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Routes(params string[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SerializerContext<TContext>(TContext) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.SerializerContext<TContext>() Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Summary(Action<EndpointSummary>) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Summary(Action<EndpointSummary<UpdateCategoryApiRequest>>) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Summary(EndpointSummary) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Tags(params string[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Throttle(int, double, string) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Validator<TValidator>() Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Verbs(params Http[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Verbs(params string[]) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Version(int, int?) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.AddError(ValidationFailure) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.AddError(string, string, Severity) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.AddError(Expression<Func<UpdateCategoryApiRequest, object>>, string, string, Severity) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.ThrowError(ValidationFailure, int?) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.ThrowError(string, int?) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.ThrowError(Expression<Func<UpdateCategoryApiRequest, object>>, string, int?) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.ThrowIfAnyErrors(int?) Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.User Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Response Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Config Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Env Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Logger Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.BaseURL Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.HttpMethod Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Form Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.Files Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.ResponseStarted Endpoint<UpdateCategoryApiRequest, UpdateCategoryResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateCategoryEndpoint(ILogger<UpdateCategoryEndpoint>, IMediator, ITokenService) Initializes a new instance of the UpdateCategoryEndpoint class. public UpdateCategoryEndpoint(ILogger<UpdateCategoryEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<UpdateCategoryEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(UpdateCategoryApiRequest, CancellationToken) Handles the UpdateCategoryApiRequest and generates a UpdateCategoryResponse public override Task HandleAsync(UpdateCategoryApiRequest req, CancellationToken ct) Parameters req UpdateCategoryApiRequest The UpdateCategoryApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Category.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Category.html",
    "title": "Namespace Ecommerce.FastEndpoints.Endpoints.Category",
    "keywords": "Namespace Ecommerce.FastEndpoints.Endpoints.Category Classes CreateCategoryEndpoint A Fast Endpoint implementation that handles creating a new Category DeleteCategoryEndpoint A Fast Endpoint implementation that handles deleting a Category GetAllCategoriesEndpoint A Fast Endpoint implementation that handles getting all Categories UpdateCategoryEndpoint A Fast Endpoint implementation that handles updating an existing Category"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Order.CreateOrderEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Order.CreateOrderEndpoint.html",
    "title": "Class CreateOrderEndpoint",
    "keywords": "Class CreateOrderEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Order Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles creating a new Order public class CreateOrderEndpoint : Endpoint<CreateOrderApiRequest, CreateOrderResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<CreateOrderApiRequest, CreateOrderResponse> CreateOrderEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<CreateOrderApiRequest, CreateOrderResponse>.HandleAsync(CreateOrderApiRequest, CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.ExecuteAsync(CreateOrderApiRequest, CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.TryResolve<TService>() Endpoint<CreateOrderApiRequest, CreateOrderResponse>.TryResolve(Type) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Resolve<TService>() Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Resolve(Type) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.CreateScope() Endpoint<CreateOrderApiRequest, CreateOrderResponse>.TryResolve<TService>(string) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.TryResolve(Type, string) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Resolve<TService>(string) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Resolve(Type, string) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Route<T>(string, bool) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Query<T>(string, bool) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.ProcessorState<TState>() Endpoint<CreateOrderApiRequest, CreateOrderResponse>.OnBeforeValidate(CreateOrderApiRequest) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.OnBeforeValidateAsync(CreateOrderApiRequest, CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.OnAfterValidate(CreateOrderApiRequest) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.OnAfterValidateAsync(CreateOrderApiRequest, CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.OnBeforeHandle(CreateOrderApiRequest) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.OnBeforeHandleAsync(CreateOrderApiRequest, CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.OnAfterHandle(CreateOrderApiRequest, CreateOrderResponse) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.OnAfterHandleAsync(CreateOrderApiRequest, CreateOrderResponse, CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.OnValidationFailed() Endpoint<CreateOrderApiRequest, CreateOrderResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SendAsync(CreateOrderResponse, int, CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SendResultAsync(IResult) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SendCreatedAtAsync<TEndpoint>(object, CreateOrderResponse, Http?, int?, bool, CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SendCreatedAtAsync(string, object, CreateOrderResponse, bool, CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SendOkAsync(CreateOrderResponse, CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SendOkAsync(CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SendNoContentAsync(CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SendNotFoundAsync(CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SendForbiddenAsync(CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SendRedirectAsync(string, bool, bool) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.AccessControl(string, Apply?, params string[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.AccessControl(string, params string[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.AllowAnonymous(params Http[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.AllowAnonymous(string[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.AllowFileUploads(bool) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.AllowFormData(bool) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.AuthSchemes(params string[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Claims(params string[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.ClaimsAll(params string[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Delete(params string[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Delete(string, Expression<Func<CreateOrderApiRequest, object>>) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.DontAutoSendResponse() Endpoint<CreateOrderApiRequest, CreateOrderResponse>.DontAutoTag() Endpoint<CreateOrderApiRequest, CreateOrderResponse>.DontCatchExceptions() Endpoint<CreateOrderApiRequest, CreateOrderResponse>.DontThrowIfValidationFails() Endpoint<CreateOrderApiRequest, CreateOrderResponse>.EnableAntiforgery() Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Get(params string[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Get(string, Expression<Func<CreateOrderApiRequest, object>>) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Group<TEndpointGroup>() Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Head(params string[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Head(string, Expression<Func<CreateOrderApiRequest, object>>) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Patch(params string[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Patch(string, Expression<Func<CreateOrderApiRequest, object>>) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Permissions(params string[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.PermissionsAll(params string[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Policies(params string[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Post(params string[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Post(string, Expression<Func<CreateOrderApiRequest, object>>) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.PostProcessor<TPostProcessor>() Endpoint<CreateOrderApiRequest, CreateOrderResponse>.PostProcessors(params IPostProcessor<CreateOrderApiRequest, CreateOrderResponse>[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.PreProcessor<TPreProcessor>() Endpoint<CreateOrderApiRequest, CreateOrderResponse>.PreProcessors(params IPreProcessor<CreateOrderApiRequest>[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Put(params string[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Put(string, Expression<Func<CreateOrderApiRequest, object>>) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.RequestBinder(IRequestBinder<CreateOrderApiRequest>) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Roles(params string[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.RoutePrefixOverride(string) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Routes(params string[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SerializerContext<TContext>(TContext) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.SerializerContext<TContext>() Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Summary(Action<EndpointSummary>) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Summary(Action<EndpointSummary<CreateOrderApiRequest>>) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Summary(EndpointSummary) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Tags(params string[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Throttle(int, double, string) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Validator<TValidator>() Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Verbs(params Http[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Verbs(params string[]) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Version(int, int?) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.AddError(ValidationFailure) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.AddError(string, string, Severity) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.AddError(Expression<Func<CreateOrderApiRequest, object>>, string, string, Severity) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.ThrowError(ValidationFailure, int?) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.ThrowError(string, int?) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.ThrowError(Expression<Func<CreateOrderApiRequest, object>>, string, int?) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.ThrowIfAnyErrors(int?) Endpoint<CreateOrderApiRequest, CreateOrderResponse>.User Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Response Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Config Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Env Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Logger Endpoint<CreateOrderApiRequest, CreateOrderResponse>.BaseURL Endpoint<CreateOrderApiRequest, CreateOrderResponse>.HttpMethod Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Form Endpoint<CreateOrderApiRequest, CreateOrderResponse>.Files Endpoint<CreateOrderApiRequest, CreateOrderResponse>.ResponseStarted Endpoint<CreateOrderApiRequest, CreateOrderResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateOrderEndpoint(ILogger<CreateOrderEndpoint>, IMediator, ITokenService) Initializes a new instance of the CreateOrderEndpoint class. public CreateOrderEndpoint(ILogger<CreateOrderEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<CreateOrderEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(CreateOrderApiRequest, CancellationToken) Handles the CreateOrderApiRequest and generates a CreateOrderResponse public override Task HandleAsync(CreateOrderApiRequest req, CancellationToken ct) Parameters req CreateOrderApiRequest The CreateOrderApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Order.GetAllOrdersByUserIdEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Order.GetAllOrdersByUserIdEndpoint.html",
    "title": "Class GetAllOrdersByUserIdEndpoint",
    "keywords": "Class GetAllOrdersByUserIdEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Order Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles getting all Orders for a User public class GetAllOrdersByUserIdEndpoint : Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse> GetAllOrdersByUserIdEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.HandleAsync(GetAllOrdersByUserIdApiRequest, CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.ExecuteAsync(GetAllOrdersByUserIdApiRequest, CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.TryResolve<TService>() Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.TryResolve(Type) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Resolve<TService>() Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Resolve(Type) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.CreateScope() Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.TryResolve<TService>(string) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.TryResolve(Type, string) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Resolve<TService>(string) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Resolve(Type, string) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Route<T>(string, bool) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Query<T>(string, bool) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.ProcessorState<TState>() Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.OnBeforeValidate(GetAllOrdersByUserIdApiRequest) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.OnBeforeValidateAsync(GetAllOrdersByUserIdApiRequest, CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.OnAfterValidate(GetAllOrdersByUserIdApiRequest) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.OnAfterValidateAsync(GetAllOrdersByUserIdApiRequest, CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.OnBeforeHandle(GetAllOrdersByUserIdApiRequest) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.OnBeforeHandleAsync(GetAllOrdersByUserIdApiRequest, CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.OnAfterHandle(GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.OnAfterHandleAsync(GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse, CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.OnValidationFailed() Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SendAsync(GetAllOrdersByUserIdResponse, int, CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SendResultAsync(IResult) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SendCreatedAtAsync<TEndpoint>(object, GetAllOrdersByUserIdResponse, Http?, int?, bool, CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SendCreatedAtAsync(string, object, GetAllOrdersByUserIdResponse, bool, CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SendOkAsync(GetAllOrdersByUserIdResponse, CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SendOkAsync(CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SendNoContentAsync(CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SendNotFoundAsync(CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SendForbiddenAsync(CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SendRedirectAsync(string, bool, bool) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.AccessControl(string, Apply?, params string[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.AccessControl(string, params string[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.AllowAnonymous(params Http[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.AllowAnonymous(string[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.AllowFileUploads(bool) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.AllowFormData(bool) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.AuthSchemes(params string[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Claims(params string[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.ClaimsAll(params string[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Delete(params string[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Delete(string, Expression<Func<GetAllOrdersByUserIdApiRequest, object>>) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.DontAutoSendResponse() Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.DontAutoTag() Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.DontCatchExceptions() Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.DontThrowIfValidationFails() Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.EnableAntiforgery() Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Get(params string[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Get(string, Expression<Func<GetAllOrdersByUserIdApiRequest, object>>) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Group<TEndpointGroup>() Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Head(params string[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Head(string, Expression<Func<GetAllOrdersByUserIdApiRequest, object>>) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Patch(params string[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Patch(string, Expression<Func<GetAllOrdersByUserIdApiRequest, object>>) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Permissions(params string[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.PermissionsAll(params string[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Policies(params string[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Post(params string[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Post(string, Expression<Func<GetAllOrdersByUserIdApiRequest, object>>) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.PostProcessor<TPostProcessor>() Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.PostProcessors(params IPostProcessor<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.PreProcessor<TPreProcessor>() Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.PreProcessors(params IPreProcessor<GetAllOrdersByUserIdApiRequest>[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Put(params string[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Put(string, Expression<Func<GetAllOrdersByUserIdApiRequest, object>>) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.RequestBinder(IRequestBinder<GetAllOrdersByUserIdApiRequest>) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Roles(params string[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.RoutePrefixOverride(string) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Routes(params string[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SerializerContext<TContext>(TContext) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.SerializerContext<TContext>() Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Summary(Action<EndpointSummary>) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Summary(Action<EndpointSummary<GetAllOrdersByUserIdApiRequest>>) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Summary(EndpointSummary) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Tags(params string[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Throttle(int, double, string) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Validator<TValidator>() Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Verbs(params Http[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Verbs(params string[]) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Version(int, int?) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.AddError(ValidationFailure) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.AddError(string, string, Severity) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.AddError(Expression<Func<GetAllOrdersByUserIdApiRequest, object>>, string, string, Severity) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.ThrowError(ValidationFailure, int?) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.ThrowError(string, int?) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.ThrowError(Expression<Func<GetAllOrdersByUserIdApiRequest, object>>, string, int?) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.ThrowIfAnyErrors(int?) Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.User Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Response Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Config Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Env Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Logger Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.BaseURL Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.HttpMethod Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Form Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.Files Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.ResponseStarted Endpoint<GetAllOrdersByUserIdApiRequest, GetAllOrdersByUserIdResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetAllOrdersByUserIdEndpoint(ILogger<GetAllOrdersByUserIdEndpoint>, IMediator, ITokenService) Initializes a new instance of the GetAllOrdersByUserIdEndpoint class. public GetAllOrdersByUserIdEndpoint(ILogger<GetAllOrdersByUserIdEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<GetAllOrdersByUserIdEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(GetAllOrdersByUserIdApiRequest, CancellationToken) Handles the GetAllOrdersByUserIdApiRequest and generates a GetAllOrdersByUserIdResponse public override Task HandleAsync(GetAllOrdersByUserIdApiRequest req, CancellationToken ct) Parameters req GetAllOrdersByUserIdApiRequest The GetAllOrdersByUserIdApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Order.GetOrderAfterSuccessfulCheckoutEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Order.GetOrderAfterSuccessfulCheckoutEndpoint.html",
    "title": "Class GetOrderAfterSuccessfulCheckoutEndpoint",
    "keywords": "Class GetOrderAfterSuccessfulCheckoutEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Order Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles getting an Order after a successful checkout public class GetOrderAfterSuccessfulCheckoutEndpoint : Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse> GetOrderAfterSuccessfulCheckoutEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.HandleAsync(GetOrderAfterSuccessfulCheckoutApiRequest, CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.ExecuteAsync(GetOrderAfterSuccessfulCheckoutApiRequest, CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.TryResolve<TService>() Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.TryResolve(Type) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Resolve<TService>() Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Resolve(Type) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.CreateScope() Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.TryResolve<TService>(string) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.TryResolve(Type, string) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Resolve<TService>(string) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Resolve(Type, string) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Route<T>(string, bool) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Query<T>(string, bool) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.ProcessorState<TState>() Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.OnBeforeValidate(GetOrderAfterSuccessfulCheckoutApiRequest) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.OnBeforeValidateAsync(GetOrderAfterSuccessfulCheckoutApiRequest, CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.OnAfterValidate(GetOrderAfterSuccessfulCheckoutApiRequest) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.OnAfterValidateAsync(GetOrderAfterSuccessfulCheckoutApiRequest, CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.OnBeforeHandle(GetOrderAfterSuccessfulCheckoutApiRequest) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.OnBeforeHandleAsync(GetOrderAfterSuccessfulCheckoutApiRequest, CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.OnAfterHandle(GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.OnAfterHandleAsync(GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse, CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.OnValidationFailed() Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SendAsync(GetOrderAfterSuccessfulCheckoutResponse, int, CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SendResultAsync(IResult) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SendCreatedAtAsync<TEndpoint>(object, GetOrderAfterSuccessfulCheckoutResponse, Http?, int?, bool, CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SendCreatedAtAsync(string, object, GetOrderAfterSuccessfulCheckoutResponse, bool, CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SendOkAsync(GetOrderAfterSuccessfulCheckoutResponse, CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SendOkAsync(CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SendNoContentAsync(CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SendNotFoundAsync(CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SendForbiddenAsync(CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SendRedirectAsync(string, bool, bool) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.AccessControl(string, Apply?, params string[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.AccessControl(string, params string[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.AllowAnonymous(params Http[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.AllowAnonymous(string[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.AllowFileUploads(bool) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.AllowFormData(bool) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.AuthSchemes(params string[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Claims(params string[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.ClaimsAll(params string[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Delete(params string[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Delete(string, Expression<Func<GetOrderAfterSuccessfulCheckoutApiRequest, object>>) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.DontAutoSendResponse() Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.DontAutoTag() Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.DontCatchExceptions() Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.DontThrowIfValidationFails() Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.EnableAntiforgery() Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Get(params string[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Get(string, Expression<Func<GetOrderAfterSuccessfulCheckoutApiRequest, object>>) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Group<TEndpointGroup>() Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Head(params string[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Head(string, Expression<Func<GetOrderAfterSuccessfulCheckoutApiRequest, object>>) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Patch(params string[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Patch(string, Expression<Func<GetOrderAfterSuccessfulCheckoutApiRequest, object>>) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Permissions(params string[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.PermissionsAll(params string[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Policies(params string[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Post(params string[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Post(string, Expression<Func<GetOrderAfterSuccessfulCheckoutApiRequest, object>>) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.PostProcessor<TPostProcessor>() Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.PostProcessors(params IPostProcessor<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.PreProcessor<TPreProcessor>() Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.PreProcessors(params IPreProcessor<GetOrderAfterSuccessfulCheckoutApiRequest>[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Put(params string[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Put(string, Expression<Func<GetOrderAfterSuccessfulCheckoutApiRequest, object>>) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.RequestBinder(IRequestBinder<GetOrderAfterSuccessfulCheckoutApiRequest>) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Roles(params string[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.RoutePrefixOverride(string) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Routes(params string[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SerializerContext<TContext>(TContext) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.SerializerContext<TContext>() Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Summary(Action<EndpointSummary>) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Summary(Action<EndpointSummary<GetOrderAfterSuccessfulCheckoutApiRequest>>) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Summary(EndpointSummary) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Tags(params string[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Throttle(int, double, string) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Validator<TValidator>() Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Verbs(params Http[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Verbs(params string[]) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Version(int, int?) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.AddError(ValidationFailure) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.AddError(string, string, Severity) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.AddError(Expression<Func<GetOrderAfterSuccessfulCheckoutApiRequest, object>>, string, string, Severity) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.ThrowError(ValidationFailure, int?) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.ThrowError(string, int?) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.ThrowError(Expression<Func<GetOrderAfterSuccessfulCheckoutApiRequest, object>>, string, int?) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.ThrowIfAnyErrors(int?) Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.User Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Response Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Config Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Env Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Logger Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.BaseURL Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.HttpMethod Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Form Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.Files Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.ResponseStarted Endpoint<GetOrderAfterSuccessfulCheckoutApiRequest, GetOrderAfterSuccessfulCheckoutResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetOrderAfterSuccessfulCheckoutEndpoint(ILogger<GetOrderAfterSuccessfulCheckoutEndpoint>, IMediator, ITokenService) Initializes a new instance of the GetOrderAfterSuccessfulCheckoutEndpoint class. public GetOrderAfterSuccessfulCheckoutEndpoint(ILogger<GetOrderAfterSuccessfulCheckoutEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<GetOrderAfterSuccessfulCheckoutEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(GetOrderAfterSuccessfulCheckoutApiRequest, CancellationToken) Handles the GetOrderAfterSuccessfulCheckoutApiRequest and generates a GetOrderAfterSuccessfulCheckoutResponse public override Task HandleAsync(GetOrderAfterSuccessfulCheckoutApiRequest req, CancellationToken ct) Parameters req GetOrderAfterSuccessfulCheckoutApiRequest The GetOrderAfterSuccessfulCheckoutApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Order.GetOrderByIdEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Order.GetOrderByIdEndpoint.html",
    "title": "Class GetOrderByIdEndpoint",
    "keywords": "Class GetOrderByIdEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Order Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles getting a Order based on a Id public class GetOrderByIdEndpoint : Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse> GetOrderByIdEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.HandleAsync(GetOrderByIdApiRequest, CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.ExecuteAsync(GetOrderByIdApiRequest, CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.TryResolve<TService>() Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.TryResolve(Type) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Resolve<TService>() Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Resolve(Type) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.CreateScope() Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.TryResolve<TService>(string) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.TryResolve(Type, string) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Resolve<TService>(string) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Resolve(Type, string) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Route<T>(string, bool) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Query<T>(string, bool) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.ProcessorState<TState>() Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.OnBeforeValidate(GetOrderByIdApiRequest) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.OnBeforeValidateAsync(GetOrderByIdApiRequest, CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.OnAfterValidate(GetOrderByIdApiRequest) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.OnAfterValidateAsync(GetOrderByIdApiRequest, CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.OnBeforeHandle(GetOrderByIdApiRequest) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.OnBeforeHandleAsync(GetOrderByIdApiRequest, CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.OnAfterHandle(GetOrderByIdApiRequest, GetOrderByIdResponse) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.OnAfterHandleAsync(GetOrderByIdApiRequest, GetOrderByIdResponse, CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.OnValidationFailed() Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SendAsync(GetOrderByIdResponse, int, CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SendResultAsync(IResult) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SendCreatedAtAsync<TEndpoint>(object, GetOrderByIdResponse, Http?, int?, bool, CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SendCreatedAtAsync(string, object, GetOrderByIdResponse, bool, CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SendOkAsync(GetOrderByIdResponse, CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SendOkAsync(CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SendNoContentAsync(CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SendNotFoundAsync(CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SendForbiddenAsync(CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SendRedirectAsync(string, bool, bool) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.AccessControl(string, Apply?, params string[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.AccessControl(string, params string[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.AllowAnonymous(params Http[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.AllowAnonymous(string[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.AllowFileUploads(bool) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.AllowFormData(bool) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.AuthSchemes(params string[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Claims(params string[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.ClaimsAll(params string[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Delete(params string[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Delete(string, Expression<Func<GetOrderByIdApiRequest, object>>) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.DontAutoSendResponse() Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.DontAutoTag() Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.DontCatchExceptions() Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.DontThrowIfValidationFails() Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.EnableAntiforgery() Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Get(params string[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Get(string, Expression<Func<GetOrderByIdApiRequest, object>>) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Group<TEndpointGroup>() Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Head(params string[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Head(string, Expression<Func<GetOrderByIdApiRequest, object>>) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Patch(params string[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Patch(string, Expression<Func<GetOrderByIdApiRequest, object>>) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Permissions(params string[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.PermissionsAll(params string[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Policies(params string[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Post(params string[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Post(string, Expression<Func<GetOrderByIdApiRequest, object>>) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.PostProcessor<TPostProcessor>() Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.PostProcessors(params IPostProcessor<GetOrderByIdApiRequest, GetOrderByIdResponse>[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.PreProcessor<TPreProcessor>() Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.PreProcessors(params IPreProcessor<GetOrderByIdApiRequest>[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Put(params string[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Put(string, Expression<Func<GetOrderByIdApiRequest, object>>) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.RequestBinder(IRequestBinder<GetOrderByIdApiRequest>) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Roles(params string[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.RoutePrefixOverride(string) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Routes(params string[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SerializerContext<TContext>(TContext) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.SerializerContext<TContext>() Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Summary(Action<EndpointSummary>) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Summary(Action<EndpointSummary<GetOrderByIdApiRequest>>) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Summary(EndpointSummary) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Tags(params string[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Throttle(int, double, string) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Validator<TValidator>() Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Verbs(params Http[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Verbs(params string[]) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Version(int, int?) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.AddError(ValidationFailure) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.AddError(string, string, Severity) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.AddError(Expression<Func<GetOrderByIdApiRequest, object>>, string, string, Severity) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.ThrowError(ValidationFailure, int?) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.ThrowError(string, int?) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.ThrowError(Expression<Func<GetOrderByIdApiRequest, object>>, string, int?) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.ThrowIfAnyErrors(int?) Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.User Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Response Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Config Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Env Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Logger Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.BaseURL Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.HttpMethod Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Form Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.Files Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.ResponseStarted Endpoint<GetOrderByIdApiRequest, GetOrderByIdResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetOrderByIdEndpoint(ILogger<GetOrderByIdEndpoint>, IMediator, ITokenService) Initializes a new instance of the GetOrderByIdEndpoint class. public GetOrderByIdEndpoint(ILogger<GetOrderByIdEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<GetOrderByIdEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(GetOrderByIdApiRequest, CancellationToken) Handles the GetOrderByIdApiRequest and generates a GetOrderByIdResponse public override Task HandleAsync(GetOrderByIdApiRequest req, CancellationToken ct) Parameters req GetOrderByIdApiRequest The GetOrderByIdApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Order.UpdateOrderEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Order.UpdateOrderEndpoint.html",
    "title": "Class UpdateOrderEndpoint",
    "keywords": "Class UpdateOrderEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Order Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles updating an existing Order public class UpdateOrderEndpoint : Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<UpdateOrderApiRequest, UpdateOrderResponse> UpdateOrderEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.HandleAsync(UpdateOrderApiRequest, CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.ExecuteAsync(UpdateOrderApiRequest, CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.TryResolve<TService>() Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.TryResolve(Type) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Resolve<TService>() Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Resolve(Type) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.CreateScope() Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.TryResolve<TService>(string) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.TryResolve(Type, string) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Resolve<TService>(string) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Resolve(Type, string) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Route<T>(string, bool) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Query<T>(string, bool) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.ProcessorState<TState>() Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.OnBeforeValidate(UpdateOrderApiRequest) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.OnBeforeValidateAsync(UpdateOrderApiRequest, CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.OnAfterValidate(UpdateOrderApiRequest) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.OnAfterValidateAsync(UpdateOrderApiRequest, CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.OnBeforeHandle(UpdateOrderApiRequest) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.OnBeforeHandleAsync(UpdateOrderApiRequest, CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.OnAfterHandle(UpdateOrderApiRequest, UpdateOrderResponse) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.OnAfterHandleAsync(UpdateOrderApiRequest, UpdateOrderResponse, CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.OnValidationFailed() Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SendAsync(UpdateOrderResponse, int, CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SendResultAsync(IResult) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SendCreatedAtAsync<TEndpoint>(object, UpdateOrderResponse, Http?, int?, bool, CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SendCreatedAtAsync(string, object, UpdateOrderResponse, bool, CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SendOkAsync(UpdateOrderResponse, CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SendOkAsync(CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SendNoContentAsync(CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SendNotFoundAsync(CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SendForbiddenAsync(CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SendRedirectAsync(string, bool, bool) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.AccessControl(string, Apply?, params string[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.AccessControl(string, params string[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.AllowAnonymous(params Http[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.AllowAnonymous(string[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.AllowFileUploads(bool) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.AllowFormData(bool) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.AuthSchemes(params string[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Claims(params string[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.ClaimsAll(params string[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Delete(params string[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Delete(string, Expression<Func<UpdateOrderApiRequest, object>>) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.DontAutoSendResponse() Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.DontAutoTag() Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.DontCatchExceptions() Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.DontThrowIfValidationFails() Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.EnableAntiforgery() Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Get(params string[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Get(string, Expression<Func<UpdateOrderApiRequest, object>>) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Group<TEndpointGroup>() Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Head(params string[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Head(string, Expression<Func<UpdateOrderApiRequest, object>>) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Patch(params string[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Patch(string, Expression<Func<UpdateOrderApiRequest, object>>) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Permissions(params string[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.PermissionsAll(params string[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Policies(params string[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Post(params string[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Post(string, Expression<Func<UpdateOrderApiRequest, object>>) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.PostProcessor<TPostProcessor>() Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.PostProcessors(params IPostProcessor<UpdateOrderApiRequest, UpdateOrderResponse>[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.PreProcessor<TPreProcessor>() Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.PreProcessors(params IPreProcessor<UpdateOrderApiRequest>[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Put(params string[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Put(string, Expression<Func<UpdateOrderApiRequest, object>>) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.RequestBinder(IRequestBinder<UpdateOrderApiRequest>) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Roles(params string[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.RoutePrefixOverride(string) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Routes(params string[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SerializerContext<TContext>(TContext) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.SerializerContext<TContext>() Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Summary(Action<EndpointSummary>) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Summary(Action<EndpointSummary<UpdateOrderApiRequest>>) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Summary(EndpointSummary) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Tags(params string[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Throttle(int, double, string) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Validator<TValidator>() Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Verbs(params Http[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Verbs(params string[]) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Version(int, int?) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.AddError(ValidationFailure) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.AddError(string, string, Severity) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.AddError(Expression<Func<UpdateOrderApiRequest, object>>, string, string, Severity) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.ThrowError(ValidationFailure, int?) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.ThrowError(string, int?) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.ThrowError(Expression<Func<UpdateOrderApiRequest, object>>, string, int?) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.ThrowIfAnyErrors(int?) Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.User Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Response Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Config Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Env Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Logger Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.BaseURL Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.HttpMethod Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Form Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.Files Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.ResponseStarted Endpoint<UpdateOrderApiRequest, UpdateOrderResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateOrderEndpoint(ILogger<UpdateOrderEndpoint>, IMediator, ITokenService) Initializes a new instance of the UpdateOrderEndpoint class. public UpdateOrderEndpoint(ILogger<UpdateOrderEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<UpdateOrderEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(UpdateOrderApiRequest, CancellationToken) Handles the UpdateOrderApiRequest and generates a UpdateOrderResponse public override Task HandleAsync(UpdateOrderApiRequest req, CancellationToken ct) Parameters req UpdateOrderApiRequest The UpdateOrderApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Order.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Order.html",
    "title": "Namespace Ecommerce.FastEndpoints.Endpoints.Order",
    "keywords": "Namespace Ecommerce.FastEndpoints.Endpoints.Order Classes CreateOrderEndpoint A Fast Endpoint implementation that handles creating a new Order GetAllOrdersByUserIdEndpoint A Fast Endpoint implementation that handles getting all Orders for a User GetOrderAfterSuccessfulCheckoutEndpoint A Fast Endpoint implementation that handles getting an Order after a successful checkout GetOrderByIdEndpoint A Fast Endpoint implementation that handles getting a Order based on a Id UpdateOrderEndpoint A Fast Endpoint implementation that handles updating an existing Order"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.PayPal.PayPalCancelReturnEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.PayPal.PayPalCancelReturnEndpoint.html",
    "title": "Class PayPalCancelReturnEndpoint",
    "keywords": "Class PayPalCancelReturnEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.PayPal Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles a cancel return from PayPal public class PayPalCancelReturnEndpoint : EndpointWithoutRequest, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<EmptyRequest, object> EndpointWithoutRequest PayPalCancelReturnEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members EndpointWithoutRequest.HandleAsync(EmptyRequest, CancellationToken) EndpointWithoutRequest.ExecuteAsync(CancellationToken) EndpointWithoutRequest.ExecuteAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, object>.HandleAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, object>.ExecuteAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, object>.TryResolve<TService>() Endpoint<EmptyRequest, object>.TryResolve(Type) Endpoint<EmptyRequest, object>.Resolve<TService>() Endpoint<EmptyRequest, object>.Resolve(Type) Endpoint<EmptyRequest, object>.CreateScope() Endpoint<EmptyRequest, object>.TryResolve<TService>(string) Endpoint<EmptyRequest, object>.TryResolve(Type, string) Endpoint<EmptyRequest, object>.Resolve<TService>(string) Endpoint<EmptyRequest, object>.Resolve(Type, string) Endpoint<EmptyRequest, object>.Route<T>(string, bool) Endpoint<EmptyRequest, object>.Query<T>(string, bool) Endpoint<EmptyRequest, object>.FormFileSectionsAsync(CancellationToken) Endpoint<EmptyRequest, object>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<EmptyRequest, object>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<EmptyRequest, object>.ProcessorState<TState>() Endpoint<EmptyRequest, object>.OnBeforeValidate(EmptyRequest) Endpoint<EmptyRequest, object>.OnBeforeValidateAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, object>.OnAfterValidate(EmptyRequest) Endpoint<EmptyRequest, object>.OnAfterValidateAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, object>.OnBeforeHandle(EmptyRequest) Endpoint<EmptyRequest, object>.OnBeforeHandleAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, object>.OnAfterHandle(EmptyRequest, object) Endpoint<EmptyRequest, object>.OnAfterHandleAsync(EmptyRequest, object, CancellationToken) Endpoint<EmptyRequest, object>.OnValidationFailed() Endpoint<EmptyRequest, object>.OnValidationFailedAsync(CancellationToken) Endpoint<EmptyRequest, object>.SendAsync(object, int, CancellationToken) Endpoint<EmptyRequest, object>.SendResultAsync(IResult) Endpoint<EmptyRequest, object>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<EmptyRequest, object>.SendCreatedAtAsync<TEndpoint>(object, object, Http?, int?, bool, CancellationToken) Endpoint<EmptyRequest, object>.SendCreatedAtAsync(string, object, object, bool, CancellationToken) Endpoint<EmptyRequest, object>.SendStringAsync(string, int, string, CancellationToken) Endpoint<EmptyRequest, object>.SendOkAsync(object, CancellationToken) Endpoint<EmptyRequest, object>.SendOkAsync(CancellationToken) Endpoint<EmptyRequest, object>.SendErrorsAsync(int, CancellationToken) Endpoint<EmptyRequest, object>.SendNoContentAsync(CancellationToken) Endpoint<EmptyRequest, object>.SendNotFoundAsync(CancellationToken) Endpoint<EmptyRequest, object>.SendUnauthorizedAsync(CancellationToken) Endpoint<EmptyRequest, object>.SendForbiddenAsync(CancellationToken) Endpoint<EmptyRequest, object>.SendRedirectAsync(string, bool, bool) Endpoint<EmptyRequest, object>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<EmptyRequest, object>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<EmptyRequest, object>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<EmptyRequest, object>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<EmptyRequest, object>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<EmptyRequest, object>.SendEmptyJsonObject(CancellationToken) Endpoint<EmptyRequest, object>.AccessControl(string, Apply?, params string[]) Endpoint<EmptyRequest, object>.AccessControl(string, params string[]) Endpoint<EmptyRequest, object>.AllowAnonymous(params Http[]) Endpoint<EmptyRequest, object>.AllowAnonymous(string[]) Endpoint<EmptyRequest, object>.AllowFileUploads(bool) Endpoint<EmptyRequest, object>.AllowFormData(bool) Endpoint<EmptyRequest, object>.AuthSchemes(params string[]) Endpoint<EmptyRequest, object>.Claims(params string[]) Endpoint<EmptyRequest, object>.ClaimsAll(params string[]) Endpoint<EmptyRequest, object>.Delete(params string[]) Endpoint<EmptyRequest, object>.Delete(string, Expression<Func<EmptyRequest, object>>) Endpoint<EmptyRequest, object>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<EmptyRequest, object>.DontAutoSendResponse() Endpoint<EmptyRequest, object>.DontAutoTag() Endpoint<EmptyRequest, object>.DontCatchExceptions() Endpoint<EmptyRequest, object>.DontThrowIfValidationFails() Endpoint<EmptyRequest, object>.EnableAntiforgery() Endpoint<EmptyRequest, object>.Get(params string[]) Endpoint<EmptyRequest, object>.Get(string, Expression<Func<EmptyRequest, object>>) Endpoint<EmptyRequest, object>.Group<TEndpointGroup>() Endpoint<EmptyRequest, object>.Head(params string[]) Endpoint<EmptyRequest, object>.Head(string, Expression<Func<EmptyRequest, object>>) Endpoint<EmptyRequest, object>.Options(Action<RouteHandlerBuilder>) Endpoint<EmptyRequest, object>.Patch(params string[]) Endpoint<EmptyRequest, object>.Patch(string, Expression<Func<EmptyRequest, object>>) Endpoint<EmptyRequest, object>.Permissions(params string[]) Endpoint<EmptyRequest, object>.PermissionsAll(params string[]) Endpoint<EmptyRequest, object>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<EmptyRequest, object>.Policies(params string[]) Endpoint<EmptyRequest, object>.Post(params string[]) Endpoint<EmptyRequest, object>.Post(string, Expression<Func<EmptyRequest, object>>) Endpoint<EmptyRequest, object>.PostProcessor<TPostProcessor>() Endpoint<EmptyRequest, object>.PostProcessors(params IPostProcessor<EmptyRequest, object>[]) Endpoint<EmptyRequest, object>.PreProcessor<TPreProcessor>() Endpoint<EmptyRequest, object>.PreProcessors(params IPreProcessor<EmptyRequest>[]) Endpoint<EmptyRequest, object>.Put(params string[]) Endpoint<EmptyRequest, object>.Put(string, Expression<Func<EmptyRequest, object>>) Endpoint<EmptyRequest, object>.RequestBinder(IRequestBinder<EmptyRequest>) Endpoint<EmptyRequest, object>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<EmptyRequest, object>.ResponseInterceptor(IResponseInterceptor) Endpoint<EmptyRequest, object>.Roles(params string[]) Endpoint<EmptyRequest, object>.RoutePrefixOverride(string) Endpoint<EmptyRequest, object>.Routes(params string[]) Endpoint<EmptyRequest, object>.SerializerContext<TContext>(TContext) Endpoint<EmptyRequest, object>.SerializerContext<TContext>() Endpoint<EmptyRequest, object>.Summary(Action<EndpointSummary>) Endpoint<EmptyRequest, object>.Summary(Action<EndpointSummary<EmptyRequest>>) Endpoint<EmptyRequest, object>.Summary(EndpointSummary) Endpoint<EmptyRequest, object>.Tags(params string[]) Endpoint<EmptyRequest, object>.Throttle(int, double, string) Endpoint<EmptyRequest, object>.Validator<TValidator>() Endpoint<EmptyRequest, object>.Verbs(params Http[]) Endpoint<EmptyRequest, object>.Verbs(params string[]) Endpoint<EmptyRequest, object>.Version(int, int?) Endpoint<EmptyRequest, object>.AddError(ValidationFailure) Endpoint<EmptyRequest, object>.AddError(string, string, Severity) Endpoint<EmptyRequest, object>.AddError(Expression<Func<EmptyRequest, object>>, string, string, Severity) Endpoint<EmptyRequest, object>.ThrowError(ValidationFailure, int?) Endpoint<EmptyRequest, object>.ThrowError(string, int?) Endpoint<EmptyRequest, object>.ThrowError(Expression<Func<EmptyRequest, object>>, string, int?) Endpoint<EmptyRequest, object>.ThrowIfAnyErrors(int?) Endpoint<EmptyRequest, object>.User Endpoint<EmptyRequest, object>.Response Endpoint<EmptyRequest, object>.Config Endpoint<EmptyRequest, object>.Env Endpoint<EmptyRequest, object>.Logger Endpoint<EmptyRequest, object>.BaseURL Endpoint<EmptyRequest, object>.HttpMethod Endpoint<EmptyRequest, object>.Form Endpoint<EmptyRequest, object>.Files Endpoint<EmptyRequest, object>.ResponseStarted Endpoint<EmptyRequest, object>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PayPalCancelReturnEndpoint(ILogger<PayPalCancelReturnEndpoint>, IMediator, IConfiguration) Initializes a new instance of the PayPalCancelReturnEndpoint class. public PayPalCancelReturnEndpoint(ILogger<PayPalCancelReturnEndpoint> logger, IMediator mediator, IConfiguration configuration) Parameters logger ILogger<PayPalCancelReturnEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. configuration IConfiguration The IConfiguration instance used for configuration settings. Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(CancellationToken) Handles the PayPal cancel return public override Task HandleAsync(CancellationToken ct) Parameters ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.PayPal.PayPalSuccessReturnEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.PayPal.PayPalSuccessReturnEndpoint.html",
    "title": "Class PayPalSuccessReturnEndpoint",
    "keywords": "Class PayPalSuccessReturnEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.PayPal Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles a successful return from placing an order with PayPal public class PayPalSuccessReturnEndpoint : EndpointWithoutRequest, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<EmptyRequest, object> EndpointWithoutRequest PayPalSuccessReturnEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members EndpointWithoutRequest.HandleAsync(EmptyRequest, CancellationToken) EndpointWithoutRequest.ExecuteAsync(CancellationToken) EndpointWithoutRequest.ExecuteAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, object>.HandleAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, object>.ExecuteAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, object>.TryResolve<TService>() Endpoint<EmptyRequest, object>.TryResolve(Type) Endpoint<EmptyRequest, object>.Resolve<TService>() Endpoint<EmptyRequest, object>.Resolve(Type) Endpoint<EmptyRequest, object>.CreateScope() Endpoint<EmptyRequest, object>.TryResolve<TService>(string) Endpoint<EmptyRequest, object>.TryResolve(Type, string) Endpoint<EmptyRequest, object>.Resolve<TService>(string) Endpoint<EmptyRequest, object>.Resolve(Type, string) Endpoint<EmptyRequest, object>.Route<T>(string, bool) Endpoint<EmptyRequest, object>.Query<T>(string, bool) Endpoint<EmptyRequest, object>.FormFileSectionsAsync(CancellationToken) Endpoint<EmptyRequest, object>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<EmptyRequest, object>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<EmptyRequest, object>.ProcessorState<TState>() Endpoint<EmptyRequest, object>.OnBeforeValidate(EmptyRequest) Endpoint<EmptyRequest, object>.OnBeforeValidateAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, object>.OnAfterValidate(EmptyRequest) Endpoint<EmptyRequest, object>.OnAfterValidateAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, object>.OnBeforeHandle(EmptyRequest) Endpoint<EmptyRequest, object>.OnBeforeHandleAsync(EmptyRequest, CancellationToken) Endpoint<EmptyRequest, object>.OnAfterHandle(EmptyRequest, object) Endpoint<EmptyRequest, object>.OnAfterHandleAsync(EmptyRequest, object, CancellationToken) Endpoint<EmptyRequest, object>.OnValidationFailed() Endpoint<EmptyRequest, object>.OnValidationFailedAsync(CancellationToken) Endpoint<EmptyRequest, object>.SendAsync(object, int, CancellationToken) Endpoint<EmptyRequest, object>.SendResultAsync(IResult) Endpoint<EmptyRequest, object>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<EmptyRequest, object>.SendCreatedAtAsync<TEndpoint>(object, object, Http?, int?, bool, CancellationToken) Endpoint<EmptyRequest, object>.SendCreatedAtAsync(string, object, object, bool, CancellationToken) Endpoint<EmptyRequest, object>.SendStringAsync(string, int, string, CancellationToken) Endpoint<EmptyRequest, object>.SendOkAsync(object, CancellationToken) Endpoint<EmptyRequest, object>.SendOkAsync(CancellationToken) Endpoint<EmptyRequest, object>.SendErrorsAsync(int, CancellationToken) Endpoint<EmptyRequest, object>.SendNoContentAsync(CancellationToken) Endpoint<EmptyRequest, object>.SendNotFoundAsync(CancellationToken) Endpoint<EmptyRequest, object>.SendUnauthorizedAsync(CancellationToken) Endpoint<EmptyRequest, object>.SendForbiddenAsync(CancellationToken) Endpoint<EmptyRequest, object>.SendRedirectAsync(string, bool, bool) Endpoint<EmptyRequest, object>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<EmptyRequest, object>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<EmptyRequest, object>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<EmptyRequest, object>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<EmptyRequest, object>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<EmptyRequest, object>.SendEmptyJsonObject(CancellationToken) Endpoint<EmptyRequest, object>.AccessControl(string, Apply?, params string[]) Endpoint<EmptyRequest, object>.AccessControl(string, params string[]) Endpoint<EmptyRequest, object>.AllowAnonymous(params Http[]) Endpoint<EmptyRequest, object>.AllowAnonymous(string[]) Endpoint<EmptyRequest, object>.AllowFileUploads(bool) Endpoint<EmptyRequest, object>.AllowFormData(bool) Endpoint<EmptyRequest, object>.AuthSchemes(params string[]) Endpoint<EmptyRequest, object>.Claims(params string[]) Endpoint<EmptyRequest, object>.ClaimsAll(params string[]) Endpoint<EmptyRequest, object>.Delete(params string[]) Endpoint<EmptyRequest, object>.Delete(string, Expression<Func<EmptyRequest, object>>) Endpoint<EmptyRequest, object>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<EmptyRequest, object>.DontAutoSendResponse() Endpoint<EmptyRequest, object>.DontAutoTag() Endpoint<EmptyRequest, object>.DontCatchExceptions() Endpoint<EmptyRequest, object>.DontThrowIfValidationFails() Endpoint<EmptyRequest, object>.EnableAntiforgery() Endpoint<EmptyRequest, object>.Get(params string[]) Endpoint<EmptyRequest, object>.Get(string, Expression<Func<EmptyRequest, object>>) Endpoint<EmptyRequest, object>.Group<TEndpointGroup>() Endpoint<EmptyRequest, object>.Head(params string[]) Endpoint<EmptyRequest, object>.Head(string, Expression<Func<EmptyRequest, object>>) Endpoint<EmptyRequest, object>.Options(Action<RouteHandlerBuilder>) Endpoint<EmptyRequest, object>.Patch(params string[]) Endpoint<EmptyRequest, object>.Patch(string, Expression<Func<EmptyRequest, object>>) Endpoint<EmptyRequest, object>.Permissions(params string[]) Endpoint<EmptyRequest, object>.PermissionsAll(params string[]) Endpoint<EmptyRequest, object>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<EmptyRequest, object>.Policies(params string[]) Endpoint<EmptyRequest, object>.Post(params string[]) Endpoint<EmptyRequest, object>.Post(string, Expression<Func<EmptyRequest, object>>) Endpoint<EmptyRequest, object>.PostProcessor<TPostProcessor>() Endpoint<EmptyRequest, object>.PostProcessors(params IPostProcessor<EmptyRequest, object>[]) Endpoint<EmptyRequest, object>.PreProcessor<TPreProcessor>() Endpoint<EmptyRequest, object>.PreProcessors(params IPreProcessor<EmptyRequest>[]) Endpoint<EmptyRequest, object>.Put(params string[]) Endpoint<EmptyRequest, object>.Put(string, Expression<Func<EmptyRequest, object>>) Endpoint<EmptyRequest, object>.RequestBinder(IRequestBinder<EmptyRequest>) Endpoint<EmptyRequest, object>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<EmptyRequest, object>.ResponseInterceptor(IResponseInterceptor) Endpoint<EmptyRequest, object>.Roles(params string[]) Endpoint<EmptyRequest, object>.RoutePrefixOverride(string) Endpoint<EmptyRequest, object>.Routes(params string[]) Endpoint<EmptyRequest, object>.SerializerContext<TContext>(TContext) Endpoint<EmptyRequest, object>.SerializerContext<TContext>() Endpoint<EmptyRequest, object>.Summary(Action<EndpointSummary>) Endpoint<EmptyRequest, object>.Summary(Action<EndpointSummary<EmptyRequest>>) Endpoint<EmptyRequest, object>.Summary(EndpointSummary) Endpoint<EmptyRequest, object>.Tags(params string[]) Endpoint<EmptyRequest, object>.Throttle(int, double, string) Endpoint<EmptyRequest, object>.Validator<TValidator>() Endpoint<EmptyRequest, object>.Verbs(params Http[]) Endpoint<EmptyRequest, object>.Verbs(params string[]) Endpoint<EmptyRequest, object>.Version(int, int?) Endpoint<EmptyRequest, object>.AddError(ValidationFailure) Endpoint<EmptyRequest, object>.AddError(string, string, Severity) Endpoint<EmptyRequest, object>.AddError(Expression<Func<EmptyRequest, object>>, string, string, Severity) Endpoint<EmptyRequest, object>.ThrowError(ValidationFailure, int?) Endpoint<EmptyRequest, object>.ThrowError(string, int?) Endpoint<EmptyRequest, object>.ThrowError(Expression<Func<EmptyRequest, object>>, string, int?) Endpoint<EmptyRequest, object>.ThrowIfAnyErrors(int?) Endpoint<EmptyRequest, object>.User Endpoint<EmptyRequest, object>.Response Endpoint<EmptyRequest, object>.Config Endpoint<EmptyRequest, object>.Env Endpoint<EmptyRequest, object>.Logger Endpoint<EmptyRequest, object>.BaseURL Endpoint<EmptyRequest, object>.HttpMethod Endpoint<EmptyRequest, object>.Form Endpoint<EmptyRequest, object>.Files Endpoint<EmptyRequest, object>.ResponseStarted Endpoint<EmptyRequest, object>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PayPalSuccessReturnEndpoint(ILogger<PayPalSuccessReturnEndpoint>, IMediator, IConfiguration) Initializes a new instance of the PayPalSuccessReturnEndpoint class. public PayPalSuccessReturnEndpoint(ILogger<PayPalSuccessReturnEndpoint> logger, IMediator mediator, IConfiguration configuration) Parameters logger ILogger<PayPalSuccessReturnEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. configuration IConfiguration The IConfiguration instance used for configuration settings. Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(CancellationToken) Handles the PayPal success return public override Task HandleAsync(CancellationToken ct) Parameters ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.PayPal.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.PayPal.html",
    "title": "Namespace Ecommerce.FastEndpoints.Endpoints.PayPal",
    "keywords": "Namespace Ecommerce.FastEndpoints.Endpoints.PayPal Classes PayPalCancelReturnEndpoint A Fast Endpoint implementation that handles a cancel return from PayPal PayPalSuccessReturnEndpoint A Fast Endpoint implementation that handles a successful return from placing an order with PayPal"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Product.CreateProductEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Product.CreateProductEndpoint.html",
    "title": "Class CreateProductEndpoint",
    "keywords": "Class CreateProductEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Product Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles creating a new Product public class CreateProductEndpoint : Endpoint<CreateProductApiRequest, CreateProductResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<CreateProductApiRequest, CreateProductResponse> CreateProductEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<CreateProductApiRequest, CreateProductResponse>.HandleAsync(CreateProductApiRequest, CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.ExecuteAsync(CreateProductApiRequest, CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.TryResolve<TService>() Endpoint<CreateProductApiRequest, CreateProductResponse>.TryResolve(Type) Endpoint<CreateProductApiRequest, CreateProductResponse>.Resolve<TService>() Endpoint<CreateProductApiRequest, CreateProductResponse>.Resolve(Type) Endpoint<CreateProductApiRequest, CreateProductResponse>.CreateScope() Endpoint<CreateProductApiRequest, CreateProductResponse>.TryResolve<TService>(string) Endpoint<CreateProductApiRequest, CreateProductResponse>.TryResolve(Type, string) Endpoint<CreateProductApiRequest, CreateProductResponse>.Resolve<TService>(string) Endpoint<CreateProductApiRequest, CreateProductResponse>.Resolve(Type, string) Endpoint<CreateProductApiRequest, CreateProductResponse>.Route<T>(string, bool) Endpoint<CreateProductApiRequest, CreateProductResponse>.Query<T>(string, bool) Endpoint<CreateProductApiRequest, CreateProductResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<CreateProductApiRequest, CreateProductResponse>.ProcessorState<TState>() Endpoint<CreateProductApiRequest, CreateProductResponse>.OnBeforeValidate(CreateProductApiRequest) Endpoint<CreateProductApiRequest, CreateProductResponse>.OnBeforeValidateAsync(CreateProductApiRequest, CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.OnAfterValidate(CreateProductApiRequest) Endpoint<CreateProductApiRequest, CreateProductResponse>.OnAfterValidateAsync(CreateProductApiRequest, CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.OnBeforeHandle(CreateProductApiRequest) Endpoint<CreateProductApiRequest, CreateProductResponse>.OnBeforeHandleAsync(CreateProductApiRequest, CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.OnAfterHandle(CreateProductApiRequest, CreateProductResponse) Endpoint<CreateProductApiRequest, CreateProductResponse>.OnAfterHandleAsync(CreateProductApiRequest, CreateProductResponse, CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.OnValidationFailed() Endpoint<CreateProductApiRequest, CreateProductResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.SendAsync(CreateProductResponse, int, CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.SendResultAsync(IResult) Endpoint<CreateProductApiRequest, CreateProductResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.SendCreatedAtAsync<TEndpoint>(object, CreateProductResponse, Http?, int?, bool, CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.SendCreatedAtAsync(string, object, CreateProductResponse, bool, CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.SendOkAsync(CreateProductResponse, CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.SendOkAsync(CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.SendNoContentAsync(CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.SendNotFoundAsync(CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.SendForbiddenAsync(CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.SendRedirectAsync(string, bool, bool) Endpoint<CreateProductApiRequest, CreateProductResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<CreateProductApiRequest, CreateProductResponse>.AccessControl(string, Apply?, params string[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.AccessControl(string, params string[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.AllowAnonymous(params Http[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.AllowAnonymous(string[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.AllowFileUploads(bool) Endpoint<CreateProductApiRequest, CreateProductResponse>.AllowFormData(bool) Endpoint<CreateProductApiRequest, CreateProductResponse>.AuthSchemes(params string[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.Claims(params string[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.ClaimsAll(params string[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.Delete(params string[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.Delete(string, Expression<Func<CreateProductApiRequest, object>>) Endpoint<CreateProductApiRequest, CreateProductResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<CreateProductApiRequest, CreateProductResponse>.DontAutoSendResponse() Endpoint<CreateProductApiRequest, CreateProductResponse>.DontAutoTag() Endpoint<CreateProductApiRequest, CreateProductResponse>.DontCatchExceptions() Endpoint<CreateProductApiRequest, CreateProductResponse>.DontThrowIfValidationFails() Endpoint<CreateProductApiRequest, CreateProductResponse>.EnableAntiforgery() Endpoint<CreateProductApiRequest, CreateProductResponse>.Get(params string[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.Get(string, Expression<Func<CreateProductApiRequest, object>>) Endpoint<CreateProductApiRequest, CreateProductResponse>.Group<TEndpointGroup>() Endpoint<CreateProductApiRequest, CreateProductResponse>.Head(params string[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.Head(string, Expression<Func<CreateProductApiRequest, object>>) Endpoint<CreateProductApiRequest, CreateProductResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<CreateProductApiRequest, CreateProductResponse>.Patch(params string[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.Patch(string, Expression<Func<CreateProductApiRequest, object>>) Endpoint<CreateProductApiRequest, CreateProductResponse>.Permissions(params string[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.PermissionsAll(params string[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<CreateProductApiRequest, CreateProductResponse>.Policies(params string[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.Post(params string[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.Post(string, Expression<Func<CreateProductApiRequest, object>>) Endpoint<CreateProductApiRequest, CreateProductResponse>.PostProcessor<TPostProcessor>() Endpoint<CreateProductApiRequest, CreateProductResponse>.PostProcessors(params IPostProcessor<CreateProductApiRequest, CreateProductResponse>[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.PreProcessor<TPreProcessor>() Endpoint<CreateProductApiRequest, CreateProductResponse>.PreProcessors(params IPreProcessor<CreateProductApiRequest>[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.Put(params string[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.Put(string, Expression<Func<CreateProductApiRequest, object>>) Endpoint<CreateProductApiRequest, CreateProductResponse>.RequestBinder(IRequestBinder<CreateProductApiRequest>) Endpoint<CreateProductApiRequest, CreateProductResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<CreateProductApiRequest, CreateProductResponse>.Roles(params string[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.RoutePrefixOverride(string) Endpoint<CreateProductApiRequest, CreateProductResponse>.Routes(params string[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.SerializerContext<TContext>(TContext) Endpoint<CreateProductApiRequest, CreateProductResponse>.SerializerContext<TContext>() Endpoint<CreateProductApiRequest, CreateProductResponse>.Summary(Action<EndpointSummary>) Endpoint<CreateProductApiRequest, CreateProductResponse>.Summary(Action<EndpointSummary<CreateProductApiRequest>>) Endpoint<CreateProductApiRequest, CreateProductResponse>.Summary(EndpointSummary) Endpoint<CreateProductApiRequest, CreateProductResponse>.Tags(params string[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.Throttle(int, double, string) Endpoint<CreateProductApiRequest, CreateProductResponse>.Validator<TValidator>() Endpoint<CreateProductApiRequest, CreateProductResponse>.Verbs(params Http[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.Verbs(params string[]) Endpoint<CreateProductApiRequest, CreateProductResponse>.Version(int, int?) Endpoint<CreateProductApiRequest, CreateProductResponse>.AddError(ValidationFailure) Endpoint<CreateProductApiRequest, CreateProductResponse>.AddError(string, string, Severity) Endpoint<CreateProductApiRequest, CreateProductResponse>.AddError(Expression<Func<CreateProductApiRequest, object>>, string, string, Severity) Endpoint<CreateProductApiRequest, CreateProductResponse>.ThrowError(ValidationFailure, int?) Endpoint<CreateProductApiRequest, CreateProductResponse>.ThrowError(string, int?) Endpoint<CreateProductApiRequest, CreateProductResponse>.ThrowError(Expression<Func<CreateProductApiRequest, object>>, string, int?) Endpoint<CreateProductApiRequest, CreateProductResponse>.ThrowIfAnyErrors(int?) Endpoint<CreateProductApiRequest, CreateProductResponse>.User Endpoint<CreateProductApiRequest, CreateProductResponse>.Response Endpoint<CreateProductApiRequest, CreateProductResponse>.Config Endpoint<CreateProductApiRequest, CreateProductResponse>.Env Endpoint<CreateProductApiRequest, CreateProductResponse>.Logger Endpoint<CreateProductApiRequest, CreateProductResponse>.BaseURL Endpoint<CreateProductApiRequest, CreateProductResponse>.HttpMethod Endpoint<CreateProductApiRequest, CreateProductResponse>.Form Endpoint<CreateProductApiRequest, CreateProductResponse>.Files Endpoint<CreateProductApiRequest, CreateProductResponse>.ResponseStarted Endpoint<CreateProductApiRequest, CreateProductResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateProductEndpoint(ILogger<CreateProductEndpoint>, IMediator, ITokenService) Initializes a new instance of the CreateProductEndpoint class. public CreateProductEndpoint(ILogger<CreateProductEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<CreateProductEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(CreateProductApiRequest, CancellationToken) Handles the CreateProductApiRequest and generates a CreateProductResponse public override Task HandleAsync(CreateProductApiRequest req, CancellationToken ct) Parameters req CreateProductApiRequest The CreateProductApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Product.DeleteProductEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Product.DeleteProductEndpoint.html",
    "title": "Class DeleteProductEndpoint",
    "keywords": "Class DeleteProductEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Product Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles deleting a Product public class DeleteProductEndpoint : Endpoint<DeleteProductApiRequest, DeleteProductResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<DeleteProductApiRequest, DeleteProductResponse> DeleteProductEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<DeleteProductApiRequest, DeleteProductResponse>.HandleAsync(DeleteProductApiRequest, CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.ExecuteAsync(DeleteProductApiRequest, CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.TryResolve<TService>() Endpoint<DeleteProductApiRequest, DeleteProductResponse>.TryResolve(Type) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Resolve<TService>() Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Resolve(Type) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.CreateScope() Endpoint<DeleteProductApiRequest, DeleteProductResponse>.TryResolve<TService>(string) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.TryResolve(Type, string) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Resolve<TService>(string) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Resolve(Type, string) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Route<T>(string, bool) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Query<T>(string, bool) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.ProcessorState<TState>() Endpoint<DeleteProductApiRequest, DeleteProductResponse>.OnBeforeValidate(DeleteProductApiRequest) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.OnBeforeValidateAsync(DeleteProductApiRequest, CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.OnAfterValidate(DeleteProductApiRequest) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.OnAfterValidateAsync(DeleteProductApiRequest, CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.OnBeforeHandle(DeleteProductApiRequest) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.OnBeforeHandleAsync(DeleteProductApiRequest, CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.OnAfterHandle(DeleteProductApiRequest, DeleteProductResponse) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.OnAfterHandleAsync(DeleteProductApiRequest, DeleteProductResponse, CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.OnValidationFailed() Endpoint<DeleteProductApiRequest, DeleteProductResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SendAsync(DeleteProductResponse, int, CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SendResultAsync(IResult) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SendCreatedAtAsync<TEndpoint>(object, DeleteProductResponse, Http?, int?, bool, CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SendCreatedAtAsync(string, object, DeleteProductResponse, bool, CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SendOkAsync(DeleteProductResponse, CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SendOkAsync(CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SendNoContentAsync(CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SendNotFoundAsync(CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SendForbiddenAsync(CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SendRedirectAsync(string, bool, bool) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.AccessControl(string, Apply?, params string[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.AccessControl(string, params string[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.AllowAnonymous(params Http[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.AllowAnonymous(string[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.AllowFileUploads(bool) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.AllowFormData(bool) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.AuthSchemes(params string[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Claims(params string[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.ClaimsAll(params string[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Delete(params string[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Delete(string, Expression<Func<DeleteProductApiRequest, object>>) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.DontAutoSendResponse() Endpoint<DeleteProductApiRequest, DeleteProductResponse>.DontAutoTag() Endpoint<DeleteProductApiRequest, DeleteProductResponse>.DontCatchExceptions() Endpoint<DeleteProductApiRequest, DeleteProductResponse>.DontThrowIfValidationFails() Endpoint<DeleteProductApiRequest, DeleteProductResponse>.EnableAntiforgery() Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Get(params string[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Get(string, Expression<Func<DeleteProductApiRequest, object>>) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Group<TEndpointGroup>() Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Head(params string[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Head(string, Expression<Func<DeleteProductApiRequest, object>>) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Patch(params string[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Patch(string, Expression<Func<DeleteProductApiRequest, object>>) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Permissions(params string[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.PermissionsAll(params string[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Policies(params string[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Post(params string[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Post(string, Expression<Func<DeleteProductApiRequest, object>>) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.PostProcessor<TPostProcessor>() Endpoint<DeleteProductApiRequest, DeleteProductResponse>.PostProcessors(params IPostProcessor<DeleteProductApiRequest, DeleteProductResponse>[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.PreProcessor<TPreProcessor>() Endpoint<DeleteProductApiRequest, DeleteProductResponse>.PreProcessors(params IPreProcessor<DeleteProductApiRequest>[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Put(params string[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Put(string, Expression<Func<DeleteProductApiRequest, object>>) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.RequestBinder(IRequestBinder<DeleteProductApiRequest>) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Roles(params string[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.RoutePrefixOverride(string) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Routes(params string[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SerializerContext<TContext>(TContext) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.SerializerContext<TContext>() Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Summary(Action<EndpointSummary>) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Summary(Action<EndpointSummary<DeleteProductApiRequest>>) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Summary(EndpointSummary) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Tags(params string[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Throttle(int, double, string) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Validator<TValidator>() Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Verbs(params Http[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Verbs(params string[]) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Version(int, int?) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.AddError(ValidationFailure) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.AddError(string, string, Severity) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.AddError(Expression<Func<DeleteProductApiRequest, object>>, string, string, Severity) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.ThrowError(ValidationFailure, int?) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.ThrowError(string, int?) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.ThrowError(Expression<Func<DeleteProductApiRequest, object>>, string, int?) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.ThrowIfAnyErrors(int?) Endpoint<DeleteProductApiRequest, DeleteProductResponse>.User Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Response Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Config Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Env Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Logger Endpoint<DeleteProductApiRequest, DeleteProductResponse>.BaseURL Endpoint<DeleteProductApiRequest, DeleteProductResponse>.HttpMethod Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Form Endpoint<DeleteProductApiRequest, DeleteProductResponse>.Files Endpoint<DeleteProductApiRequest, DeleteProductResponse>.ResponseStarted Endpoint<DeleteProductApiRequest, DeleteProductResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteProductEndpoint(ILogger<DeleteProductEndpoint>, IMediator, ITokenService) Initializes a new instance of the DeleteProductEndpoint class. public DeleteProductEndpoint(ILogger<DeleteProductEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<DeleteProductEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(DeleteProductApiRequest, CancellationToken) Handles the DeleteProductApiRequest and generates a DeleteProductResponse public override Task HandleAsync(DeleteProductApiRequest req, CancellationToken ct) Parameters req DeleteProductApiRequest The DeleteProductApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Product.GetAllProductsByCategoryIdEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Product.GetAllProductsByCategoryIdEndpoint.html",
    "title": "Class GetAllProductsByCategoryIdEndpoint",
    "keywords": "Class GetAllProductsByCategoryIdEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Product Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles getting all Products in a Category public class GetAllProductsByCategoryIdEndpoint : Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse> GetAllProductsByCategoryIdEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.HandleAsync(GetAllProductsByCategoryIdApiRequest, CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.ExecuteAsync(GetAllProductsByCategoryIdApiRequest, CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.TryResolve<TService>() Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.TryResolve(Type) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Resolve<TService>() Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Resolve(Type) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.CreateScope() Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.TryResolve<TService>(string) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.TryResolve(Type, string) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Resolve<TService>(string) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Resolve(Type, string) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Route<T>(string, bool) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Query<T>(string, bool) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.ProcessorState<TState>() Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.OnBeforeValidate(GetAllProductsByCategoryIdApiRequest) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.OnBeforeValidateAsync(GetAllProductsByCategoryIdApiRequest, CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.OnAfterValidate(GetAllProductsByCategoryIdApiRequest) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.OnAfterValidateAsync(GetAllProductsByCategoryIdApiRequest, CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.OnBeforeHandle(GetAllProductsByCategoryIdApiRequest) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.OnBeforeHandleAsync(GetAllProductsByCategoryIdApiRequest, CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.OnAfterHandle(GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.OnAfterHandleAsync(GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse, CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.OnValidationFailed() Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SendAsync(GetAllProductsByCategoryIdResponse, int, CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SendResultAsync(IResult) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SendCreatedAtAsync<TEndpoint>(object, GetAllProductsByCategoryIdResponse, Http?, int?, bool, CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SendCreatedAtAsync(string, object, GetAllProductsByCategoryIdResponse, bool, CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SendOkAsync(GetAllProductsByCategoryIdResponse, CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SendOkAsync(CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SendNoContentAsync(CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SendNotFoundAsync(CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SendForbiddenAsync(CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SendRedirectAsync(string, bool, bool) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.AccessControl(string, Apply?, params string[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.AccessControl(string, params string[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.AllowAnonymous(params Http[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.AllowAnonymous(string[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.AllowFileUploads(bool) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.AllowFormData(bool) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.AuthSchemes(params string[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Claims(params string[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.ClaimsAll(params string[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Delete(params string[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Delete(string, Expression<Func<GetAllProductsByCategoryIdApiRequest, object>>) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.DontAutoSendResponse() Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.DontAutoTag() Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.DontCatchExceptions() Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.DontThrowIfValidationFails() Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.EnableAntiforgery() Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Get(params string[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Get(string, Expression<Func<GetAllProductsByCategoryIdApiRequest, object>>) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Group<TEndpointGroup>() Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Head(params string[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Head(string, Expression<Func<GetAllProductsByCategoryIdApiRequest, object>>) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Patch(params string[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Patch(string, Expression<Func<GetAllProductsByCategoryIdApiRequest, object>>) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Permissions(params string[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.PermissionsAll(params string[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Policies(params string[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Post(params string[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Post(string, Expression<Func<GetAllProductsByCategoryIdApiRequest, object>>) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.PostProcessor<TPostProcessor>() Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.PostProcessors(params IPostProcessor<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.PreProcessor<TPreProcessor>() Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.PreProcessors(params IPreProcessor<GetAllProductsByCategoryIdApiRequest>[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Put(params string[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Put(string, Expression<Func<GetAllProductsByCategoryIdApiRequest, object>>) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.RequestBinder(IRequestBinder<GetAllProductsByCategoryIdApiRequest>) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Roles(params string[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.RoutePrefixOverride(string) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Routes(params string[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SerializerContext<TContext>(TContext) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.SerializerContext<TContext>() Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Summary(Action<EndpointSummary>) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Summary(Action<EndpointSummary<GetAllProductsByCategoryIdApiRequest>>) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Summary(EndpointSummary) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Tags(params string[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Throttle(int, double, string) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Validator<TValidator>() Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Verbs(params Http[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Verbs(params string[]) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Version(int, int?) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.AddError(ValidationFailure) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.AddError(string, string, Severity) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.AddError(Expression<Func<GetAllProductsByCategoryIdApiRequest, object>>, string, string, Severity) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.ThrowError(ValidationFailure, int?) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.ThrowError(string, int?) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.ThrowError(Expression<Func<GetAllProductsByCategoryIdApiRequest, object>>, string, int?) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.ThrowIfAnyErrors(int?) Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.User Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Response Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Config Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Env Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Logger Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.BaseURL Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.HttpMethod Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Form Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.Files Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.ResponseStarted Endpoint<GetAllProductsByCategoryIdApiRequest, GetAllProductsByCategoryIdResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetAllProductsByCategoryIdEndpoint(ILogger<GetAllProductsByCategoryIdEndpoint>, IMediator) Initializes a new instance of the GetAllProductsByCategoryIdEndpoint class. public GetAllProductsByCategoryIdEndpoint(ILogger<GetAllProductsByCategoryIdEndpoint> logger, IMediator mediator) Parameters logger ILogger<GetAllProductsByCategoryIdEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. Methods Configure() Configures the route for the Endpoint public override void Configure() HandleAsync(GetAllProductsByCategoryIdApiRequest, CancellationToken) Handles the GetAllProductsByCategoryIdApiRequest and generates a GetAllProductsByCategoryIdResponse public override Task HandleAsync(GetAllProductsByCategoryIdApiRequest req, CancellationToken ct) Parameters req GetAllProductsByCategoryIdApiRequest The GetAllProductsByCategoryIdApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Product.GetProductByIdEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Product.GetProductByIdEndpoint.html",
    "title": "Class GetProductByIdEndpoint",
    "keywords": "Class GetProductByIdEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Product Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles getting a Product based on a Id public class GetProductByIdEndpoint : Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<GetProductByIdApiRequest, GetProductByIdResponse> GetProductByIdEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.HandleAsync(GetProductByIdApiRequest, CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.ExecuteAsync(GetProductByIdApiRequest, CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.TryResolve<TService>() Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.TryResolve(Type) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Resolve<TService>() Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Resolve(Type) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.CreateScope() Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.TryResolve<TService>(string) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.TryResolve(Type, string) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Resolve<TService>(string) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Resolve(Type, string) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Route<T>(string, bool) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Query<T>(string, bool) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.ProcessorState<TState>() Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.OnBeforeValidate(GetProductByIdApiRequest) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.OnBeforeValidateAsync(GetProductByIdApiRequest, CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.OnAfterValidate(GetProductByIdApiRequest) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.OnAfterValidateAsync(GetProductByIdApiRequest, CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.OnBeforeHandle(GetProductByIdApiRequest) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.OnBeforeHandleAsync(GetProductByIdApiRequest, CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.OnAfterHandle(GetProductByIdApiRequest, GetProductByIdResponse) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.OnAfterHandleAsync(GetProductByIdApiRequest, GetProductByIdResponse, CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.OnValidationFailed() Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SendAsync(GetProductByIdResponse, int, CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SendResultAsync(IResult) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SendCreatedAtAsync<TEndpoint>(object, GetProductByIdResponse, Http?, int?, bool, CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SendCreatedAtAsync(string, object, GetProductByIdResponse, bool, CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SendOkAsync(GetProductByIdResponse, CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SendOkAsync(CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SendNoContentAsync(CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SendNotFoundAsync(CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SendForbiddenAsync(CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SendRedirectAsync(string, bool, bool) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.AccessControl(string, Apply?, params string[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.AccessControl(string, params string[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.AllowAnonymous(params Http[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.AllowAnonymous(string[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.AllowFileUploads(bool) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.AllowFormData(bool) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.AuthSchemes(params string[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Claims(params string[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.ClaimsAll(params string[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Delete(params string[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Delete(string, Expression<Func<GetProductByIdApiRequest, object>>) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.DontAutoSendResponse() Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.DontAutoTag() Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.DontCatchExceptions() Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.DontThrowIfValidationFails() Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.EnableAntiforgery() Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Get(params string[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Get(string, Expression<Func<GetProductByIdApiRequest, object>>) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Group<TEndpointGroup>() Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Head(params string[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Head(string, Expression<Func<GetProductByIdApiRequest, object>>) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Patch(params string[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Patch(string, Expression<Func<GetProductByIdApiRequest, object>>) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Permissions(params string[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.PermissionsAll(params string[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Policies(params string[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Post(params string[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Post(string, Expression<Func<GetProductByIdApiRequest, object>>) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.PostProcessor<TPostProcessor>() Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.PostProcessors(params IPostProcessor<GetProductByIdApiRequest, GetProductByIdResponse>[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.PreProcessor<TPreProcessor>() Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.PreProcessors(params IPreProcessor<GetProductByIdApiRequest>[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Put(params string[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Put(string, Expression<Func<GetProductByIdApiRequest, object>>) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.RequestBinder(IRequestBinder<GetProductByIdApiRequest>) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Roles(params string[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.RoutePrefixOverride(string) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Routes(params string[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SerializerContext<TContext>(TContext) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.SerializerContext<TContext>() Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Summary(Action<EndpointSummary>) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Summary(Action<EndpointSummary<GetProductByIdApiRequest>>) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Summary(EndpointSummary) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Tags(params string[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Throttle(int, double, string) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Validator<TValidator>() Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Verbs(params Http[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Verbs(params string[]) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Version(int, int?) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.AddError(ValidationFailure) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.AddError(string, string, Severity) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.AddError(Expression<Func<GetProductByIdApiRequest, object>>, string, string, Severity) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.ThrowError(ValidationFailure, int?) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.ThrowError(string, int?) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.ThrowError(Expression<Func<GetProductByIdApiRequest, object>>, string, int?) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.ThrowIfAnyErrors(int?) Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.User Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Response Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Config Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Env Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Logger Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.BaseURL Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.HttpMethod Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Form Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.Files Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.ResponseStarted Endpoint<GetProductByIdApiRequest, GetProductByIdResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetProductByIdEndpoint(ILogger<GetProductByIdEndpoint>, IMediator) Initializes a new instance of the GetProductByIdEndpoint class. public GetProductByIdEndpoint(ILogger<GetProductByIdEndpoint> logger, IMediator mediator) Parameters logger ILogger<GetProductByIdEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. Methods Configure() Configures the route for the Endpoint public override void Configure() HandleAsync(GetProductByIdApiRequest, CancellationToken) Handles the GetProductByIdApiRequest and generates a GetProductByIdResponse public override Task HandleAsync(GetProductByIdApiRequest req, CancellationToken ct) Parameters req GetProductByIdApiRequest The GetProductByIdApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Product.UpdateProductEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Product.UpdateProductEndpoint.html",
    "title": "Class UpdateProductEndpoint",
    "keywords": "Class UpdateProductEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Product Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles updating an existing Product public class UpdateProductEndpoint : Endpoint<UpdateProductApiRequest, UpdateProductResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<UpdateProductApiRequest, UpdateProductResponse> UpdateProductEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<UpdateProductApiRequest, UpdateProductResponse>.HandleAsync(UpdateProductApiRequest, CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.ExecuteAsync(UpdateProductApiRequest, CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.TryResolve<TService>() Endpoint<UpdateProductApiRequest, UpdateProductResponse>.TryResolve(Type) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Resolve<TService>() Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Resolve(Type) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.CreateScope() Endpoint<UpdateProductApiRequest, UpdateProductResponse>.TryResolve<TService>(string) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.TryResolve(Type, string) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Resolve<TService>(string) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Resolve(Type, string) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Route<T>(string, bool) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Query<T>(string, bool) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.ProcessorState<TState>() Endpoint<UpdateProductApiRequest, UpdateProductResponse>.OnBeforeValidate(UpdateProductApiRequest) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.OnBeforeValidateAsync(UpdateProductApiRequest, CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.OnAfterValidate(UpdateProductApiRequest) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.OnAfterValidateAsync(UpdateProductApiRequest, CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.OnBeforeHandle(UpdateProductApiRequest) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.OnBeforeHandleAsync(UpdateProductApiRequest, CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.OnAfterHandle(UpdateProductApiRequest, UpdateProductResponse) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.OnAfterHandleAsync(UpdateProductApiRequest, UpdateProductResponse, CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.OnValidationFailed() Endpoint<UpdateProductApiRequest, UpdateProductResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SendAsync(UpdateProductResponse, int, CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SendResultAsync(IResult) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SendCreatedAtAsync<TEndpoint>(object, UpdateProductResponse, Http?, int?, bool, CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SendCreatedAtAsync(string, object, UpdateProductResponse, bool, CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SendOkAsync(UpdateProductResponse, CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SendOkAsync(CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SendNoContentAsync(CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SendNotFoundAsync(CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SendForbiddenAsync(CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SendRedirectAsync(string, bool, bool) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.AccessControl(string, Apply?, params string[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.AccessControl(string, params string[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.AllowAnonymous(params Http[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.AllowAnonymous(string[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.AllowFileUploads(bool) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.AllowFormData(bool) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.AuthSchemes(params string[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Claims(params string[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.ClaimsAll(params string[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Delete(params string[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Delete(string, Expression<Func<UpdateProductApiRequest, object>>) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.DontAutoSendResponse() Endpoint<UpdateProductApiRequest, UpdateProductResponse>.DontAutoTag() Endpoint<UpdateProductApiRequest, UpdateProductResponse>.DontCatchExceptions() Endpoint<UpdateProductApiRequest, UpdateProductResponse>.DontThrowIfValidationFails() Endpoint<UpdateProductApiRequest, UpdateProductResponse>.EnableAntiforgery() Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Get(params string[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Get(string, Expression<Func<UpdateProductApiRequest, object>>) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Group<TEndpointGroup>() Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Head(params string[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Head(string, Expression<Func<UpdateProductApiRequest, object>>) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Patch(params string[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Patch(string, Expression<Func<UpdateProductApiRequest, object>>) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Permissions(params string[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.PermissionsAll(params string[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Policies(params string[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Post(params string[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Post(string, Expression<Func<UpdateProductApiRequest, object>>) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.PostProcessor<TPostProcessor>() Endpoint<UpdateProductApiRequest, UpdateProductResponse>.PostProcessors(params IPostProcessor<UpdateProductApiRequest, UpdateProductResponse>[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.PreProcessor<TPreProcessor>() Endpoint<UpdateProductApiRequest, UpdateProductResponse>.PreProcessors(params IPreProcessor<UpdateProductApiRequest>[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Put(params string[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Put(string, Expression<Func<UpdateProductApiRequest, object>>) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.RequestBinder(IRequestBinder<UpdateProductApiRequest>) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Roles(params string[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.RoutePrefixOverride(string) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Routes(params string[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SerializerContext<TContext>(TContext) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.SerializerContext<TContext>() Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Summary(Action<EndpointSummary>) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Summary(Action<EndpointSummary<UpdateProductApiRequest>>) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Summary(EndpointSummary) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Tags(params string[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Throttle(int, double, string) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Validator<TValidator>() Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Verbs(params Http[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Verbs(params string[]) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Version(int, int?) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.AddError(ValidationFailure) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.AddError(string, string, Severity) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.AddError(Expression<Func<UpdateProductApiRequest, object>>, string, string, Severity) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.ThrowError(ValidationFailure, int?) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.ThrowError(string, int?) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.ThrowError(Expression<Func<UpdateProductApiRequest, object>>, string, int?) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.ThrowIfAnyErrors(int?) Endpoint<UpdateProductApiRequest, UpdateProductResponse>.User Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Response Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Config Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Env Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Logger Endpoint<UpdateProductApiRequest, UpdateProductResponse>.BaseURL Endpoint<UpdateProductApiRequest, UpdateProductResponse>.HttpMethod Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Form Endpoint<UpdateProductApiRequest, UpdateProductResponse>.Files Endpoint<UpdateProductApiRequest, UpdateProductResponse>.ResponseStarted Endpoint<UpdateProductApiRequest, UpdateProductResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateProductEndpoint(ILogger<UpdateProductEndpoint>, IMediator, ITokenService) Initializes a new instance of the UpdateProductEndpoint class. public UpdateProductEndpoint(ILogger<UpdateProductEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<UpdateProductEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(UpdateProductApiRequest, CancellationToken) Handles the UpdateProductApiRequest and generates a UpdateProductResponse public override Task HandleAsync(UpdateProductApiRequest req, CancellationToken ct) Parameters req UpdateProductApiRequest The UpdateProductApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Product.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Product.html",
    "title": "Namespace Ecommerce.FastEndpoints.Endpoints.Product",
    "keywords": "Namespace Ecommerce.FastEndpoints.Endpoints.Product Classes CreateProductEndpoint A Fast Endpoint implementation that handles creating a new Product DeleteProductEndpoint A Fast Endpoint implementation that handles deleting a Product GetAllProductsByCategoryIdEndpoint A Fast Endpoint implementation that handles getting all Products in a Category GetProductByIdEndpoint A Fast Endpoint implementation that handles getting a Product based on a Id UpdateProductEndpoint A Fast Endpoint implementation that handles updating an existing Product"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Review.CreateReviewEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Review.CreateReviewEndpoint.html",
    "title": "Class CreateReviewEndpoint",
    "keywords": "Class CreateReviewEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Review Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles creating a new Review public class CreateReviewEndpoint : Endpoint<CreateReviewApiRequest, CreateReviewResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<CreateReviewApiRequest, CreateReviewResponse> CreateReviewEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<CreateReviewApiRequest, CreateReviewResponse>.HandleAsync(CreateReviewApiRequest, CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.ExecuteAsync(CreateReviewApiRequest, CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.TryResolve<TService>() Endpoint<CreateReviewApiRequest, CreateReviewResponse>.TryResolve(Type) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Resolve<TService>() Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Resolve(Type) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.CreateScope() Endpoint<CreateReviewApiRequest, CreateReviewResponse>.TryResolve<TService>(string) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.TryResolve(Type, string) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Resolve<TService>(string) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Resolve(Type, string) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Route<T>(string, bool) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Query<T>(string, bool) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.ProcessorState<TState>() Endpoint<CreateReviewApiRequest, CreateReviewResponse>.OnBeforeValidate(CreateReviewApiRequest) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.OnBeforeValidateAsync(CreateReviewApiRequest, CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.OnAfterValidate(CreateReviewApiRequest) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.OnAfterValidateAsync(CreateReviewApiRequest, CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.OnBeforeHandle(CreateReviewApiRequest) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.OnBeforeHandleAsync(CreateReviewApiRequest, CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.OnAfterHandle(CreateReviewApiRequest, CreateReviewResponse) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.OnAfterHandleAsync(CreateReviewApiRequest, CreateReviewResponse, CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.OnValidationFailed() Endpoint<CreateReviewApiRequest, CreateReviewResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SendAsync(CreateReviewResponse, int, CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SendResultAsync(IResult) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SendCreatedAtAsync<TEndpoint>(object, CreateReviewResponse, Http?, int?, bool, CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SendCreatedAtAsync(string, object, CreateReviewResponse, bool, CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SendOkAsync(CreateReviewResponse, CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SendOkAsync(CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SendNoContentAsync(CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SendNotFoundAsync(CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SendForbiddenAsync(CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SendRedirectAsync(string, bool, bool) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.AccessControl(string, Apply?, params string[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.AccessControl(string, params string[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.AllowAnonymous(params Http[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.AllowAnonymous(string[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.AllowFileUploads(bool) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.AllowFormData(bool) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.AuthSchemes(params string[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Claims(params string[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.ClaimsAll(params string[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Delete(params string[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Delete(string, Expression<Func<CreateReviewApiRequest, object>>) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.DontAutoSendResponse() Endpoint<CreateReviewApiRequest, CreateReviewResponse>.DontAutoTag() Endpoint<CreateReviewApiRequest, CreateReviewResponse>.DontCatchExceptions() Endpoint<CreateReviewApiRequest, CreateReviewResponse>.DontThrowIfValidationFails() Endpoint<CreateReviewApiRequest, CreateReviewResponse>.EnableAntiforgery() Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Get(params string[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Get(string, Expression<Func<CreateReviewApiRequest, object>>) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Group<TEndpointGroup>() Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Head(params string[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Head(string, Expression<Func<CreateReviewApiRequest, object>>) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Patch(params string[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Patch(string, Expression<Func<CreateReviewApiRequest, object>>) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Permissions(params string[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.PermissionsAll(params string[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Policies(params string[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Post(params string[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Post(string, Expression<Func<CreateReviewApiRequest, object>>) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.PostProcessor<TPostProcessor>() Endpoint<CreateReviewApiRequest, CreateReviewResponse>.PostProcessors(params IPostProcessor<CreateReviewApiRequest, CreateReviewResponse>[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.PreProcessor<TPreProcessor>() Endpoint<CreateReviewApiRequest, CreateReviewResponse>.PreProcessors(params IPreProcessor<CreateReviewApiRequest>[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Put(params string[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Put(string, Expression<Func<CreateReviewApiRequest, object>>) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.RequestBinder(IRequestBinder<CreateReviewApiRequest>) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Roles(params string[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.RoutePrefixOverride(string) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Routes(params string[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SerializerContext<TContext>(TContext) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.SerializerContext<TContext>() Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Summary(Action<EndpointSummary>) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Summary(Action<EndpointSummary<CreateReviewApiRequest>>) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Summary(EndpointSummary) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Tags(params string[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Throttle(int, double, string) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Validator<TValidator>() Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Verbs(params Http[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Verbs(params string[]) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Version(int, int?) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.AddError(ValidationFailure) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.AddError(string, string, Severity) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.AddError(Expression<Func<CreateReviewApiRequest, object>>, string, string, Severity) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.ThrowError(ValidationFailure, int?) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.ThrowError(string, int?) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.ThrowError(Expression<Func<CreateReviewApiRequest, object>>, string, int?) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.ThrowIfAnyErrors(int?) Endpoint<CreateReviewApiRequest, CreateReviewResponse>.User Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Response Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Config Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Env Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Logger Endpoint<CreateReviewApiRequest, CreateReviewResponse>.BaseURL Endpoint<CreateReviewApiRequest, CreateReviewResponse>.HttpMethod Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Form Endpoint<CreateReviewApiRequest, CreateReviewResponse>.Files Endpoint<CreateReviewApiRequest, CreateReviewResponse>.ResponseStarted Endpoint<CreateReviewApiRequest, CreateReviewResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateReviewEndpoint(ILogger<CreateReviewEndpoint>, IMediator, ITokenService) Initializes a new instance of the CreateReviewEndpoint class. public CreateReviewEndpoint(ILogger<CreateReviewEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<CreateReviewEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(CreateReviewApiRequest, CancellationToken) Handles the CreateReviewApiRequest and generates a CreateReviewResponse public override Task HandleAsync(CreateReviewApiRequest req, CancellationToken ct) Parameters req CreateReviewApiRequest The CreateReviewApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Review.DeleteReviewEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Review.DeleteReviewEndpoint.html",
    "title": "Class DeleteReviewEndpoint",
    "keywords": "Class DeleteReviewEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Review Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles deleting a Review public class DeleteReviewEndpoint : Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<DeleteReviewApiRequest, DeleteReviewResponse> DeleteReviewEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.HandleAsync(DeleteReviewApiRequest, CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.ExecuteAsync(DeleteReviewApiRequest, CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.TryResolve<TService>() Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.TryResolve(Type) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Resolve<TService>() Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Resolve(Type) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.CreateScope() Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.TryResolve<TService>(string) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.TryResolve(Type, string) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Resolve<TService>(string) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Resolve(Type, string) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Route<T>(string, bool) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Query<T>(string, bool) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.ProcessorState<TState>() Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.OnBeforeValidate(DeleteReviewApiRequest) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.OnBeforeValidateAsync(DeleteReviewApiRequest, CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.OnAfterValidate(DeleteReviewApiRequest) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.OnAfterValidateAsync(DeleteReviewApiRequest, CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.OnBeforeHandle(DeleteReviewApiRequest) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.OnBeforeHandleAsync(DeleteReviewApiRequest, CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.OnAfterHandle(DeleteReviewApiRequest, DeleteReviewResponse) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.OnAfterHandleAsync(DeleteReviewApiRequest, DeleteReviewResponse, CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.OnValidationFailed() Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SendAsync(DeleteReviewResponse, int, CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SendResultAsync(IResult) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SendCreatedAtAsync<TEndpoint>(object, DeleteReviewResponse, Http?, int?, bool, CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SendCreatedAtAsync(string, object, DeleteReviewResponse, bool, CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SendOkAsync(DeleteReviewResponse, CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SendOkAsync(CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SendNoContentAsync(CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SendNotFoundAsync(CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SendForbiddenAsync(CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SendRedirectAsync(string, bool, bool) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.AccessControl(string, Apply?, params string[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.AccessControl(string, params string[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.AllowAnonymous(params Http[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.AllowAnonymous(string[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.AllowFileUploads(bool) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.AllowFormData(bool) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.AuthSchemes(params string[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Claims(params string[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.ClaimsAll(params string[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Delete(params string[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Delete(string, Expression<Func<DeleteReviewApiRequest, object>>) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.DontAutoSendResponse() Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.DontAutoTag() Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.DontCatchExceptions() Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.DontThrowIfValidationFails() Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.EnableAntiforgery() Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Get(params string[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Get(string, Expression<Func<DeleteReviewApiRequest, object>>) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Group<TEndpointGroup>() Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Head(params string[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Head(string, Expression<Func<DeleteReviewApiRequest, object>>) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Patch(params string[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Patch(string, Expression<Func<DeleteReviewApiRequest, object>>) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Permissions(params string[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.PermissionsAll(params string[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Policies(params string[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Post(params string[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Post(string, Expression<Func<DeleteReviewApiRequest, object>>) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.PostProcessor<TPostProcessor>() Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.PostProcessors(params IPostProcessor<DeleteReviewApiRequest, DeleteReviewResponse>[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.PreProcessor<TPreProcessor>() Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.PreProcessors(params IPreProcessor<DeleteReviewApiRequest>[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Put(params string[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Put(string, Expression<Func<DeleteReviewApiRequest, object>>) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.RequestBinder(IRequestBinder<DeleteReviewApiRequest>) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Roles(params string[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.RoutePrefixOverride(string) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Routes(params string[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SerializerContext<TContext>(TContext) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.SerializerContext<TContext>() Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Summary(Action<EndpointSummary>) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Summary(Action<EndpointSummary<DeleteReviewApiRequest>>) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Summary(EndpointSummary) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Tags(params string[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Throttle(int, double, string) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Validator<TValidator>() Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Verbs(params Http[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Verbs(params string[]) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Version(int, int?) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.AddError(ValidationFailure) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.AddError(string, string, Severity) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.AddError(Expression<Func<DeleteReviewApiRequest, object>>, string, string, Severity) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.ThrowError(ValidationFailure, int?) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.ThrowError(string, int?) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.ThrowError(Expression<Func<DeleteReviewApiRequest, object>>, string, int?) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.ThrowIfAnyErrors(int?) Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.User Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Response Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Config Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Env Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Logger Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.BaseURL Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.HttpMethod Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Form Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.Files Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.ResponseStarted Endpoint<DeleteReviewApiRequest, DeleteReviewResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteReviewEndpoint(ILogger<DeleteReviewEndpoint>, IMediator, ITokenService) Initializes a new instance of the DeleteReviewEndpoint class. public DeleteReviewEndpoint(ILogger<DeleteReviewEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<DeleteReviewEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(DeleteReviewApiRequest, CancellationToken) Handles the DeleteReviewApiRequest and generates a DeleteReviewResponse public override Task HandleAsync(DeleteReviewApiRequest req, CancellationToken ct) Parameters req DeleteReviewApiRequest The DeleteReviewApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Review.GetReviewsForProductEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Review.GetReviewsForProductEndpoint.html",
    "title": "Class GetReviewsForProductEndpoint",
    "keywords": "Class GetReviewsForProductEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Review Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles getting all Reviews for a Product public class GetReviewsForProductEndpoint : Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse> GetReviewsForProductEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.HandleAsync(GetReviewsForProductApiRequest, CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.ExecuteAsync(GetReviewsForProductApiRequest, CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.TryResolve<TService>() Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.TryResolve(Type) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Resolve<TService>() Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Resolve(Type) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.CreateScope() Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.TryResolve<TService>(string) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.TryResolve(Type, string) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Resolve<TService>(string) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Resolve(Type, string) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Route<T>(string, bool) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Query<T>(string, bool) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.ProcessorState<TState>() Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.OnBeforeValidate(GetReviewsForProductApiRequest) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.OnBeforeValidateAsync(GetReviewsForProductApiRequest, CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.OnAfterValidate(GetReviewsForProductApiRequest) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.OnAfterValidateAsync(GetReviewsForProductApiRequest, CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.OnBeforeHandle(GetReviewsForProductApiRequest) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.OnBeforeHandleAsync(GetReviewsForProductApiRequest, CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.OnAfterHandle(GetReviewsForProductApiRequest, GetReviewsForProductResponse) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.OnAfterHandleAsync(GetReviewsForProductApiRequest, GetReviewsForProductResponse, CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.OnValidationFailed() Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SendAsync(GetReviewsForProductResponse, int, CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SendResultAsync(IResult) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SendCreatedAtAsync<TEndpoint>(object, GetReviewsForProductResponse, Http?, int?, bool, CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SendCreatedAtAsync(string, object, GetReviewsForProductResponse, bool, CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SendOkAsync(GetReviewsForProductResponse, CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SendOkAsync(CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SendNoContentAsync(CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SendNotFoundAsync(CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SendForbiddenAsync(CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SendRedirectAsync(string, bool, bool) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.AccessControl(string, Apply?, params string[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.AccessControl(string, params string[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.AllowAnonymous(params Http[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.AllowAnonymous(string[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.AllowFileUploads(bool) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.AllowFormData(bool) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.AuthSchemes(params string[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Claims(params string[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.ClaimsAll(params string[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Delete(params string[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Delete(string, Expression<Func<GetReviewsForProductApiRequest, object>>) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.DontAutoSendResponse() Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.DontAutoTag() Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.DontCatchExceptions() Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.DontThrowIfValidationFails() Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.EnableAntiforgery() Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Get(params string[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Get(string, Expression<Func<GetReviewsForProductApiRequest, object>>) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Group<TEndpointGroup>() Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Head(params string[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Head(string, Expression<Func<GetReviewsForProductApiRequest, object>>) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Patch(params string[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Patch(string, Expression<Func<GetReviewsForProductApiRequest, object>>) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Permissions(params string[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.PermissionsAll(params string[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Policies(params string[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Post(params string[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Post(string, Expression<Func<GetReviewsForProductApiRequest, object>>) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.PostProcessor<TPostProcessor>() Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.PostProcessors(params IPostProcessor<GetReviewsForProductApiRequest, GetReviewsForProductResponse>[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.PreProcessor<TPreProcessor>() Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.PreProcessors(params IPreProcessor<GetReviewsForProductApiRequest>[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Put(params string[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Put(string, Expression<Func<GetReviewsForProductApiRequest, object>>) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.RequestBinder(IRequestBinder<GetReviewsForProductApiRequest>) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Roles(params string[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.RoutePrefixOverride(string) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Routes(params string[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SerializerContext<TContext>(TContext) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.SerializerContext<TContext>() Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Summary(Action<EndpointSummary>) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Summary(Action<EndpointSummary<GetReviewsForProductApiRequest>>) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Summary(EndpointSummary) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Tags(params string[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Throttle(int, double, string) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Validator<TValidator>() Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Verbs(params Http[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Verbs(params string[]) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Version(int, int?) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.AddError(ValidationFailure) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.AddError(string, string, Severity) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.AddError(Expression<Func<GetReviewsForProductApiRequest, object>>, string, string, Severity) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.ThrowError(ValidationFailure, int?) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.ThrowError(string, int?) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.ThrowError(Expression<Func<GetReviewsForProductApiRequest, object>>, string, int?) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.ThrowIfAnyErrors(int?) Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.User Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Response Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Config Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Env Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Logger Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.BaseURL Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.HttpMethod Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Form Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.Files Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.ResponseStarted Endpoint<GetReviewsForProductApiRequest, GetReviewsForProductResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetReviewsForProductEndpoint(ILogger<GetReviewsForProductEndpoint>, IMediator) Initializes a new instance of the GetUserReviewForProductEndpoint class. public GetReviewsForProductEndpoint(ILogger<GetReviewsForProductEndpoint> logger, IMediator mediator) Parameters logger ILogger<GetReviewsForProductEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. Methods Configure() Configures the route for the Endpoint public override void Configure() HandleAsync(GetReviewsForProductApiRequest, CancellationToken) Handles the GetReviewsForProductApiRequest and generates a GetReviewsForProductResponse public override Task HandleAsync(GetReviewsForProductApiRequest req, CancellationToken ct) Parameters req GetReviewsForProductApiRequest The GetReviewsForProductApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Review.GetUserReviewForProductEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Review.GetUserReviewForProductEndpoint.html",
    "title": "Class GetUserReviewForProductEndpoint",
    "keywords": "Class GetUserReviewForProductEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Review Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles getting a User's Review for a Product public class GetUserReviewForProductEndpoint : Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse> GetUserReviewForProductEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.HandleAsync(GetUserReviewForProductApiRequest, CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.ExecuteAsync(GetUserReviewForProductApiRequest, CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.TryResolve<TService>() Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.TryResolve(Type) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Resolve<TService>() Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Resolve(Type) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.CreateScope() Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.TryResolve<TService>(string) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.TryResolve(Type, string) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Resolve<TService>(string) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Resolve(Type, string) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Route<T>(string, bool) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Query<T>(string, bool) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.ProcessorState<TState>() Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.OnBeforeValidate(GetUserReviewForProductApiRequest) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.OnBeforeValidateAsync(GetUserReviewForProductApiRequest, CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.OnAfterValidate(GetUserReviewForProductApiRequest) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.OnAfterValidateAsync(GetUserReviewForProductApiRequest, CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.OnBeforeHandle(GetUserReviewForProductApiRequest) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.OnBeforeHandleAsync(GetUserReviewForProductApiRequest, CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.OnAfterHandle(GetUserReviewForProductApiRequest, GetUserReviewForProductResponse) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.OnAfterHandleAsync(GetUserReviewForProductApiRequest, GetUserReviewForProductResponse, CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.OnValidationFailed() Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SendAsync(GetUserReviewForProductResponse, int, CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SendResultAsync(IResult) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SendCreatedAtAsync<TEndpoint>(object, GetUserReviewForProductResponse, Http?, int?, bool, CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SendCreatedAtAsync(string, object, GetUserReviewForProductResponse, bool, CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SendOkAsync(GetUserReviewForProductResponse, CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SendOkAsync(CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SendNoContentAsync(CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SendNotFoundAsync(CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SendForbiddenAsync(CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SendRedirectAsync(string, bool, bool) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.AccessControl(string, Apply?, params string[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.AccessControl(string, params string[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.AllowAnonymous(params Http[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.AllowAnonymous(string[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.AllowFileUploads(bool) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.AllowFormData(bool) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.AuthSchemes(params string[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Claims(params string[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.ClaimsAll(params string[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Delete(params string[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Delete(string, Expression<Func<GetUserReviewForProductApiRequest, object>>) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.DontAutoSendResponse() Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.DontAutoTag() Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.DontCatchExceptions() Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.DontThrowIfValidationFails() Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.EnableAntiforgery() Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Get(params string[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Get(string, Expression<Func<GetUserReviewForProductApiRequest, object>>) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Group<TEndpointGroup>() Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Head(params string[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Head(string, Expression<Func<GetUserReviewForProductApiRequest, object>>) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Patch(params string[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Patch(string, Expression<Func<GetUserReviewForProductApiRequest, object>>) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Permissions(params string[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.PermissionsAll(params string[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Policies(params string[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Post(params string[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Post(string, Expression<Func<GetUserReviewForProductApiRequest, object>>) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.PostProcessor<TPostProcessor>() Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.PostProcessors(params IPostProcessor<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.PreProcessor<TPreProcessor>() Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.PreProcessors(params IPreProcessor<GetUserReviewForProductApiRequest>[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Put(params string[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Put(string, Expression<Func<GetUserReviewForProductApiRequest, object>>) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.RequestBinder(IRequestBinder<GetUserReviewForProductApiRequest>) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Roles(params string[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.RoutePrefixOverride(string) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Routes(params string[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SerializerContext<TContext>(TContext) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.SerializerContext<TContext>() Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Summary(Action<EndpointSummary>) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Summary(Action<EndpointSummary<GetUserReviewForProductApiRequest>>) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Summary(EndpointSummary) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Tags(params string[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Throttle(int, double, string) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Validator<TValidator>() Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Verbs(params Http[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Verbs(params string[]) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Version(int, int?) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.AddError(ValidationFailure) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.AddError(string, string, Severity) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.AddError(Expression<Func<GetUserReviewForProductApiRequest, object>>, string, string, Severity) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.ThrowError(ValidationFailure, int?) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.ThrowError(string, int?) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.ThrowError(Expression<Func<GetUserReviewForProductApiRequest, object>>, string, int?) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.ThrowIfAnyErrors(int?) Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.User Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Response Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Config Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Env Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Logger Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.BaseURL Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.HttpMethod Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Form Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.Files Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.ResponseStarted Endpoint<GetUserReviewForProductApiRequest, GetUserReviewForProductResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetUserReviewForProductEndpoint(ILogger<GetUserReviewForProductEndpoint>, IMediator, ITokenService) Initializes a new instance of the GetUserReviewForProductEndpoint class. public GetUserReviewForProductEndpoint(ILogger<GetUserReviewForProductEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<GetUserReviewForProductEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(GetUserReviewForProductApiRequest, CancellationToken) Handles the GetUserReviewForProductApiRequest and generates a GetUserReviewForProductResponse public override Task HandleAsync(GetUserReviewForProductApiRequest req, CancellationToken ct) Parameters req GetUserReviewForProductApiRequest The GetUserReviewForProductApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Review.UpdateReviewEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Review.UpdateReviewEndpoint.html",
    "title": "Class UpdateReviewEndpoint",
    "keywords": "Class UpdateReviewEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Review Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles updating an existing Review public class UpdateReviewEndpoint : Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<UpdateReviewApiRequest, UpdateReviewResponse> UpdateReviewEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.HandleAsync(UpdateReviewApiRequest, CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.ExecuteAsync(UpdateReviewApiRequest, CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.TryResolve<TService>() Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.TryResolve(Type) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Resolve<TService>() Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Resolve(Type) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.CreateScope() Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.TryResolve<TService>(string) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.TryResolve(Type, string) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Resolve<TService>(string) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Resolve(Type, string) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Route<T>(string, bool) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Query<T>(string, bool) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.ProcessorState<TState>() Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.OnBeforeValidate(UpdateReviewApiRequest) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.OnBeforeValidateAsync(UpdateReviewApiRequest, CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.OnAfterValidate(UpdateReviewApiRequest) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.OnAfterValidateAsync(UpdateReviewApiRequest, CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.OnBeforeHandle(UpdateReviewApiRequest) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.OnBeforeHandleAsync(UpdateReviewApiRequest, CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.OnAfterHandle(UpdateReviewApiRequest, UpdateReviewResponse) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.OnAfterHandleAsync(UpdateReviewApiRequest, UpdateReviewResponse, CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.OnValidationFailed() Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SendAsync(UpdateReviewResponse, int, CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SendResultAsync(IResult) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SendCreatedAtAsync<TEndpoint>(object, UpdateReviewResponse, Http?, int?, bool, CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SendCreatedAtAsync(string, object, UpdateReviewResponse, bool, CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SendOkAsync(UpdateReviewResponse, CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SendOkAsync(CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SendNoContentAsync(CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SendNotFoundAsync(CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SendForbiddenAsync(CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SendRedirectAsync(string, bool, bool) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.AccessControl(string, Apply?, params string[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.AccessControl(string, params string[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.AllowAnonymous(params Http[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.AllowAnonymous(string[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.AllowFileUploads(bool) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.AllowFormData(bool) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.AuthSchemes(params string[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Claims(params string[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.ClaimsAll(params string[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Delete(params string[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Delete(string, Expression<Func<UpdateReviewApiRequest, object>>) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.DontAutoSendResponse() Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.DontAutoTag() Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.DontCatchExceptions() Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.DontThrowIfValidationFails() Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.EnableAntiforgery() Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Get(params string[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Get(string, Expression<Func<UpdateReviewApiRequest, object>>) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Group<TEndpointGroup>() Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Head(params string[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Head(string, Expression<Func<UpdateReviewApiRequest, object>>) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Patch(params string[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Patch(string, Expression<Func<UpdateReviewApiRequest, object>>) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Permissions(params string[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.PermissionsAll(params string[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Policies(params string[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Post(params string[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Post(string, Expression<Func<UpdateReviewApiRequest, object>>) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.PostProcessor<TPostProcessor>() Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.PostProcessors(params IPostProcessor<UpdateReviewApiRequest, UpdateReviewResponse>[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.PreProcessor<TPreProcessor>() Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.PreProcessors(params IPreProcessor<UpdateReviewApiRequest>[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Put(params string[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Put(string, Expression<Func<UpdateReviewApiRequest, object>>) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.RequestBinder(IRequestBinder<UpdateReviewApiRequest>) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Roles(params string[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.RoutePrefixOverride(string) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Routes(params string[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SerializerContext<TContext>(TContext) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.SerializerContext<TContext>() Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Summary(Action<EndpointSummary>) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Summary(Action<EndpointSummary<UpdateReviewApiRequest>>) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Summary(EndpointSummary) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Tags(params string[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Throttle(int, double, string) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Validator<TValidator>() Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Verbs(params Http[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Verbs(params string[]) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Version(int, int?) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.AddError(ValidationFailure) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.AddError(string, string, Severity) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.AddError(Expression<Func<UpdateReviewApiRequest, object>>, string, string, Severity) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.ThrowError(ValidationFailure, int?) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.ThrowError(string, int?) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.ThrowError(Expression<Func<UpdateReviewApiRequest, object>>, string, int?) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.ThrowIfAnyErrors(int?) Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.User Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Response Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Config Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Env Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Logger Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.BaseURL Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.HttpMethod Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Form Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.Files Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.ResponseStarted Endpoint<UpdateReviewApiRequest, UpdateReviewResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateReviewEndpoint(ILogger<UpdateReviewEndpoint>, IMediator, ITokenService) Initializes a new instance of the UpdateReviewEndpoint class. public UpdateReviewEndpoint(ILogger<UpdateReviewEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<UpdateReviewEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(UpdateReviewApiRequest, CancellationToken) Handles the UpdateReviewApiRequest and generates a UpdateReviewResponse public override Task HandleAsync(UpdateReviewApiRequest req, CancellationToken ct) Parameters req UpdateReviewApiRequest The UpdateReviewApiRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Review.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Review.html",
    "title": "Namespace Ecommerce.FastEndpoints.Endpoints.Review",
    "keywords": "Namespace Ecommerce.FastEndpoints.Endpoints.Review Classes CreateReviewEndpoint A Fast Endpoint implementation that handles creating a new Review DeleteReviewEndpoint A Fast Endpoint implementation that handles deleting a Review GetReviewsForProductEndpoint A Fast Endpoint implementation that handles getting all Reviews for a Product GetUserReviewForProductEndpoint A Fast Endpoint implementation that handles getting a User's Review for a Product UpdateReviewEndpoint A Fast Endpoint implementation that handles updating an existing Review"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Security.ConfirmEmailEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Security.ConfirmEmailEndpoint.html",
    "title": "Class ConfirmEmailEndpoint",
    "keywords": "Class ConfirmEmailEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Security Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles confirming a User's email address public class ConfirmEmailEndpoint : Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<ConfirmEmailRequest, ConfirmEmailResponse> ConfirmEmailEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.HandleAsync(ConfirmEmailRequest, CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.ExecuteAsync(ConfirmEmailRequest, CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.TryResolve<TService>() Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.TryResolve(Type) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Resolve<TService>() Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Resolve(Type) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.CreateScope() Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.TryResolve<TService>(string) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.TryResolve(Type, string) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Resolve<TService>(string) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Resolve(Type, string) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Route<T>(string, bool) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Query<T>(string, bool) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.ProcessorState<TState>() Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.OnBeforeValidate(ConfirmEmailRequest) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.OnBeforeValidateAsync(ConfirmEmailRequest, CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.OnAfterValidate(ConfirmEmailRequest) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.OnAfterValidateAsync(ConfirmEmailRequest, CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.OnBeforeHandle(ConfirmEmailRequest) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.OnBeforeHandleAsync(ConfirmEmailRequest, CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.OnAfterHandle(ConfirmEmailRequest, ConfirmEmailResponse) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.OnAfterHandleAsync(ConfirmEmailRequest, ConfirmEmailResponse, CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.OnValidationFailed() Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SendAsync(ConfirmEmailResponse, int, CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SendResultAsync(IResult) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SendCreatedAtAsync<TEndpoint>(object, ConfirmEmailResponse, Http?, int?, bool, CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SendCreatedAtAsync(string, object, ConfirmEmailResponse, bool, CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SendOkAsync(ConfirmEmailResponse, CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SendOkAsync(CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SendNoContentAsync(CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SendNotFoundAsync(CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SendForbiddenAsync(CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SendRedirectAsync(string, bool, bool) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.AccessControl(string, Apply?, params string[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.AccessControl(string, params string[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.AllowAnonymous(params Http[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.AllowAnonymous(string[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.AllowFileUploads(bool) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.AllowFormData(bool) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.AuthSchemes(params string[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Claims(params string[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.ClaimsAll(params string[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Delete(params string[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Delete(string, Expression<Func<ConfirmEmailRequest, object>>) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.DontAutoSendResponse() Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.DontAutoTag() Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.DontCatchExceptions() Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.DontThrowIfValidationFails() Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.EnableAntiforgery() Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Get(params string[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Get(string, Expression<Func<ConfirmEmailRequest, object>>) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Group<TEndpointGroup>() Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Head(params string[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Head(string, Expression<Func<ConfirmEmailRequest, object>>) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Patch(params string[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Patch(string, Expression<Func<ConfirmEmailRequest, object>>) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Permissions(params string[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.PermissionsAll(params string[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Policies(params string[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Post(params string[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Post(string, Expression<Func<ConfirmEmailRequest, object>>) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.PostProcessor<TPostProcessor>() Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.PostProcessors(params IPostProcessor<ConfirmEmailRequest, ConfirmEmailResponse>[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.PreProcessor<TPreProcessor>() Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.PreProcessors(params IPreProcessor<ConfirmEmailRequest>[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Put(params string[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Put(string, Expression<Func<ConfirmEmailRequest, object>>) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.RequestBinder(IRequestBinder<ConfirmEmailRequest>) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Roles(params string[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.RoutePrefixOverride(string) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Routes(params string[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SerializerContext<TContext>(TContext) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.SerializerContext<TContext>() Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Summary(Action<EndpointSummary>) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Summary(Action<EndpointSummary<ConfirmEmailRequest>>) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Summary(EndpointSummary) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Tags(params string[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Throttle(int, double, string) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Validator<TValidator>() Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Verbs(params Http[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Verbs(params string[]) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Version(int, int?) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.AddError(ValidationFailure) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.AddError(string, string, Severity) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.AddError(Expression<Func<ConfirmEmailRequest, object>>, string, string, Severity) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.ThrowError(ValidationFailure, int?) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.ThrowError(string, int?) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.ThrowError(Expression<Func<ConfirmEmailRequest, object>>, string, int?) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.ThrowIfAnyErrors(int?) Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.User Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Response Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Config Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Env Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Logger Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.BaseURL Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.HttpMethod Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Form Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.Files Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.ResponseStarted Endpoint<ConfirmEmailRequest, ConfirmEmailResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConfirmEmailEndpoint(ILogger<ConfirmEmailEndpoint>, IMediator) Initializes a new instance of the ConfirmEmailEndpoint class. public ConfirmEmailEndpoint(ILogger<ConfirmEmailEndpoint> logger, IMediator mediator) Parameters logger ILogger<ConfirmEmailEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. Methods Configure() Configures the route for the Endpoint public override void Configure() HandleAsync(ConfirmEmailRequest, CancellationToken) Handles the ConfirmEmailRequest and generates a ConfirmEmailResponse public override Task HandleAsync(ConfirmEmailRequest req, CancellationToken ct) Parameters req ConfirmEmailRequest ct CancellationToken Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Security.LoginEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Security.LoginEndpoint.html",
    "title": "Class LoginEndpoint",
    "keywords": "Class LoginEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Security Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles logging in a User public class LoginEndpoint : Endpoint<AuthenticationRequest, AuthenticateResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<AuthenticationRequest, AuthenticateResponse> LoginEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<AuthenticationRequest, AuthenticateResponse>.HandleAsync(AuthenticationRequest, CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.ExecuteAsync(AuthenticationRequest, CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.TryResolve<TService>() Endpoint<AuthenticationRequest, AuthenticateResponse>.TryResolve(Type) Endpoint<AuthenticationRequest, AuthenticateResponse>.Resolve<TService>() Endpoint<AuthenticationRequest, AuthenticateResponse>.Resolve(Type) Endpoint<AuthenticationRequest, AuthenticateResponse>.CreateScope() Endpoint<AuthenticationRequest, AuthenticateResponse>.TryResolve<TService>(string) Endpoint<AuthenticationRequest, AuthenticateResponse>.TryResolve(Type, string) Endpoint<AuthenticationRequest, AuthenticateResponse>.Resolve<TService>(string) Endpoint<AuthenticationRequest, AuthenticateResponse>.Resolve(Type, string) Endpoint<AuthenticationRequest, AuthenticateResponse>.Route<T>(string, bool) Endpoint<AuthenticationRequest, AuthenticateResponse>.Query<T>(string, bool) Endpoint<AuthenticationRequest, AuthenticateResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<AuthenticationRequest, AuthenticateResponse>.ProcessorState<TState>() Endpoint<AuthenticationRequest, AuthenticateResponse>.OnBeforeValidate(AuthenticationRequest) Endpoint<AuthenticationRequest, AuthenticateResponse>.OnBeforeValidateAsync(AuthenticationRequest, CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.OnAfterValidate(AuthenticationRequest) Endpoint<AuthenticationRequest, AuthenticateResponse>.OnAfterValidateAsync(AuthenticationRequest, CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.OnBeforeHandle(AuthenticationRequest) Endpoint<AuthenticationRequest, AuthenticateResponse>.OnBeforeHandleAsync(AuthenticationRequest, CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.OnAfterHandle(AuthenticationRequest, AuthenticateResponse) Endpoint<AuthenticationRequest, AuthenticateResponse>.OnAfterHandleAsync(AuthenticationRequest, AuthenticateResponse, CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.OnValidationFailed() Endpoint<AuthenticationRequest, AuthenticateResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.SendAsync(AuthenticateResponse, int, CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.SendResultAsync(IResult) Endpoint<AuthenticationRequest, AuthenticateResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.SendCreatedAtAsync<TEndpoint>(object, AuthenticateResponse, Http?, int?, bool, CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.SendCreatedAtAsync(string, object, AuthenticateResponse, bool, CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.SendOkAsync(AuthenticateResponse, CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.SendOkAsync(CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.SendNoContentAsync(CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.SendNotFoundAsync(CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.SendForbiddenAsync(CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.SendRedirectAsync(string, bool, bool) Endpoint<AuthenticationRequest, AuthenticateResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<AuthenticationRequest, AuthenticateResponse>.AccessControl(string, Apply?, params string[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.AccessControl(string, params string[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.AllowAnonymous(params Http[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.AllowAnonymous(string[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.AllowFileUploads(bool) Endpoint<AuthenticationRequest, AuthenticateResponse>.AllowFormData(bool) Endpoint<AuthenticationRequest, AuthenticateResponse>.AuthSchemes(params string[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.Claims(params string[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.ClaimsAll(params string[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.Delete(params string[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.Delete(string, Expression<Func<AuthenticationRequest, object>>) Endpoint<AuthenticationRequest, AuthenticateResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<AuthenticationRequest, AuthenticateResponse>.DontAutoSendResponse() Endpoint<AuthenticationRequest, AuthenticateResponse>.DontAutoTag() Endpoint<AuthenticationRequest, AuthenticateResponse>.DontCatchExceptions() Endpoint<AuthenticationRequest, AuthenticateResponse>.DontThrowIfValidationFails() Endpoint<AuthenticationRequest, AuthenticateResponse>.EnableAntiforgery() Endpoint<AuthenticationRequest, AuthenticateResponse>.Get(params string[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.Get(string, Expression<Func<AuthenticationRequest, object>>) Endpoint<AuthenticationRequest, AuthenticateResponse>.Group<TEndpointGroup>() Endpoint<AuthenticationRequest, AuthenticateResponse>.Head(params string[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.Head(string, Expression<Func<AuthenticationRequest, object>>) Endpoint<AuthenticationRequest, AuthenticateResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<AuthenticationRequest, AuthenticateResponse>.Patch(params string[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.Patch(string, Expression<Func<AuthenticationRequest, object>>) Endpoint<AuthenticationRequest, AuthenticateResponse>.Permissions(params string[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.PermissionsAll(params string[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<AuthenticationRequest, AuthenticateResponse>.Policies(params string[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.Post(params string[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.Post(string, Expression<Func<AuthenticationRequest, object>>) Endpoint<AuthenticationRequest, AuthenticateResponse>.PostProcessor<TPostProcessor>() Endpoint<AuthenticationRequest, AuthenticateResponse>.PostProcessors(params IPostProcessor<AuthenticationRequest, AuthenticateResponse>[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.PreProcessor<TPreProcessor>() Endpoint<AuthenticationRequest, AuthenticateResponse>.PreProcessors(params IPreProcessor<AuthenticationRequest>[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.Put(params string[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.Put(string, Expression<Func<AuthenticationRequest, object>>) Endpoint<AuthenticationRequest, AuthenticateResponse>.RequestBinder(IRequestBinder<AuthenticationRequest>) Endpoint<AuthenticationRequest, AuthenticateResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<AuthenticationRequest, AuthenticateResponse>.Roles(params string[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.RoutePrefixOverride(string) Endpoint<AuthenticationRequest, AuthenticateResponse>.Routes(params string[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.SerializerContext<TContext>(TContext) Endpoint<AuthenticationRequest, AuthenticateResponse>.SerializerContext<TContext>() Endpoint<AuthenticationRequest, AuthenticateResponse>.Summary(Action<EndpointSummary>) Endpoint<AuthenticationRequest, AuthenticateResponse>.Summary(Action<EndpointSummary<AuthenticationRequest>>) Endpoint<AuthenticationRequest, AuthenticateResponse>.Summary(EndpointSummary) Endpoint<AuthenticationRequest, AuthenticateResponse>.Tags(params string[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.Throttle(int, double, string) Endpoint<AuthenticationRequest, AuthenticateResponse>.Validator<TValidator>() Endpoint<AuthenticationRequest, AuthenticateResponse>.Verbs(params Http[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.Verbs(params string[]) Endpoint<AuthenticationRequest, AuthenticateResponse>.Version(int, int?) Endpoint<AuthenticationRequest, AuthenticateResponse>.AddError(ValidationFailure) Endpoint<AuthenticationRequest, AuthenticateResponse>.AddError(string, string, Severity) Endpoint<AuthenticationRequest, AuthenticateResponse>.AddError(Expression<Func<AuthenticationRequest, object>>, string, string, Severity) Endpoint<AuthenticationRequest, AuthenticateResponse>.ThrowError(ValidationFailure, int?) Endpoint<AuthenticationRequest, AuthenticateResponse>.ThrowError(string, int?) Endpoint<AuthenticationRequest, AuthenticateResponse>.ThrowError(Expression<Func<AuthenticationRequest, object>>, string, int?) Endpoint<AuthenticationRequest, AuthenticateResponse>.ThrowIfAnyErrors(int?) Endpoint<AuthenticationRequest, AuthenticateResponse>.User Endpoint<AuthenticationRequest, AuthenticateResponse>.Response Endpoint<AuthenticationRequest, AuthenticateResponse>.Config Endpoint<AuthenticationRequest, AuthenticateResponse>.Env Endpoint<AuthenticationRequest, AuthenticateResponse>.Logger Endpoint<AuthenticationRequest, AuthenticateResponse>.BaseURL Endpoint<AuthenticationRequest, AuthenticateResponse>.HttpMethod Endpoint<AuthenticationRequest, AuthenticateResponse>.Form Endpoint<AuthenticationRequest, AuthenticateResponse>.Files Endpoint<AuthenticationRequest, AuthenticateResponse>.ResponseStarted Endpoint<AuthenticationRequest, AuthenticateResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LoginEndpoint(ILogger<LoginEndpoint>, IAuthenticationService) Initializes a new instance of the LoginEndpoint class. public LoginEndpoint(ILogger<LoginEndpoint> logger, IAuthenticationService authenticationService) Parameters logger ILogger<LoginEndpoint> The ILogger instance used for logging. authenticationService IAuthenticationService The IAuthenticationService instance used for authenticating User credentials Methods Configure() Configures the route for the Endpoint public override void Configure() HandleAsync(AuthenticationRequest, CancellationToken) Handles the AuthenticationRequest and generates a AuthenticatedUserModel if login was successful public override Task HandleAsync(AuthenticationRequest req, CancellationToken ct) Parameters req AuthenticationRequest The AuthenticationRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Security.LogoutEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Security.LogoutEndpoint.html",
    "title": "Class LogoutEndpoint",
    "keywords": "Class LogoutEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Security Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles logging out a User on the Server public class LogoutEndpoint : Endpoint<LogoutUserRequest>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<LogoutUserRequest, object> Endpoint<LogoutUserRequest> LogoutEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<LogoutUserRequest, object>.HandleAsync(LogoutUserRequest, CancellationToken) Endpoint<LogoutUserRequest, object>.ExecuteAsync(LogoutUserRequest, CancellationToken) Endpoint<LogoutUserRequest, object>.TryResolve<TService>() Endpoint<LogoutUserRequest, object>.TryResolve(Type) Endpoint<LogoutUserRequest, object>.Resolve<TService>() Endpoint<LogoutUserRequest, object>.Resolve(Type) Endpoint<LogoutUserRequest, object>.CreateScope() Endpoint<LogoutUserRequest, object>.TryResolve<TService>(string) Endpoint<LogoutUserRequest, object>.TryResolve(Type, string) Endpoint<LogoutUserRequest, object>.Resolve<TService>(string) Endpoint<LogoutUserRequest, object>.Resolve(Type, string) Endpoint<LogoutUserRequest, object>.Route<T>(string, bool) Endpoint<LogoutUserRequest, object>.Query<T>(string, bool) Endpoint<LogoutUserRequest, object>.FormFileSectionsAsync(CancellationToken) Endpoint<LogoutUserRequest, object>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<LogoutUserRequest, object>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<LogoutUserRequest, object>.ProcessorState<TState>() Endpoint<LogoutUserRequest, object>.OnBeforeValidate(LogoutUserRequest) Endpoint<LogoutUserRequest, object>.OnBeforeValidateAsync(LogoutUserRequest, CancellationToken) Endpoint<LogoutUserRequest, object>.OnAfterValidate(LogoutUserRequest) Endpoint<LogoutUserRequest, object>.OnAfterValidateAsync(LogoutUserRequest, CancellationToken) Endpoint<LogoutUserRequest, object>.OnBeforeHandle(LogoutUserRequest) Endpoint<LogoutUserRequest, object>.OnBeforeHandleAsync(LogoutUserRequest, CancellationToken) Endpoint<LogoutUserRequest, object>.OnAfterHandle(LogoutUserRequest, object) Endpoint<LogoutUserRequest, object>.OnAfterHandleAsync(LogoutUserRequest, object, CancellationToken) Endpoint<LogoutUserRequest, object>.OnValidationFailed() Endpoint<LogoutUserRequest, object>.OnValidationFailedAsync(CancellationToken) Endpoint<LogoutUserRequest, object>.SendAsync(object, int, CancellationToken) Endpoint<LogoutUserRequest, object>.SendResultAsync(IResult) Endpoint<LogoutUserRequest, object>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<LogoutUserRequest, object>.SendCreatedAtAsync<TEndpoint>(object, object, Http?, int?, bool, CancellationToken) Endpoint<LogoutUserRequest, object>.SendCreatedAtAsync(string, object, object, bool, CancellationToken) Endpoint<LogoutUserRequest, object>.SendStringAsync(string, int, string, CancellationToken) Endpoint<LogoutUserRequest, object>.SendOkAsync(object, CancellationToken) Endpoint<LogoutUserRequest, object>.SendOkAsync(CancellationToken) Endpoint<LogoutUserRequest, object>.SendErrorsAsync(int, CancellationToken) Endpoint<LogoutUserRequest, object>.SendNoContentAsync(CancellationToken) Endpoint<LogoutUserRequest, object>.SendNotFoundAsync(CancellationToken) Endpoint<LogoutUserRequest, object>.SendUnauthorizedAsync(CancellationToken) Endpoint<LogoutUserRequest, object>.SendForbiddenAsync(CancellationToken) Endpoint<LogoutUserRequest, object>.SendRedirectAsync(string, bool, bool) Endpoint<LogoutUserRequest, object>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<LogoutUserRequest, object>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<LogoutUserRequest, object>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<LogoutUserRequest, object>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<LogoutUserRequest, object>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<LogoutUserRequest, object>.SendEmptyJsonObject(CancellationToken) Endpoint<LogoutUserRequest, object>.AccessControl(string, Apply?, params string[]) Endpoint<LogoutUserRequest, object>.AccessControl(string, params string[]) Endpoint<LogoutUserRequest, object>.AllowAnonymous(params Http[]) Endpoint<LogoutUserRequest, object>.AllowAnonymous(string[]) Endpoint<LogoutUserRequest, object>.AllowFileUploads(bool) Endpoint<LogoutUserRequest, object>.AllowFormData(bool) Endpoint<LogoutUserRequest, object>.AuthSchemes(params string[]) Endpoint<LogoutUserRequest, object>.Claims(params string[]) Endpoint<LogoutUserRequest, object>.ClaimsAll(params string[]) Endpoint<LogoutUserRequest, object>.Delete(params string[]) Endpoint<LogoutUserRequest, object>.Delete(string, Expression<Func<LogoutUserRequest, object>>) Endpoint<LogoutUserRequest, object>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<LogoutUserRequest, object>.DontAutoSendResponse() Endpoint<LogoutUserRequest, object>.DontAutoTag() Endpoint<LogoutUserRequest, object>.DontCatchExceptions() Endpoint<LogoutUserRequest, object>.DontThrowIfValidationFails() Endpoint<LogoutUserRequest, object>.EnableAntiforgery() Endpoint<LogoutUserRequest, object>.Get(params string[]) Endpoint<LogoutUserRequest, object>.Get(string, Expression<Func<LogoutUserRequest, object>>) Endpoint<LogoutUserRequest, object>.Group<TEndpointGroup>() Endpoint<LogoutUserRequest, object>.Head(params string[]) Endpoint<LogoutUserRequest, object>.Head(string, Expression<Func<LogoutUserRequest, object>>) Endpoint<LogoutUserRequest, object>.Options(Action<RouteHandlerBuilder>) Endpoint<LogoutUserRequest, object>.Patch(params string[]) Endpoint<LogoutUserRequest, object>.Patch(string, Expression<Func<LogoutUserRequest, object>>) Endpoint<LogoutUserRequest, object>.Permissions(params string[]) Endpoint<LogoutUserRequest, object>.PermissionsAll(params string[]) Endpoint<LogoutUserRequest, object>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<LogoutUserRequest, object>.Policies(params string[]) Endpoint<LogoutUserRequest, object>.Post(params string[]) Endpoint<LogoutUserRequest, object>.Post(string, Expression<Func<LogoutUserRequest, object>>) Endpoint<LogoutUserRequest, object>.PostProcessor<TPostProcessor>() Endpoint<LogoutUserRequest, object>.PostProcessors(params IPostProcessor<LogoutUserRequest, object>[]) Endpoint<LogoutUserRequest, object>.PreProcessor<TPreProcessor>() Endpoint<LogoutUserRequest, object>.PreProcessors(params IPreProcessor<LogoutUserRequest>[]) Endpoint<LogoutUserRequest, object>.Put(params string[]) Endpoint<LogoutUserRequest, object>.Put(string, Expression<Func<LogoutUserRequest, object>>) Endpoint<LogoutUserRequest, object>.RequestBinder(IRequestBinder<LogoutUserRequest>) Endpoint<LogoutUserRequest, object>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<LogoutUserRequest, object>.ResponseInterceptor(IResponseInterceptor) Endpoint<LogoutUserRequest, object>.Roles(params string[]) Endpoint<LogoutUserRequest, object>.RoutePrefixOverride(string) Endpoint<LogoutUserRequest, object>.Routes(params string[]) Endpoint<LogoutUserRequest, object>.SerializerContext<TContext>(TContext) Endpoint<LogoutUserRequest, object>.SerializerContext<TContext>() Endpoint<LogoutUserRequest, object>.Summary(Action<EndpointSummary>) Endpoint<LogoutUserRequest, object>.Summary(Action<EndpointSummary<LogoutUserRequest>>) Endpoint<LogoutUserRequest, object>.Summary(EndpointSummary) Endpoint<LogoutUserRequest, object>.Tags(params string[]) Endpoint<LogoutUserRequest, object>.Throttle(int, double, string) Endpoint<LogoutUserRequest, object>.Validator<TValidator>() Endpoint<LogoutUserRequest, object>.Verbs(params Http[]) Endpoint<LogoutUserRequest, object>.Verbs(params string[]) Endpoint<LogoutUserRequest, object>.Version(int, int?) Endpoint<LogoutUserRequest, object>.AddError(ValidationFailure) Endpoint<LogoutUserRequest, object>.AddError(string, string, Severity) Endpoint<LogoutUserRequest, object>.AddError(Expression<Func<LogoutUserRequest, object>>, string, string, Severity) Endpoint<LogoutUserRequest, object>.ThrowError(ValidationFailure, int?) Endpoint<LogoutUserRequest, object>.ThrowError(string, int?) Endpoint<LogoutUserRequest, object>.ThrowError(Expression<Func<LogoutUserRequest, object>>, string, int?) Endpoint<LogoutUserRequest, object>.ThrowIfAnyErrors(int?) Endpoint<LogoutUserRequest, object>.User Endpoint<LogoutUserRequest, object>.Response Endpoint<LogoutUserRequest, object>.Config Endpoint<LogoutUserRequest, object>.Env Endpoint<LogoutUserRequest, object>.Logger Endpoint<LogoutUserRequest, object>.BaseURL Endpoint<LogoutUserRequest, object>.HttpMethod Endpoint<LogoutUserRequest, object>.Form Endpoint<LogoutUserRequest, object>.Files Endpoint<LogoutUserRequest, object>.ResponseStarted Endpoint<LogoutUserRequest, object>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LogoutEndpoint(ILogger<LogoutEndpoint>, ITokenService, IAuthenticationService) Initializes a new instance of the LogoutEndpoint class. public LogoutEndpoint(ILogger<LogoutEndpoint> logger, ITokenService tokenService, IAuthenticationService authenticationService) Parameters logger ILogger<LogoutEndpoint> The ILogger instance used for logging. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests authenticationService IAuthenticationService The IAuthenticationService instance used for logging out the User Methods Configure() Configures the route for the Endpoint public override void Configure() HandleAsync(LogoutUserRequest, CancellationToken) Handles the LogoutUserRequest and logs the User out on the Server public override Task HandleAsync(LogoutUserRequest req, CancellationToken ct) Parameters req LogoutUserRequest The LogoutUserRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Security.RegisterEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Security.RegisterEndpoint.html",
    "title": "Class RegisterEndpoint",
    "keywords": "Class RegisterEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Security Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles registering a new User public class RegisterEndpoint : Endpoint<CreateUserRequest, CreateUserResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<CreateUserRequest, CreateUserResponse> RegisterEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<CreateUserRequest, CreateUserResponse>.HandleAsync(CreateUserRequest, CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.ExecuteAsync(CreateUserRequest, CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.TryResolve<TService>() Endpoint<CreateUserRequest, CreateUserResponse>.TryResolve(Type) Endpoint<CreateUserRequest, CreateUserResponse>.Resolve<TService>() Endpoint<CreateUserRequest, CreateUserResponse>.Resolve(Type) Endpoint<CreateUserRequest, CreateUserResponse>.CreateScope() Endpoint<CreateUserRequest, CreateUserResponse>.TryResolve<TService>(string) Endpoint<CreateUserRequest, CreateUserResponse>.TryResolve(Type, string) Endpoint<CreateUserRequest, CreateUserResponse>.Resolve<TService>(string) Endpoint<CreateUserRequest, CreateUserResponse>.Resolve(Type, string) Endpoint<CreateUserRequest, CreateUserResponse>.Route<T>(string, bool) Endpoint<CreateUserRequest, CreateUserResponse>.Query<T>(string, bool) Endpoint<CreateUserRequest, CreateUserResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<CreateUserRequest, CreateUserResponse>.ProcessorState<TState>() Endpoint<CreateUserRequest, CreateUserResponse>.OnBeforeValidate(CreateUserRequest) Endpoint<CreateUserRequest, CreateUserResponse>.OnBeforeValidateAsync(CreateUserRequest, CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.OnAfterValidate(CreateUserRequest) Endpoint<CreateUserRequest, CreateUserResponse>.OnAfterValidateAsync(CreateUserRequest, CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.OnBeforeHandle(CreateUserRequest) Endpoint<CreateUserRequest, CreateUserResponse>.OnBeforeHandleAsync(CreateUserRequest, CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.OnAfterHandle(CreateUserRequest, CreateUserResponse) Endpoint<CreateUserRequest, CreateUserResponse>.OnAfterHandleAsync(CreateUserRequest, CreateUserResponse, CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.OnValidationFailed() Endpoint<CreateUserRequest, CreateUserResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.SendAsync(CreateUserResponse, int, CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.SendResultAsync(IResult) Endpoint<CreateUserRequest, CreateUserResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.SendCreatedAtAsync<TEndpoint>(object, CreateUserResponse, Http?, int?, bool, CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.SendCreatedAtAsync(string, object, CreateUserResponse, bool, CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.SendOkAsync(CreateUserResponse, CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.SendOkAsync(CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.SendNoContentAsync(CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.SendNotFoundAsync(CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.SendForbiddenAsync(CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.SendRedirectAsync(string, bool, bool) Endpoint<CreateUserRequest, CreateUserResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<CreateUserRequest, CreateUserResponse>.AccessControl(string, Apply?, params string[]) Endpoint<CreateUserRequest, CreateUserResponse>.AccessControl(string, params string[]) Endpoint<CreateUserRequest, CreateUserResponse>.AllowAnonymous(params Http[]) Endpoint<CreateUserRequest, CreateUserResponse>.AllowAnonymous(string[]) Endpoint<CreateUserRequest, CreateUserResponse>.AllowFileUploads(bool) Endpoint<CreateUserRequest, CreateUserResponse>.AllowFormData(bool) Endpoint<CreateUserRequest, CreateUserResponse>.AuthSchemes(params string[]) Endpoint<CreateUserRequest, CreateUserResponse>.Claims(params string[]) Endpoint<CreateUserRequest, CreateUserResponse>.ClaimsAll(params string[]) Endpoint<CreateUserRequest, CreateUserResponse>.Delete(params string[]) Endpoint<CreateUserRequest, CreateUserResponse>.Delete(string, Expression<Func<CreateUserRequest, object>>) Endpoint<CreateUserRequest, CreateUserResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<CreateUserRequest, CreateUserResponse>.DontAutoSendResponse() Endpoint<CreateUserRequest, CreateUserResponse>.DontAutoTag() Endpoint<CreateUserRequest, CreateUserResponse>.DontCatchExceptions() Endpoint<CreateUserRequest, CreateUserResponse>.DontThrowIfValidationFails() Endpoint<CreateUserRequest, CreateUserResponse>.EnableAntiforgery() Endpoint<CreateUserRequest, CreateUserResponse>.Get(params string[]) Endpoint<CreateUserRequest, CreateUserResponse>.Get(string, Expression<Func<CreateUserRequest, object>>) Endpoint<CreateUserRequest, CreateUserResponse>.Group<TEndpointGroup>() Endpoint<CreateUserRequest, CreateUserResponse>.Head(params string[]) Endpoint<CreateUserRequest, CreateUserResponse>.Head(string, Expression<Func<CreateUserRequest, object>>) Endpoint<CreateUserRequest, CreateUserResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<CreateUserRequest, CreateUserResponse>.Patch(params string[]) Endpoint<CreateUserRequest, CreateUserResponse>.Patch(string, Expression<Func<CreateUserRequest, object>>) Endpoint<CreateUserRequest, CreateUserResponse>.Permissions(params string[]) Endpoint<CreateUserRequest, CreateUserResponse>.PermissionsAll(params string[]) Endpoint<CreateUserRequest, CreateUserResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<CreateUserRequest, CreateUserResponse>.Policies(params string[]) Endpoint<CreateUserRequest, CreateUserResponse>.Post(params string[]) Endpoint<CreateUserRequest, CreateUserResponse>.Post(string, Expression<Func<CreateUserRequest, object>>) Endpoint<CreateUserRequest, CreateUserResponse>.PostProcessor<TPostProcessor>() Endpoint<CreateUserRequest, CreateUserResponse>.PostProcessors(params IPostProcessor<CreateUserRequest, CreateUserResponse>[]) Endpoint<CreateUserRequest, CreateUserResponse>.PreProcessor<TPreProcessor>() Endpoint<CreateUserRequest, CreateUserResponse>.PreProcessors(params IPreProcessor<CreateUserRequest>[]) Endpoint<CreateUserRequest, CreateUserResponse>.Put(params string[]) Endpoint<CreateUserRequest, CreateUserResponse>.Put(string, Expression<Func<CreateUserRequest, object>>) Endpoint<CreateUserRequest, CreateUserResponse>.RequestBinder(IRequestBinder<CreateUserRequest>) Endpoint<CreateUserRequest, CreateUserResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<CreateUserRequest, CreateUserResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<CreateUserRequest, CreateUserResponse>.Roles(params string[]) Endpoint<CreateUserRequest, CreateUserResponse>.RoutePrefixOverride(string) Endpoint<CreateUserRequest, CreateUserResponse>.Routes(params string[]) Endpoint<CreateUserRequest, CreateUserResponse>.SerializerContext<TContext>(TContext) Endpoint<CreateUserRequest, CreateUserResponse>.SerializerContext<TContext>() Endpoint<CreateUserRequest, CreateUserResponse>.Summary(Action<EndpointSummary>) Endpoint<CreateUserRequest, CreateUserResponse>.Summary(Action<EndpointSummary<CreateUserRequest>>) Endpoint<CreateUserRequest, CreateUserResponse>.Summary(EndpointSummary) Endpoint<CreateUserRequest, CreateUserResponse>.Tags(params string[]) Endpoint<CreateUserRequest, CreateUserResponse>.Throttle(int, double, string) Endpoint<CreateUserRequest, CreateUserResponse>.Validator<TValidator>() Endpoint<CreateUserRequest, CreateUserResponse>.Verbs(params Http[]) Endpoint<CreateUserRequest, CreateUserResponse>.Verbs(params string[]) Endpoint<CreateUserRequest, CreateUserResponse>.Version(int, int?) Endpoint<CreateUserRequest, CreateUserResponse>.AddError(ValidationFailure) Endpoint<CreateUserRequest, CreateUserResponse>.AddError(string, string, Severity) Endpoint<CreateUserRequest, CreateUserResponse>.AddError(Expression<Func<CreateUserRequest, object>>, string, string, Severity) Endpoint<CreateUserRequest, CreateUserResponse>.ThrowError(ValidationFailure, int?) Endpoint<CreateUserRequest, CreateUserResponse>.ThrowError(string, int?) Endpoint<CreateUserRequest, CreateUserResponse>.ThrowError(Expression<Func<CreateUserRequest, object>>, string, int?) Endpoint<CreateUserRequest, CreateUserResponse>.ThrowIfAnyErrors(int?) Endpoint<CreateUserRequest, CreateUserResponse>.User Endpoint<CreateUserRequest, CreateUserResponse>.Response Endpoint<CreateUserRequest, CreateUserResponse>.Config Endpoint<CreateUserRequest, CreateUserResponse>.Env Endpoint<CreateUserRequest, CreateUserResponse>.Logger Endpoint<CreateUserRequest, CreateUserResponse>.BaseURL Endpoint<CreateUserRequest, CreateUserResponse>.HttpMethod Endpoint<CreateUserRequest, CreateUserResponse>.Form Endpoint<CreateUserRequest, CreateUserResponse>.Files Endpoint<CreateUserRequest, CreateUserResponse>.ResponseStarted Endpoint<CreateUserRequest, CreateUserResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RegisterEndpoint(ILogger<RegisterEndpoint>, IMediator, IConfiguration) Initializes a new instance of the RegisterEndpoint class. public RegisterEndpoint(ILogger<RegisterEndpoint> logger, IMediator mediator, IConfiguration configuration) Parameters logger ILogger<RegisterEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. configuration IConfiguration The IConfiguration instance used for configuration settings. Methods Configure() Configures the route for the Endpoint public override void Configure() HandleAsync(CreateUserRequest, CancellationToken) Handles the CreateUserRequest and generates a CreateUserResponse if registration was successful public override Task HandleAsync(CreateUserRequest req, CancellationToken ct) Parameters req CreateUserRequest The CreateUserRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Security.UpdateEcommerceUserEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Security.UpdateEcommerceUserEndpoint.html",
    "title": "Class UpdateEcommerceUserEndpoint",
    "keywords": "Class UpdateEcommerceUserEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Security Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles updating an existing EcommerceUser public class UpdateEcommerceUserEndpoint : Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse> UpdateEcommerceUserEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.HandleAsync(UpdateEcommerceUserRequest, CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.ExecuteAsync(UpdateEcommerceUserRequest, CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.TryResolve<TService>() Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.TryResolve(Type) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Resolve<TService>() Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Resolve(Type) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.CreateScope() Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.TryResolve<TService>(string) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.TryResolve(Type, string) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Resolve<TService>(string) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Resolve(Type, string) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Route<T>(string, bool) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Query<T>(string, bool) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.ProcessorState<TState>() Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.OnBeforeValidate(UpdateEcommerceUserRequest) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.OnBeforeValidateAsync(UpdateEcommerceUserRequest, CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.OnAfterValidate(UpdateEcommerceUserRequest) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.OnAfterValidateAsync(UpdateEcommerceUserRequest, CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.OnBeforeHandle(UpdateEcommerceUserRequest) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.OnBeforeHandleAsync(UpdateEcommerceUserRequest, CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.OnAfterHandle(UpdateEcommerceUserRequest, UpdateEcommerceUserResponse) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.OnAfterHandleAsync(UpdateEcommerceUserRequest, UpdateEcommerceUserResponse, CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.OnValidationFailed() Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SendAsync(UpdateEcommerceUserResponse, int, CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SendResultAsync(IResult) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SendCreatedAtAsync<TEndpoint>(object, UpdateEcommerceUserResponse, Http?, int?, bool, CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SendCreatedAtAsync(string, object, UpdateEcommerceUserResponse, bool, CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SendOkAsync(UpdateEcommerceUserResponse, CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SendOkAsync(CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SendNoContentAsync(CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SendNotFoundAsync(CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SendForbiddenAsync(CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SendRedirectAsync(string, bool, bool) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.AccessControl(string, Apply?, params string[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.AccessControl(string, params string[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.AllowAnonymous(params Http[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.AllowAnonymous(string[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.AllowFileUploads(bool) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.AllowFormData(bool) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.AuthSchemes(params string[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Claims(params string[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.ClaimsAll(params string[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Delete(params string[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Delete(string, Expression<Func<UpdateEcommerceUserRequest, object>>) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.DontAutoSendResponse() Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.DontAutoTag() Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.DontCatchExceptions() Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.DontThrowIfValidationFails() Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.EnableAntiforgery() Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Get(params string[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Get(string, Expression<Func<UpdateEcommerceUserRequest, object>>) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Group<TEndpointGroup>() Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Head(params string[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Head(string, Expression<Func<UpdateEcommerceUserRequest, object>>) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Patch(params string[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Patch(string, Expression<Func<UpdateEcommerceUserRequest, object>>) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Permissions(params string[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.PermissionsAll(params string[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Policies(params string[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Post(params string[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Post(string, Expression<Func<UpdateEcommerceUserRequest, object>>) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.PostProcessor<TPostProcessor>() Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.PostProcessors(params IPostProcessor<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.PreProcessor<TPreProcessor>() Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.PreProcessors(params IPreProcessor<UpdateEcommerceUserRequest>[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Put(params string[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Put(string, Expression<Func<UpdateEcommerceUserRequest, object>>) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.RequestBinder(IRequestBinder<UpdateEcommerceUserRequest>) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Roles(params string[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.RoutePrefixOverride(string) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Routes(params string[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SerializerContext<TContext>(TContext) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.SerializerContext<TContext>() Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Summary(Action<EndpointSummary>) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Summary(Action<EndpointSummary<UpdateEcommerceUserRequest>>) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Summary(EndpointSummary) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Tags(params string[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Throttle(int, double, string) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Validator<TValidator>() Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Verbs(params Http[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Verbs(params string[]) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Version(int, int?) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.AddError(ValidationFailure) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.AddError(string, string, Severity) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.AddError(Expression<Func<UpdateEcommerceUserRequest, object>>, string, string, Severity) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.ThrowError(ValidationFailure, int?) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.ThrowError(string, int?) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.ThrowError(Expression<Func<UpdateEcommerceUserRequest, object>>, string, int?) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.ThrowIfAnyErrors(int?) Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.User Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Response Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Config Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Env Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Logger Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.BaseURL Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.HttpMethod Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Form Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.Files Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.ResponseStarted Endpoint<UpdateEcommerceUserRequest, UpdateEcommerceUserResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateEcommerceUserEndpoint(ILogger<UpdateEcommerceUserEndpoint>, IMediator, ITokenService) Initializes a new instance of the UpdateEcommerceUserEndpoint class. public UpdateEcommerceUserEndpoint(ILogger<UpdateEcommerceUserEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<UpdateEcommerceUserEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(UpdateEcommerceUserRequest, CancellationToken) Handles the UpdateEcommerceUserRequest and generates a UpdateEcommerceUserResponse public override Task HandleAsync(UpdateEcommerceUserRequest req, CancellationToken ct) Parameters req UpdateEcommerceUserRequest The UpdateEcommerceUserRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Security.UpdatePasswordEndpoint.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Security.UpdatePasswordEndpoint.html",
    "title": "Class UpdatePasswordEndpoint",
    "keywords": "Class UpdatePasswordEndpoint Namespace Ecommerce.FastEndpoints.Endpoints.Security Assembly Ecommerce.FastEndpoints.dll A Fast Endpoint implementation that handles updating an existing EcommerceUser's password public class UpdatePasswordEndpoint : Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>, IEndpoint, IEventBus, IServiceResolverBase Inheritance object BaseEndpoint Endpoint<UpdatePasswordRequest, UpdatePasswordResponse> UpdatePasswordEndpoint Implements IEndpoint IEventBus IServiceResolverBase Inherited Members Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.HandleAsync(UpdatePasswordRequest, CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.ExecuteAsync(UpdatePasswordRequest, CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.TryResolve<TService>() Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.TryResolve(Type) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Resolve<TService>() Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Resolve(Type) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.CreateScope() Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.TryResolve<TService>(string) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.TryResolve(Type, string) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Resolve<TService>(string) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Resolve(Type, string) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Route<T>(string, bool) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Query<T>(string, bool) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.FormFileSectionsAsync(CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.CreateTokenWith<TService>(string, Action<UserPrivileges>) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.ProcessorState<TState>() Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.OnBeforeValidate(UpdatePasswordRequest) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.OnBeforeValidateAsync(UpdatePasswordRequest, CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.OnAfterValidate(UpdatePasswordRequest) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.OnAfterValidateAsync(UpdatePasswordRequest, CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.OnBeforeHandle(UpdatePasswordRequest) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.OnBeforeHandleAsync(UpdatePasswordRequest, CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.OnAfterHandle(UpdatePasswordRequest, UpdatePasswordResponse) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.OnAfterHandleAsync(UpdatePasswordRequest, UpdatePasswordResponse, CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.OnValidationFailed() Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.OnValidationFailedAsync(CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SendAsync(UpdatePasswordResponse, int, CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SendResultAsync(IResult) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SendInterceptedAsync(object, int, CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SendCreatedAtAsync<TEndpoint>(object, UpdatePasswordResponse, Http?, int?, bool, CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SendCreatedAtAsync(string, object, UpdatePasswordResponse, bool, CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SendStringAsync(string, int, string, CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SendOkAsync(UpdatePasswordResponse, CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SendOkAsync(CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SendErrorsAsync(int, CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SendNoContentAsync(CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SendNotFoundAsync(CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SendUnauthorizedAsync(CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SendForbiddenAsync(CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SendRedirectAsync(string, bool, bool) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SendHeadersAsync(Action<IHeaderDictionary>, int, CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SendBytesAsync(byte[], string, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SendFileAsync(FileInfo, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SendStreamAsync(Stream, string, long?, string, DateTimeOffset?, bool, CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SendEventStreamAsync<T>(string, IAsyncEnumerable<T>, CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SendEmptyJsonObject(CancellationToken) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.AccessControl(string, Apply?, params string[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.AccessControl(string, params string[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.AllowAnonymous(params Http[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.AllowAnonymous(string[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.AllowFileUploads(bool) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.AllowFormData(bool) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.AuthSchemes(params string[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Claims(params string[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.ClaimsAll(params string[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Delete(params string[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Delete(string, Expression<Func<UpdatePasswordRequest, object>>) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Description(Action<RouteHandlerBuilder>, bool) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.DontAutoSendResponse() Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.DontAutoTag() Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.DontCatchExceptions() Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.DontThrowIfValidationFails() Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.EnableAntiforgery() Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Get(params string[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Get(string, Expression<Func<UpdatePasswordRequest, object>>) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Group<TEndpointGroup>() Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Head(params string[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Head(string, Expression<Func<UpdatePasswordRequest, object>>) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Options(Action<RouteHandlerBuilder>) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Patch(params string[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Patch(string, Expression<Func<UpdatePasswordRequest, object>>) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Permissions(params string[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.PermissionsAll(params string[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Policy(Action<AuthorizationPolicyBuilder>) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Policies(params string[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Post(params string[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Post(string, Expression<Func<UpdatePasswordRequest, object>>) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.PostProcessor<TPostProcessor>() Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.PostProcessors(params IPostProcessor<UpdatePasswordRequest, UpdatePasswordResponse>[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.PreProcessor<TPreProcessor>() Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.PreProcessors(params IPreProcessor<UpdatePasswordRequest>[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Put(params string[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Put(string, Expression<Func<UpdatePasswordRequest, object>>) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.RequestBinder(IRequestBinder<UpdatePasswordRequest>) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.ResponseCache(int, ResponseCacheLocation, bool, string, string[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.ResponseInterceptor(IResponseInterceptor) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Roles(params string[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.RoutePrefixOverride(string) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Routes(params string[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SerializerContext<TContext>(TContext) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.SerializerContext<TContext>() Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Summary(Action<EndpointSummary>) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Summary(Action<EndpointSummary<UpdatePasswordRequest>>) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Summary(EndpointSummary) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Tags(params string[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Throttle(int, double, string) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Validator<TValidator>() Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Verbs(params Http[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Verbs(params string[]) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Version(int, int?) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.AddError(ValidationFailure) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.AddError(string, string, Severity) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.AddError(Expression<Func<UpdatePasswordRequest, object>>, string, string, Severity) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.ThrowError(ValidationFailure, int?) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.ThrowError(string, int?) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.ThrowError(Expression<Func<UpdatePasswordRequest, object>>, string, int?) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.ThrowIfAnyErrors(int?) Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.User Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Response Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Config Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Env Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Logger Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.BaseURL Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.HttpMethod Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Form Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.Files Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.ResponseStarted Endpoint<UpdatePasswordRequest, UpdatePasswordResponse>.ValidationFailed BaseEndpoint.Verbs(params string[]) BaseEndpoint.Group<TEndpointGroup>() BaseEndpoint.GetAclHash(string) BaseEndpoint.Definition BaseEndpoint.HttpContext BaseEndpoint.ValidationFailures object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdatePasswordEndpoint(ILogger<UpdatePasswordEndpoint>, IMediator, ITokenService) Initializes a new instance of the UpdatePasswordEndpoint class. public UpdatePasswordEndpoint(ILogger<UpdatePasswordEndpoint> logger, IMediator mediator, ITokenService tokenService) Parameters logger ILogger<UpdatePasswordEndpoint> The ILogger instance used for logging. mediator IMediator The MediatR.IMediator instance used for sending Mediator requests. tokenService ITokenService The ITokenService instance used for operations on Auth tokens passed in requests Methods Configure() Configures the route and roles for the Endpoint public override void Configure() HandleAsync(UpdatePasswordRequest, CancellationToken) Handles the UpdatePasswordRequest and generates a UpdatePasswordResponse public override Task HandleAsync(UpdatePasswordRequest req, CancellationToken ct) Parameters req UpdatePasswordRequest The UpdatePasswordRequest object sent in the HTTP request ct CancellationToken The CancellationToken that can be used to request cancellation of the operation. Returns Task"
  },
  "api/Ecommerce.FastEndpoints.Endpoints.Security.html": {
    "href": "api/Ecommerce.FastEndpoints.Endpoints.Security.html",
    "title": "Namespace Ecommerce.FastEndpoints.Endpoints.Security",
    "keywords": "Namespace Ecommerce.FastEndpoints.Endpoints.Security Classes ConfirmEmailEndpoint A Fast Endpoint implementation that handles confirming a User's email address LoginEndpoint A Fast Endpoint implementation that handles logging in a User LogoutEndpoint A Fast Endpoint implementation that handles logging out a User on the Server RegisterEndpoint A Fast Endpoint implementation that handles registering a new User UpdateEcommerceUserEndpoint A Fast Endpoint implementation that handles updating an existing EcommerceUser UpdatePasswordEndpoint A Fast Endpoint implementation that handles updating an existing EcommerceUser's password"
  },
  "api/Ecommerce.FastEndpoints.FastEndpointServiceRegistration.html": {
    "href": "api/Ecommerce.FastEndpoints.FastEndpointServiceRegistration.html",
    "title": "Class FastEndpointServiceRegistration",
    "keywords": "Class FastEndpointServiceRegistration Namespace Ecommerce.FastEndpoints Assembly Ecommerce.FastEndpoints.dll public static class FastEndpointServiceRegistration Inheritance object FastEndpointServiceRegistration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddFastEndpointServices(IServiceCollection, IConfiguration) public static void AddFastEndpointServices(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection configuration IConfiguration"
  },
  "api/Ecommerce.FastEndpoints.Services.TokenService.html": {
    "href": "api/Ecommerce.FastEndpoints.Services.TokenService.html",
    "title": "Class TokenService",
    "keywords": "Class TokenService Namespace Ecommerce.FastEndpoints.Services Assembly Ecommerce.FastEndpoints.dll A service class that handles operations on the JWT token passed in HTTP requests public class TokenService : ITokenService Inheritance object TokenService Implements ITokenService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TokenService(IAuthenticationService) public TokenService(IAuthenticationService authenticationService) Parameters authenticationService IAuthenticationService Methods GetUserIdFromToken(string?) Retrieves the user id from the auth token public Guid? GetUserIdFromToken(string? token) Parameters token string The auth token to parse Returns Guid? The user id if found; null if token is null or no claim is found for NameIdentifier GetUserNameFromToken(string?) Retrieves the username from the token public string? GetUserNameFromToken(string? token) Parameters token string The JWT token passed in the HTTP request Returns string A string containing the username if found; null if token is null or no claim is found for Name ValidateTokenAsync(string?) Validates if the JWT token passed in the HTTP request is still valid for use public Task<bool> ValidateTokenAsync(string? token) Parameters token string The JWT token passed in the HTTP request Returns Task<bool>"
  },
  "api/Ecommerce.FastEndpoints.Services.html": {
    "href": "api/Ecommerce.FastEndpoints.Services.html",
    "title": "Namespace Ecommerce.FastEndpoints.Services",
    "keywords": "Namespace Ecommerce.FastEndpoints.Services Classes TokenService A service class that handles operations on the JWT token passed in HTTP requests"
  },
  "api/Ecommerce.FastEndpoints.html": {
    "href": "api/Ecommerce.FastEndpoints.html",
    "title": "Namespace Ecommerce.FastEndpoints",
    "keywords": "Namespace Ecommerce.FastEndpoints Classes FastEndpointServiceRegistration"
  },
  "api/Ecommerce.Identity.Contracts.IAuthenticationService.html": {
    "href": "api/Ecommerce.Identity.Contracts.IAuthenticationService.html",
    "title": "Interface IAuthenticationService",
    "keywords": "Interface IAuthenticationService Namespace Ecommerce.Identity.Contracts Assembly Ecommerce.Identity.dll Custom Authentication service to handle all security related functions public interface IAuthenticationService Methods AuthenticateAsync(AuthenticationRequest) Authenticates the user requesting to be authenticated Task<AuthenticateResponse> AuthenticateAsync(AuthenticationRequest request) Parameters request AuthenticationRequest The information of the user attempting to authenticate Returns Task<AuthenticateResponse> A AuthenticatedUserModel if the user is found and the information matches correctly null if either property in the request is null or if the information provided does not match to an existing user correctly ConfirmEmailAsync(string, string) Attempts to confirm the email of the user with the provided token Task<ConfirmEmailResponse> ConfirmEmailAsync(string userId, string token) Parameters userId string The unique identifier of the user token string The token used to confirm the email address Returns Task<ConfirmEmailResponse> Returns true if the email was confirmed; Returns false if the user was not found or the token was invalid CreateUserAsync(CreateUserRequest) Creates a new user from the info provided in the request Task<CreateUserResponse> CreateUserAsync(CreateUserRequest createUserRequest) Parameters createUserRequest CreateUserRequest The information of the new User to register Returns Task<CreateUserResponse> A CreateUserResponse with success true if the user was created; false if the user failed to create with Errors populated with the errors that caused failure GetUserById(Guid) Retrieves a EcommerceUser if any exist Task<EcommerceUser?> GetUserById(Guid id) Parameters id Guid The unique identifier of the User to find Returns Task<EcommerceUser> A EcommerceUser; null if no User is found GetUserIdByName(string) Retrieves the unique identifier of the EcommerceUser if it exists Task<Guid?> GetUserIdByName(string userName) Parameters userName string The username of the User Returns Task<Guid?> The unique identifier of the EcommerceUser; null if no User exists with the provided username IsValidToken(string) Validates the Jwt token provided in the request can still be used Task<bool> IsValidToken(string token) Parameters token string The Jwt token send in the request Returns Task<bool> True if the token is still valid False if the token is no longer valid LogoutAsync(string) Logs the user out on the server Task LogoutAsync(string userName) Parameters userName string The User to log out Returns Task UpdatePassword(EcommerceUser?, string, string) Updates the password for an existing EcommerceUser Task<UpdatePasswordResponse> UpdatePassword(EcommerceUser? user, string currentPassword, string newPassword) Parameters user EcommerceUser The EcommerceUser to update the password for currentPassword string The current password of the User newPassword string The new password to update to Returns Task<UpdatePasswordResponse> A UpdatePasswordResponse with success true if the password was updated; false if the password failed to update with ValidationErrors populated with the errors that caused failure UpdateUser(EcommerceUser?, string) Updates the information for an existing EcommerceUser Task<UpdateEcommerceUserResponse> UpdateUser(EcommerceUser? user, string username) Parameters user EcommerceUser The EcommerceUser to update with username string The username to update the EcommerceUser with Returns Task<UpdateEcommerceUserResponse> A UpdateEcommerceUserResponse with success true if the user was updated; false if the user failed to update with ValidationErrors populated with the errors that caused failure"
  },
  "api/Ecommerce.Identity.Contracts.html": {
    "href": "api/Ecommerce.Identity.Contracts.html",
    "title": "Namespace Ecommerce.Identity.Contracts",
    "keywords": "Namespace Ecommerce.Identity.Contracts Interfaces IAuthenticationService Custom Authentication service to handle all security related functions"
  },
  "api/Ecommerce.Identity.IdentityServiceRegistration.html": {
    "href": "api/Ecommerce.Identity.IdentityServiceRegistration.html",
    "title": "Class IdentityServiceRegistration",
    "keywords": "Class IdentityServiceRegistration Namespace Ecommerce.Identity Assembly Ecommerce.Identity.dll public static class IdentityServiceRegistration Inheritance object IdentityServiceRegistration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddIdentityServices(IServiceCollection, IConfiguration) public static void AddIdentityServices(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection configuration IConfiguration"
  },
  "api/Ecommerce.Identity.Models.JwtSettings.html": {
    "href": "api/Ecommerce.Identity.Models.JwtSettings.html",
    "title": "Class JwtSettings",
    "keywords": "Class JwtSettings Namespace Ecommerce.Identity.Models Assembly Ecommerce.Identity.dll public class JwtSettings Inheritance object JwtSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors JwtSettings() public JwtSettings() Properties Audience public string Audience { get; set; } Property Value string Issuer public string Issuer { get; set; } Property Value string Key public string Key { get; set; } Property Value string"
  },
  "api/Ecommerce.Identity.Models.html": {
    "href": "api/Ecommerce.Identity.Models.html",
    "title": "Namespace Ecommerce.Identity.Models",
    "keywords": "Namespace Ecommerce.Identity.Models Classes JwtSettings"
  },
  "api/Ecommerce.Identity.Services.AuthService.html": {
    "href": "api/Ecommerce.Identity.Services.AuthService.html",
    "title": "Class AuthService",
    "keywords": "Class AuthService Namespace Ecommerce.Identity.Services Assembly Ecommerce.Identity.dll public class AuthService : IAuthenticationService Inheritance object AuthService Implements IAuthenticationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthService(UserManager<EcommerceUser>, SignInManager<EcommerceUser>, IOptions<JwtSettings>) public AuthService(UserManager<EcommerceUser> userManager, SignInManager<EcommerceUser> signInManager, IOptions<JwtSettings> jwtSettings) Parameters userManager UserManager<EcommerceUser> signInManager SignInManager<EcommerceUser> jwtSettings IOptions<JwtSettings> Methods AuthenticateAsync(AuthenticationRequest) Authenticates the user requesting to be authenticated public Task<AuthenticateResponse> AuthenticateAsync(AuthenticationRequest request) Parameters request AuthenticationRequest The information of the user attempting to authenticate Returns Task<AuthenticateResponse> A AuthenticateResponse if the user is found and the information matches correctly A SignInResponseResult will be set appropriately based on the result of authentication ConfirmEmailAsync(string, string) Attempts to confirm the email of the user with the provided token public Task<ConfirmEmailResponse> ConfirmEmailAsync(string userId, string token) Parameters userId string The unique identifier of the user token string The token used to confirm the email address Returns Task<ConfirmEmailResponse> Returns true if the email was confirmed; Returns false if the user was not found or the token was invalid CreateUserAsync(CreateUserRequest) Creates a new user from the info provided in the request public Task<CreateUserResponse> CreateUserAsync(CreateUserRequest createUserRequest) Parameters createUserRequest CreateUserRequest The information of the new User to register Returns Task<CreateUserResponse> A CreateUserResponse with success true if the user was created; false if the user failed to create with Errors populated with the errors that caused failure GetUserById(Guid) Retrieves a EcommerceUser if any exist public Task<EcommerceUser?> GetUserById(Guid id) Parameters id Guid The unique identifier of the User to find Returns Task<EcommerceUser> A EcommerceUser; null if no User is found GetUserIdByName(string) Retrieves the unique identifier of the EcommerceUser if it exists public Task<Guid?> GetUserIdByName(string userName) Parameters userName string The username of the User Returns Task<Guid?> The unique identifier of the EcommerceUser; null if no User exists with the provided username IsValidToken(string) Validates the Jwt token provided in the request can still be used public Task<bool> IsValidToken(string token) Parameters token string The Jwt token send in the request Returns Task<bool> True if the token is still valid False if the token is no longer valid LogoutAsync(string) Logs the user out on the server public Task LogoutAsync(string userName) Parameters userName string The User to log out Returns Task UpdatePassword(EcommerceUser?, string, string) Updates the password for an existing EcommerceUser public Task<UpdatePasswordResponse> UpdatePassword(EcommerceUser? user, string currentPassword, string newPassword) Parameters user EcommerceUser The EcommerceUser to update the password for currentPassword string The current password of the User newPassword string The new password to update to Returns Task<UpdatePasswordResponse> A UpdatePasswordResponse with success true if the password was updated; false if the password failed to update with ValidationErrors populated with the errors that caused failure UpdateUser(EcommerceUser?, string) Updates the information for an existing EcommerceUser public Task<UpdateEcommerceUserResponse> UpdateUser(EcommerceUser? user, string username) Parameters user EcommerceUser The EcommerceUser to update with username string The username to update the EcommerceUser with Returns Task<UpdateEcommerceUserResponse> A UpdateEcommerceUserResponse with success true if the user was updated and has a new access token; false if the user failed to update with ValidationErrors populated with the errors that caused failure"
  },
  "api/Ecommerce.Identity.Services.html": {
    "href": "api/Ecommerce.Identity.Services.html",
    "title": "Namespace Ecommerce.Identity.Services",
    "keywords": "Namespace Ecommerce.Identity.Services Classes AuthService"
  },
  "api/Ecommerce.Identity.html": {
    "href": "api/Ecommerce.Identity.html",
    "title": "Namespace Ecommerce.Identity",
    "keywords": "Namespace Ecommerce.Identity Classes IdentityServiceRegistration"
  },
  "api/Ecommerce.Mail.Contracts.IEmailService.html": {
    "href": "api/Ecommerce.Mail.Contracts.IEmailService.html",
    "title": "Interface IEmailService",
    "keywords": "Interface IEmailService Namespace Ecommerce.Mail.Contracts Assembly Ecommerce.Mail.dll Contract for sending emails public interface IEmailService Methods SendEmailAsync(string, string, EmailTemplate, ITemplateModel) Sends an email asynchronously Task SendEmailAsync(string sendTo, string subject, EmailTemplate templateToUse, ITemplateModel templateModel) Parameters sendTo string The email address to send to subject string The subject of the email templateToUse EmailTemplate The email template to use templateModel ITemplateModel The model with the information to fill into the template Returns Task"
  },
  "api/Ecommerce.Mail.Contracts.ITemplateModel.html": {
    "href": "api/Ecommerce.Mail.Contracts.ITemplateModel.html",
    "title": "Interface ITemplateModel",
    "keywords": "Interface ITemplateModel Namespace Ecommerce.Mail.Contracts Assembly Ecommerce.Mail.dll Base interface for template models public interface ITemplateModel"
  },
  "api/Ecommerce.Mail.Contracts.html": {
    "href": "api/Ecommerce.Mail.Contracts.html",
    "title": "Namespace Ecommerce.Mail.Contracts",
    "keywords": "Namespace Ecommerce.Mail.Contracts Interfaces IEmailService Contract for sending emails ITemplateModel Base interface for template models"
  },
  "api/Ecommerce.Mail.MailServiceRegistration.html": {
    "href": "api/Ecommerce.Mail.MailServiceRegistration.html",
    "title": "Class MailServiceRegistration",
    "keywords": "Class MailServiceRegistration Namespace Ecommerce.Mail Assembly Ecommerce.Mail.dll Static class for registering mail services public static class MailServiceRegistration Inheritance object MailServiceRegistration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddMailServices(IServiceCollection, IConfiguration) Registers the mail services public static void AddMailServices(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The service collection to add services to configuration IConfiguration The IConfiguration instance used for configuration settings. Exceptions Exception Thrown if no mail settings were found in the configuration"
  },
  "api/Ecommerce.Mail.Models.Enums.EmailTemplate.html": {
    "href": "api/Ecommerce.Mail.Models.Enums.EmailTemplate.html",
    "title": "Enum EmailTemplate",
    "keywords": "Enum EmailTemplate Namespace Ecommerce.Mail.Models.Enums Assembly Ecommerce.Mail.dll The email templates available public enum EmailTemplate Fields EmailConfirmation = 0 OrderReceipt = 1"
  },
  "api/Ecommerce.Mail.Models.Enums.html": {
    "href": "api/Ecommerce.Mail.Models.Enums.html",
    "title": "Namespace Ecommerce.Mail.Models.Enums",
    "keywords": "Namespace Ecommerce.Mail.Models.Enums Enums EmailTemplate The email templates available"
  },
  "api/Ecommerce.Mail.Models.MailSettings.html": {
    "href": "api/Ecommerce.Mail.Models.MailSettings.html",
    "title": "Class MailSettings",
    "keywords": "Class MailSettings Namespace Ecommerce.Mail.Models Assembly Ecommerce.Mail.dll Model for mail settings public class MailSettings Inheritance object MailSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MailSettings() public MailSettings() Properties Host The host address of the mail server public string? Host { get; set; } Property Value string Password The password to use to authenticate with the mail server public string? Password { get; set; } Property Value string Port The port to use on the mail server public int Port { get; set; } Property Value int UserName The email address to send mail from public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Mail.Models.TemplateModels.EmailConfirmationModel.html": {
    "href": "api/Ecommerce.Mail.Models.TemplateModels.EmailConfirmationModel.html",
    "title": "Class EmailConfirmationModel",
    "keywords": "Class EmailConfirmationModel Namespace Ecommerce.Mail.Models.TemplateModels Assembly Ecommerce.Mail.dll Model for email confirmation template public class EmailConfirmationModel : ITemplateModel Inheritance object EmailConfirmationModel Implements ITemplateModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EmailConfirmationModel() public EmailConfirmationModel() Properties CompanyName The name of the company public string CompanyName { get; init; } Property Value string ConfirmationLink Link to confirm email public string ConfirmationLink { get; set; } Property Value string Name Name of the user public string Name { get; set; } Property Value string"
  },
  "api/Ecommerce.Mail.Models.TemplateModels.OrderReceiptModel.html": {
    "href": "api/Ecommerce.Mail.Models.TemplateModels.OrderReceiptModel.html",
    "title": "Class OrderReceiptModel",
    "keywords": "Class OrderReceiptModel Namespace Ecommerce.Mail.Models.TemplateModels Assembly Ecommerce.Mail.dll Model for the order receipt email template public class OrderReceiptModel : ITemplateModel Inheritance object OrderReceiptModel Implements ITemplateModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrderReceiptModel() public OrderReceiptModel() Properties Name Name of the customer public string Name { get; set; } Property Value string OrderItems Order items of the order public IEnumerable<OrderItemDto> OrderItems { get; set; } Property Value IEnumerable<OrderItemDto> OrderNumber Order number of the order public string OrderNumber { get; set; } Property Value string Total Total amount of the order public double Total { get; set; } Property Value double"
  },
  "api/Ecommerce.Mail.Models.TemplateModels.html": {
    "href": "api/Ecommerce.Mail.Models.TemplateModels.html",
    "title": "Namespace Ecommerce.Mail.Models.TemplateModels",
    "keywords": "Namespace Ecommerce.Mail.Models.TemplateModels Classes EmailConfirmationModel Model for email confirmation template OrderReceiptModel Model for the order receipt email template"
  },
  "api/Ecommerce.Mail.Models.html": {
    "href": "api/Ecommerce.Mail.Models.html",
    "title": "Namespace Ecommerce.Mail.Models",
    "keywords": "Namespace Ecommerce.Mail.Models Classes MailSettings Model for mail settings"
  },
  "api/Ecommerce.Mail.Services.EmailService.html": {
    "href": "api/Ecommerce.Mail.Services.EmailService.html",
    "title": "Class EmailService",
    "keywords": "Class EmailService Namespace Ecommerce.Mail.Services Assembly Ecommerce.Mail.dll Service to send emails public class EmailService : IEmailService Inheritance object EmailService Implements IEmailService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EmailService(ILogger<EmailService>, IFluentEmail) Initializes a new instance of the EmailService class. public EmailService(ILogger<EmailService> logger, IFluentEmail fluentEmail) Parameters logger ILogger<EmailService> The ILogger instance used for logging. fluentEmail IFluentEmail The FluentEmail.Core.IFluentEmail instance used for sending a single email Methods SendEmailAsync(string, string, EmailTemplate, ITemplateModel) Sends an email asynchronously public Task SendEmailAsync(string sendTo, string subject, EmailTemplate templateToUse, ITemplateModel templateModel) Parameters sendTo string The email address to send to subject string The subject of the email templateToUse EmailTemplate The email template to use templateModel ITemplateModel The model with the information to fill into the template Returns Task"
  },
  "api/Ecommerce.Mail.Services.html": {
    "href": "api/Ecommerce.Mail.Services.html",
    "title": "Namespace Ecommerce.Mail.Services",
    "keywords": "Namespace Ecommerce.Mail.Services Classes EmailService Service to send emails"
  },
  "api/Ecommerce.Mail.html": {
    "href": "api/Ecommerce.Mail.html",
    "title": "Namespace Ecommerce.Mail",
    "keywords": "Namespace Ecommerce.Mail Classes MailServiceRegistration Static class for registering mail services"
  },
  "api/Ecommerce.Messages.EcommerceUser.SendEmailConfirmationMessage.html": {
    "href": "api/Ecommerce.Messages.EcommerceUser.SendEmailConfirmationMessage.html",
    "title": "Class SendEmailConfirmationMessage",
    "keywords": "Class SendEmailConfirmationMessage Namespace Ecommerce.Messages.EcommerceUser Assembly Ecommerce.Messages.dll Message to send email confirmation after user registration public record SendEmailConfirmationMessage : IEquatable<SendEmailConfirmationMessage> Inheritance object SendEmailConfirmationMessage Implements IEquatable<SendEmailConfirmationMessage> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SendEmailConfirmationMessage() public SendEmailConfirmationMessage() SendEmailConfirmationMessage(SendEmailConfirmationMessage) protected SendEmailConfirmationMessage(SendEmailConfirmationMessage original) Parameters original SendEmailConfirmationMessage Properties CompanyName The name of the company public string CompanyName { get; init; } Property Value string ConfirmationLink Link to confirm the email public string ConfirmationLink { get; init; } Property Value string EqualityContract protected virtual Type EqualityContract { get; } Property Value Type Name Name of the user public string Name { get; init; } Property Value string SendTo Email address to send the email to public string SendTo { get; init; } Property Value string Methods Equals(SendEmailConfirmationMessage?) public virtual bool Equals(SendEmailConfirmationMessage? other) Parameters other SendEmailConfirmationMessage Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int PrintMembers(StringBuilder) protected virtual bool PrintMembers(StringBuilder builder) Parameters builder StringBuilder Returns bool ToString() public override string ToString() Returns string <Clone>$() public virtual SendEmailConfirmationMessage <Clone>$() Returns SendEmailConfirmationMessage Operators operator ==(SendEmailConfirmationMessage?, SendEmailConfirmationMessage?) public static bool operator ==(SendEmailConfirmationMessage? left, SendEmailConfirmationMessage? right) Parameters left SendEmailConfirmationMessage right SendEmailConfirmationMessage Returns bool operator !=(SendEmailConfirmationMessage?, SendEmailConfirmationMessage?) public static bool operator !=(SendEmailConfirmationMessage? left, SendEmailConfirmationMessage? right) Parameters left SendEmailConfirmationMessage right SendEmailConfirmationMessage Returns bool"
  },
  "api/Ecommerce.Messages.EcommerceUser.html": {
    "href": "api/Ecommerce.Messages.EcommerceUser.html",
    "title": "Namespace Ecommerce.Messages.EcommerceUser",
    "keywords": "Namespace Ecommerce.Messages.EcommerceUser Classes SendEmailConfirmationMessage Message to send email confirmation after user registration"
  },
  "api/Ecommerce.Messages.Order.SendOrderConfirmationMessage.html": {
    "href": "api/Ecommerce.Messages.Order.SendOrderConfirmationMessage.html",
    "title": "Class SendOrderConfirmationMessage",
    "keywords": "Class SendOrderConfirmationMessage Namespace Ecommerce.Messages.Order Assembly Ecommerce.Messages.dll Message to send an order confirmation public class SendOrderConfirmationMessage Inheritance object SendOrderConfirmationMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SendOrderConfirmationMessage() public SendOrderConfirmationMessage() Properties Name Name of the customer public string Name { get; set; } Property Value string OrderItems Order items of the order public IEnumerable<OrderItemDto> OrderItems { get; set; } Property Value IEnumerable<OrderItemDto> OrderNumber Order number of the order public string OrderNumber { get; set; } Property Value string SendTo The email address to send the order confirmation to public string SendTo { get; init; } Property Value string Total Total amount of the order public double Total { get; set; } Property Value double"
  },
  "api/Ecommerce.Messages.Order.html": {
    "href": "api/Ecommerce.Messages.Order.html",
    "title": "Namespace Ecommerce.Messages.Order",
    "keywords": "Namespace Ecommerce.Messages.Order Classes SendOrderConfirmationMessage Message to send an order confirmation"
  },
  "api/Ecommerce.PayPal.Contracts.IPaypalClientService.html": {
    "href": "api/Ecommerce.PayPal.Contracts.IPaypalClientService.html",
    "title": "Interface IPaypalClientService",
    "keywords": "Interface IPaypalClientService Namespace Ecommerce.PayPal.Contracts Assembly Ecommerce.PayPal.dll public interface IPaypalClientService Methods CreateOrder(CreatePayPalOrderRequest) Task<CreatePayPalOrderResponse> CreateOrder(CreatePayPalOrderRequest request) Parameters request CreatePayPalOrderRequest Returns Task<CreatePayPalOrderResponse>"
  },
  "api/Ecommerce.PayPal.Contracts.ITokenCacheService.html": {
    "href": "api/Ecommerce.PayPal.Contracts.ITokenCacheService.html",
    "title": "Interface ITokenCacheService",
    "keywords": "Interface ITokenCacheService Namespace Ecommerce.PayPal.Contracts Assembly Ecommerce.PayPal.dll public interface ITokenCacheService Methods GetToken(string) string? GetToken(string key) Parameters key string Returns string SetToken(string, string, TimeSpan) void SetToken(string key, string token, TimeSpan expiresIn) Parameters key string token string expiresIn TimeSpan"
  },
  "api/Ecommerce.PayPal.Contracts.ITokenService.html": {
    "href": "api/Ecommerce.PayPal.Contracts.ITokenService.html",
    "title": "Interface ITokenService",
    "keywords": "Interface ITokenService Namespace Ecommerce.PayPal.Contracts Assembly Ecommerce.PayPal.dll public interface ITokenService Methods GetNewToken() Task<string> GetNewToken() Returns Task<string>"
  },
  "api/Ecommerce.PayPal.Contracts.Refit.IPayPalApiService.html": {
    "href": "api/Ecommerce.PayPal.Contracts.Refit.IPayPalApiService.html",
    "title": "Interface IPayPalApiService",
    "keywords": "Interface IPayPalApiService Namespace Ecommerce.PayPal.Contracts.Refit Assembly Ecommerce.PayPal.dll public interface IPayPalApiService Methods CreatePayPalOrder(string, PayPalCreateOrderRequest) [Post(\"/v2/checkout/orders\")] [Headers(new string[] { \"Content-Type: application/json\" })] Task<ApiResponse<PayPalCreateOrderResponse>> CreatePayPalOrder(string payPalRequestId, PayPalCreateOrderRequest createPayPalOrderApiRequest) Parameters payPalRequestId string createPayPalOrderApiRequest PayPalCreateOrderRequest Returns Task<ApiResponse<PayPalCreateOrderResponse>>"
  },
  "api/Ecommerce.PayPal.Contracts.Refit.html": {
    "href": "api/Ecommerce.PayPal.Contracts.Refit.html",
    "title": "Namespace Ecommerce.PayPal.Contracts.Refit",
    "keywords": "Namespace Ecommerce.PayPal.Contracts.Refit Interfaces IPayPalApiService"
  },
  "api/Ecommerce.PayPal.Contracts.html": {
    "href": "api/Ecommerce.PayPal.Contracts.html",
    "title": "Namespace Ecommerce.PayPal.Contracts",
    "keywords": "Namespace Ecommerce.PayPal.Contracts Interfaces IPaypalClientService ITokenCacheService ITokenService"
  },
  "api/Ecommerce.PayPal.Models.Address.html": {
    "href": "api/Ecommerce.PayPal.Models.Address.html",
    "title": "Class Address",
    "keywords": "Class Address Namespace Ecommerce.PayPal.Models Assembly Ecommerce.PayPal.dll Represents an address in PayPal. public class Address Inheritance object Address Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Address() public Address() Properties AddressLine1 The first line of the address, such as number and street, for example, 173 Drury Lane. Needed for data entry, and Compliance and Risk checks. This field needs to pass the full address. [JsonPropertyName(\"address_line_1\")] public string? AddressLine1 { get; set; } Property Value string AddressLine2 The second line of the address, for example, a suite or apartment number. [JsonPropertyName(\"address_line_2\")] public string? AddressLine2 { get; set; } Property Value string AdminArea1 The highest-level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. This data is formatted for postal delivery, for example, CA and not California. [JsonPropertyName(\"admin_area_1\")] public string? AdminArea1 { get; set; } Property Value string AdminArea2 A city, town, or village. Smaller than admin_area_level_1. [JsonPropertyName(\"admin_area_2\")] public string? AdminArea2 { get; set; } Property Value string CountryCode The 2-character ISO 3166-1 code that identifies the country or region. [JsonPropertyName(\"country_code\")] public string CountryCode { get; set; } Property Value string PostalCode The postal code, which is the ZIP code or equivalent. Typically required for countries with a postal code or an equivalent. [JsonPropertyName(\"postal_code\")] public string? PostalCode { get; set; } Property Value string"
  },
  "api/Ecommerce.PayPal.Models.BreakDown.html": {
    "href": "api/Ecommerce.PayPal.Models.BreakDown.html",
    "title": "Class BreakDown",
    "keywords": "Class BreakDown Namespace Ecommerce.PayPal.Models Assembly Ecommerce.PayPal.dll Represents a breakdown of the total amount in a PayPal purchase unit. public class BreakDown Inheritance object BreakDown Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BreakDown() public BreakDown() Properties Discount The discount for all items within a given purchase_unit. discount.value can not be a negative number. [JsonPropertyName(\"discount\")] public Currency? Discount { get; set; } Property Value Currency Handling The handling fee for all items within a given purchase_unit. handling.value can not be a negative number. [JsonPropertyName(\"handling\")] public Currency? Handling { get; set; } Property Value Currency Insurance The insurance fee for all items within a given purchase_unit. insurance.value can not be a negative number. [JsonPropertyName(\"insurance\")] public Currency? Insurance { get; set; } Property Value Currency ItemTotal The subtotal for all items. Required if the request includes purchase_units[].items[].unit_amount. Must equal the sum of (items[].unit_amount * items[].quantity) for all items. item_total.value can not be a negative number. [JsonPropertyName(\"item_total\")] public Currency? ItemTotal { get; set; } Property Value Currency Shipping The shipping fee for all items within a given purchase_unit. shipping.value can not be a negative number. [JsonPropertyName(\"shipping\")] public Currency? Shipping { get; set; } Property Value Currency ShippingDiscount The shipping discount for all items within a given purchase_unit. shipping_discount.value can not be a negative number. [JsonPropertyName(\"shipping_discount\")] public Currency? ShippingDiscount { get; set; } Property Value Currency TaxTotal The total tax for all items. Required if the request includes purchase_units.items.tax. Must equal the sum of (items[].tax * items[].quantity) for all items. tax_total.value can not be a negative number. [JsonPropertyName(\"tax_total\")] public Currency? TaxTotal { get; set; } Property Value Currency"
  },
  "api/Ecommerce.PayPal.Models.Currency.html": {
    "href": "api/Ecommerce.PayPal.Models.Currency.html",
    "title": "Class Currency",
    "keywords": "Class Currency Namespace Ecommerce.PayPal.Models Assembly Ecommerce.PayPal.dll Represents a currency amount in PayPal. public class Currency Inheritance object Currency Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Currency() public Currency() Properties CurrencyCode The three-character ISO-4217 currency code that identifies the currency. [JsonPropertyName(\"currency_code\")] [MaxLength(3)] public string CurrencyCode { get; set; } Property Value string Value The value, which might be: An integer for currencies like JPY that are not typically fractional. A decimal fraction for currencies like TND that are subdivided into thousandths. For the required number of decimal places for a currency code, see PayPal Currency Codes. [JsonPropertyName(\"value\")] [MaxLength(32)] public string Value { get; set; } Property Value string"
  },
  "api/Ecommerce.PayPal.Models.Enums.Category.html": {
    "href": "api/Ecommerce.PayPal.Models.Enums.Category.html",
    "title": "Class Category",
    "keywords": "Class Category Namespace Ecommerce.PayPal.Models.Enums Assembly Ecommerce.PayPal.dll public class Category Inheritance object Category Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Category() public Category() Fields DIGITAL_GOODS public const string DIGITAL_GOODS = \"DIGITAL_GOODS\" Field Value string DONATION public const string DONATION = \"DONATION\" Field Value string PHYSICAL_GOODS public const string PHYSICAL_GOODS = \"PHYSICAL_GOODS\" Field Value string"
  },
  "api/Ecommerce.PayPal.Models.Enums.HttpMethod.html": {
    "href": "api/Ecommerce.PayPal.Models.Enums.HttpMethod.html",
    "title": "Class HttpMethod",
    "keywords": "Class HttpMethod Namespace Ecommerce.PayPal.Models.Enums Assembly Ecommerce.PayPal.dll public class HttpMethod Inheritance object HttpMethod Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HttpMethod() public HttpMethod() Fields CONNECT public const string CONNECT = \"CONNECT\" Field Value string DELETE public const string DELETE = \"DELETE\" Field Value string GET public const string GET = \"GET\" Field Value string HEAD public const string HEAD = \"HEAD\" Field Value string OPTIONS public const string OPTIONS = \"OPTIONS\" Field Value string PATCH public const string PATCH = \"PATCH\" Field Value string POST public const string POST = \"POST\" Field Value string PUT public const string PUT = \"PUT\" Field Value string"
  },
  "api/Ecommerce.PayPal.Models.Enums.Intent.html": {
    "href": "api/Ecommerce.PayPal.Models.Enums.Intent.html",
    "title": "Class Intent",
    "keywords": "Class Intent Namespace Ecommerce.PayPal.Models.Enums Assembly Ecommerce.PayPal.dll public class Intent Inheritance object Intent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Intent() public Intent() Fields AUTHORIZE public const string AUTHORIZE = \"AUTHORIZE\" Field Value string CAPTURE public const string CAPTURE = \"CAPTURE\" Field Value string"
  },
  "api/Ecommerce.PayPal.Models.Enums.LandingPage.html": {
    "href": "api/Ecommerce.PayPal.Models.Enums.LandingPage.html",
    "title": "Class LandingPage",
    "keywords": "Class LandingPage Namespace Ecommerce.PayPal.Models.Enums Assembly Ecommerce.PayPal.dll public class LandingPage Inheritance object LandingPage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LandingPage() public LandingPage() Fields GUEST_CHECKOUT public const string GUEST_CHECKOUT = \"GUEST_CHECKOUT\" Field Value string LOGIN public const string LOGIN = \"LOGIN\" Field Value string NO_PREFERENCE public const string NO_PREFERENCE = \"NO_PREFERENCE\" Field Value string"
  },
  "api/Ecommerce.PayPal.Models.Enums.OrderStatus.html": {
    "href": "api/Ecommerce.PayPal.Models.Enums.OrderStatus.html",
    "title": "Class OrderStatus",
    "keywords": "Class OrderStatus Namespace Ecommerce.PayPal.Models.Enums Assembly Ecommerce.PayPal.dll public class OrderStatus Inheritance object OrderStatus Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrderStatus() public OrderStatus() Fields APPROVED public const string APPROVED = \"APPROVED\" Field Value string COMPLETED public const string COMPLETED = \"COMPLETED\" Field Value string CREATED public const string CREATED = \"CREATED\" Field Value string PAYER_ACTION_REQUIRED public const string PAYER_ACTION_REQUIRED = \"PAYER_ACTION_REQUIRED\" Field Value string SAVED public const string SAVED = \"SAVED\" Field Value string VOIDED public const string VOIDED = \"VOIDED\" Field Value string"
  },
  "api/Ecommerce.PayPal.Models.Enums.PaymentMethodPreference.html": {
    "href": "api/Ecommerce.PayPal.Models.Enums.PaymentMethodPreference.html",
    "title": "Class PaymentMethodPreference",
    "keywords": "Class PaymentMethodPreference Namespace Ecommerce.PayPal.Models.Enums Assembly Ecommerce.PayPal.dll public class PaymentMethodPreference Inheritance object PaymentMethodPreference Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PaymentMethodPreference() public PaymentMethodPreference() Fields IMMEDIATE_PAYMENT_REQUIRED public const string IMMEDIATE_PAYMENT_REQUIRED = \"IMMEDIATE_PAYMENT_REQUIRED\" Field Value string UNRESTRICTED public const string UNRESTRICTED = \"UNRESTRICTED\" Field Value string"
  },
  "api/Ecommerce.PayPal.Models.Enums.PhoneType.html": {
    "href": "api/Ecommerce.PayPal.Models.Enums.PhoneType.html",
    "title": "Class PhoneType",
    "keywords": "Class PhoneType Namespace Ecommerce.PayPal.Models.Enums Assembly Ecommerce.PayPal.dll public class PhoneType Inheritance object PhoneType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PhoneType() public PhoneType() Fields FAX public const string FAX = \"FAX\" Field Value string HOME public const string HOME = \"HOME\" Field Value string MOBILE public const string MOBILE = \"MOBILE\" Field Value string OTHER public const string OTHER = \"OTHER\" Field Value string PAGER public const string PAGER = \"PAGER\" Field Value string"
  },
  "api/Ecommerce.PayPal.Models.Enums.ProcessingInstruction.html": {
    "href": "api/Ecommerce.PayPal.Models.Enums.ProcessingInstruction.html",
    "title": "Class ProcessingInstruction",
    "keywords": "Class ProcessingInstruction Namespace Ecommerce.PayPal.Models.Enums Assembly Ecommerce.PayPal.dll public class ProcessingInstruction Inheritance object ProcessingInstruction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProcessingInstruction() public ProcessingInstruction() Fields NO_INSTRUCTION public const string NO_INSTRUCTION = \"NO_INSTRUCTION\" Field Value string ORDER_COMPLETE_ON_PAYMENT_APPROVAL public const string ORDER_COMPLETE_ON_PAYMENT_APPROVAL = \"ORDER_COMPLETE_ON_PAYMENT_APPROVAL\" Field Value string"
  },
  "api/Ecommerce.PayPal.Models.Enums.ShippingPreference.html": {
    "href": "api/Ecommerce.PayPal.Models.Enums.ShippingPreference.html",
    "title": "Class ShippingPreference",
    "keywords": "Class ShippingPreference Namespace Ecommerce.PayPal.Models.Enums Assembly Ecommerce.PayPal.dll public class ShippingPreference Inheritance object ShippingPreference Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShippingPreference() public ShippingPreference() Fields GET_FROM_FILE public const string GET_FROM_FILE = \"GET_FROM_FILE\" Field Value string NO_SHIPPING public const string NO_SHIPPING = \"NO_SHIPPING\" Field Value string SET_PROVIDED_ADDRESS public const string SET_PROVIDED_ADDRESS = \"SET_PROVIDED_ADDRESS\" Field Value string"
  },
  "api/Ecommerce.PayPal.Models.Enums.ShippingType.html": {
    "href": "api/Ecommerce.PayPal.Models.Enums.ShippingType.html",
    "title": "Class ShippingType",
    "keywords": "Class ShippingType Namespace Ecommerce.PayPal.Models.Enums Assembly Ecommerce.PayPal.dll public class ShippingType Inheritance object ShippingType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShippingType() public ShippingType() Fields PICKUP_FROM_PERSON public const string PICKUP_FROM_PERSON = \"PICKUP_FROM_PERSON\" Field Value string PICKUP_IN_PERSON public const string PICKUP_IN_PERSON = \"PICKUP_IN_PERSON\" Field Value string PICKUP_IN_STORE public const string PICKUP_IN_STORE = \"PICKUP_IN_STORE\" Field Value string SHIPPING public const string SHIPPING = \"SHIPPING\" Field Value string"
  },
  "api/Ecommerce.PayPal.Models.Enums.UpcType.html": {
    "href": "api/Ecommerce.PayPal.Models.Enums.UpcType.html",
    "title": "Class UpcType",
    "keywords": "Class UpcType Namespace Ecommerce.PayPal.Models.Enums Assembly Ecommerce.PayPal.dll public class UpcType Inheritance object UpcType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpcType() public UpcType() Fields UPC_2 public const string UPC_2 = \"UPC_2\" Field Value string UPC_5 public const string UPC_5 = \"UPC_5\" Field Value string UPC_A public const string UPC_A = \"UPC_A\" Field Value string UPC_B public const string UPC_B = \"UPC_B\" Field Value string UPC_C public const string UPC_C = \"UPC_C\" Field Value string UPC_D public const string UPC_D = \"UPC_D\" Field Value string UPC_E public const string UPC_E = \"UPC_E\" Field Value string"
  },
  "api/Ecommerce.PayPal.Models.Enums.UserAction.html": {
    "href": "api/Ecommerce.PayPal.Models.Enums.UserAction.html",
    "title": "Class UserAction",
    "keywords": "Class UserAction Namespace Ecommerce.PayPal.Models.Enums Assembly Ecommerce.PayPal.dll public class UserAction Inheritance object UserAction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UserAction() public UserAction() Fields CONTINUE public const string CONTINUE = \"CONTINUE\" Field Value string PAY_NOW public const string PAY_NOW = \"PAY_NOW\" Field Value string"
  },
  "api/Ecommerce.PayPal.Models.Enums.html": {
    "href": "api/Ecommerce.PayPal.Models.Enums.html",
    "title": "Namespace Ecommerce.PayPal.Models.Enums",
    "keywords": "Namespace Ecommerce.PayPal.Models.Enums Classes Category HttpMethod Intent LandingPage OrderStatus PaymentMethodPreference PhoneType ProcessingInstruction ShippingPreference ShippingType UpcType UserAction"
  },
  "api/Ecommerce.PayPal.Models.ExperienceContext.html": {
    "href": "api/Ecommerce.PayPal.Models.ExperienceContext.html",
    "title": "Class ExperienceContext",
    "keywords": "Class ExperienceContext Namespace Ecommerce.PayPal.Models Assembly Ecommerce.PayPal.dll Represents the experience context for a PayPal wallet payment source. public class ExperienceContext Inheritance object ExperienceContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ExperienceContext() public ExperienceContext() Properties BrandName The label that overrides the business name in the PayPal account on the PayPal site. The pattern is defined by an external party and supports Unicode. [JsonPropertyName(\"brand_name\")] public string? BrandName { get; set; } Property Value string CancelUrl The URL where the customer will be redirected upon cancelling the payment approval. [JsonPropertyName(\"cancel_url\")] public string? CancelUrl { get; set; } Property Value string LandingPage The type of landing page to show on the PayPal site for customer checkout. [JsonPropertyName(\"landing_page\")] public string? LandingPage { get; set; } Property Value string Locale The BCP 47-formatted locale of pages that the PayPal payment experience shows. PayPal supports a five-character code. For example, da-DK, he-IL, id-ID, ja-JP, no-NO, pt-BR, ru-RU, sv-SE, th-TH, zh-CN, zh-HK, or zh-TW. [JsonPropertyName(\"locale\")] public string? Locale { get; set; } Property Value string PaymentMethodPreference The merchant-preferred payment methods. [JsonPropertyName(\"payment_method_preference\")] public string? PaymentMethodPreference { get; set; } Property Value string ReturnUrl The URL where the customer will be redirected upon approving a payment. [JsonPropertyName(\"return_url\")] public string? ReturnUrl { get; set; } Property Value string ShippingPreference The location from which the shipping address is derived. [JsonPropertyName(\"shipping_preference\")] public string? ShippingPreference { get; set; } Property Value string UserAction Configures a Continue or Pay Now checkout flow. [JsonPropertyName(\"user_action\")] public string? UserAction { get; set; } Property Value string"
  },
  "api/Ecommerce.PayPal.Models.Item.html": {
    "href": "api/Ecommerce.PayPal.Models.Item.html",
    "title": "Class Item",
    "keywords": "Class Item Namespace Ecommerce.PayPal.Models Assembly Ecommerce.PayPal.dll Represents an item in a PayPal purchase unit. public class Item Inheritance object Item Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Item() public Item() Properties Category The item category type. [JsonPropertyName(\"category\")] public string Category { get; set; } Property Value string Description The detailed item description. [JsonPropertyName(\"description\")] public string? Description { get; set; } Property Value string ImageUrl The URL of the item's image. File type and size restrictions apply. An image that violates these restrictions will not be honored. [JsonPropertyName(\"image_url\")] public string? ImageUrl { get; set; } Property Value string Name The item name or title. [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value string Quantity The item quantity. Must be a whole number. [JsonPropertyName(\"quantity\")] public string Quantity { get; set; } Property Value string Sku The stock keeping unit (SKU) for the item. [JsonPropertyName(\"sku\")] public string Sku { get; set; } Property Value string Tax The item tax for each unit. If tax is specified, purchase_units[].amount.breakdown.tax_total is required. Must equal tax * quantity for all items. tax.value can not be a negative number. [JsonPropertyName(\"tax\")] public Currency Tax { get; set; } Property Value Currency UnitAmount The item price or rate per unit. If you specify unit_amount, purchase_units[].amount.breakdown.item_total is required. Must equal unit_amount * quantity for all items. unit_amount.value can not be a negative number. [JsonPropertyName(\"unit_amount\")] public Currency UnitAmount { get; set; } Property Value Currency Upc The Universal Product Code of the item. [JsonPropertyName(\"upc\")] public Upc? Upc { get; set; } Property Value Upc Url The URL to the item being purchased. Visible to buyer and used in buyer experiences. [JsonPropertyName(\"url\")] public string Url { get; set; } Property Value string"
  },
  "api/Ecommerce.PayPal.Models.Link.html": {
    "href": "api/Ecommerce.PayPal.Models.Link.html",
    "title": "Class Link",
    "keywords": "Class Link Namespace Ecommerce.PayPal.Models Assembly Ecommerce.PayPal.dll Represents a link to a resource. public class Link Inheritance object Link Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Link() public Link() Properties Href The complete target URL. To make the related call, combine the method with this URI Template-formatted link. For pre-processing, include the $, (, and ) characters. The href is the key HATEOAS component that links a completed call with a subsequent call. [JsonPropertyName(\"href\")] public string Href { get; set; } Property Value string Method The HTTP method required to make the related call. [JsonPropertyName(\"method\")] public string? Method { get; set; } Property Value string Rel The link relation type, which serves as an ID for a link that unambiguously describes the semantics of the link. [JsonPropertyName(\"rel\")] public string Rel { get; set; } Property Value string"
  },
  "api/Ecommerce.PayPal.Models.Name.html": {
    "href": "api/Ecommerce.PayPal.Models.Name.html",
    "title": "Class Name",
    "keywords": "Class Name Namespace Ecommerce.PayPal.Models Assembly Ecommerce.PayPal.dll Represents a name in PayPal. public class Name Inheritance object Name Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Name() public Name() Properties GivenName When the party is a person, the party's given, or first, name. [JsonPropertyName(\"given_name\")] public string? GivenName { get; set; } Property Value string Surname When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname. [JsonPropertyName(\"surname\")] public string? Surname { get; set; } Property Value string"
  },
  "api/Ecommerce.PayPal.Models.PayPal.html": {
    "href": "api/Ecommerce.PayPal.Models.PayPal.html",
    "title": "Class PayPal",
    "keywords": "Class PayPal Namespace Ecommerce.PayPal.Models Assembly Ecommerce.PayPal.dll Represents the PayPal wallet payment source. public class PayPal Inheritance object PayPal Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PayPal() public PayPal() Properties Address The address of the PayPal account holder. Supports only the address_line_1, address_line_2, admin_area_1, admin_area_2, postal_code, and country_code properties. Also referred to as the billing address of the customer. [JsonPropertyName(\"address\")] public Address? Address { get; set; } Property Value Address BillingAgreementId The PayPal billing agreement ID. References an approved recurring payment for goods or services. [JsonPropertyName(\"billing_agreement_id\")] public string? BillingAgreementId { get; set; } Property Value string BirthDate The birth date of the PayPal account holder in YYYY-MM-DD format. [JsonPropertyName(\"birth_date\")] public string? BirthDate { get; set; } Property Value string EmailAddress The email address of the PayPal account holder. [JsonPropertyName(\"email_address\")] public string? EmailAddress { get; set; } Property Value string ExperienceContext Customizes the payer experience during the approval process for payment with PayPal. [JsonPropertyName(\"experience_context\")] public ExperienceContext? ExperienceContext { get; set; } Property Value ExperienceContext Name The name of the PayPal account holder. Supports only the given_name and surname properties. [JsonPropertyName(\"name\")] public Name? Name { get; set; } Property Value Name Phone [JsonPropertyName(\"phone\")] public Phone? Phone { get; set; } Property Value Phone TaxInfo The tax information of the PayPal account holder. Required only for Brazilian PayPal account holder's. Both tax_id and tax_id_type are required. [JsonPropertyName(\"tax_info\")] public TaxInfo? TaxInfo { get; set; } Property Value TaxInfo VaultId The PayPal-generated ID for the payment_source stored within the Vault. [JsonPropertyName(\"vault_id\")] public string? VaultId { get; set; } Property Value string"
  },
  "api/Ecommerce.PayPal.Models.Payee.html": {
    "href": "api/Ecommerce.PayPal.Models.Payee.html",
    "title": "Class Payee",
    "keywords": "Class Payee Namespace Ecommerce.PayPal.Models Assembly Ecommerce.PayPal.dll Represents a merchant in PayPal. public class Payee Inheritance object Payee Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Payee() public Payee() Properties Email The email address of merchant. [JsonPropertyName(\"email_address\")] public string? Email { get; set; } Property Value string MerchantId The encrypted PayPal account ID of the merchant. [JsonPropertyName(\"merchant_id\")] public string? MerchantId { get; set; } Property Value string"
  },
  "api/Ecommerce.PayPal.Models.PaymentSource.html": {
    "href": "api/Ecommerce.PayPal.Models.PaymentSource.html",
    "title": "Class PaymentSource",
    "keywords": "Class PaymentSource Namespace Ecommerce.PayPal.Models Assembly Ecommerce.PayPal.dll Represents the payment source for a PayPal order. public class PaymentSource Inheritance object PaymentSource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PaymentSource() public PaymentSource() Properties PayPal The PayPal payment source. [JsonPropertyName(\"paypal\")] public PayPal? PayPal { get; set; } Property Value PayPal"
  },
  "api/Ecommerce.PayPal.Models.Phone.html": {
    "href": "api/Ecommerce.PayPal.Models.Phone.html",
    "title": "Class Phone",
    "keywords": "Class Phone Namespace Ecommerce.PayPal.Models Assembly Ecommerce.PayPal.dll Represents a phone number in PayPal. public class Phone Inheritance object Phone Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Phone() public Phone() Properties PhoneNumber The phone number, in its canonical international E.164 numbering plan format. Supports only the national_number property. [JsonPropertyName(\"phone_number\")] public PhoneNumber PhoneNumber { get; set; } Property Value PhoneNumber PhoneType The phone type. [JsonPropertyName(\"phone_type\")] public string? PhoneType { get; set; } Property Value string"
  },
  "api/Ecommerce.PayPal.Models.PhoneNumber.html": {
    "href": "api/Ecommerce.PayPal.Models.PhoneNumber.html",
    "title": "Class PhoneNumber",
    "keywords": "Class PhoneNumber Namespace Ecommerce.PayPal.Models Assembly Ecommerce.PayPal.dll Represents a phone number. public class PhoneNumber Inheritance object PhoneNumber Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PhoneNumber() public PhoneNumber() Properties NationalNumber The national number, in its canonical international E.164 numbering plan format. The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN). [JsonPropertyName(\"national_number\")] public string NationalNumber { get; set; } Property Value string"
  },
  "api/Ecommerce.PayPal.Models.PurchaseAmount.html": {
    "href": "api/Ecommerce.PayPal.Models.PurchaseAmount.html",
    "title": "Class PurchaseAmount",
    "keywords": "Class PurchaseAmount Namespace Ecommerce.PayPal.Models Assembly Ecommerce.PayPal.dll public class PurchaseAmount Inheritance object PurchaseAmount Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PurchaseAmount() public PurchaseAmount() Properties BreakDown The breakdown of the amount. Breakdown provides details such as total item amount, total tax amount, shipping, handling, insurance, and discounts, if any. [JsonPropertyName(\"breakdown\")] public BreakDown? BreakDown { get; set; } Property Value BreakDown CurrencyCode The three-character ISO-4217 currency code that identifies the currency. [JsonPropertyName(\"currency_code\")] [MaxLength(3)] public string CurrencyCode { get; set; } Property Value string Value The value, which might be: An integer for currencies like JPY that are not typically fractional. A decimal fraction for currencies like TND that are subdivided into thousandths. For the required number of decimal places for a currency code, see PayPal Currency Codes. [JsonPropertyName(\"value\")] [MaxLength(32)] public string Value { get; set; } Property Value string"
  },
  "api/Ecommerce.PayPal.Models.PurchaseUnit.html": {
    "href": "api/Ecommerce.PayPal.Models.PurchaseUnit.html",
    "title": "Class PurchaseUnit",
    "keywords": "Class PurchaseUnit Namespace Ecommerce.PayPal.Models Assembly Ecommerce.PayPal.dll Represents a purchase unit in a PayPal order. public class PurchaseUnit Inheritance object PurchaseUnit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PurchaseUnit() public PurchaseUnit() Properties Amount The total order amount with an optional breakdown that provides details, such as the total item amount, total tax amount, shipping, handling, insurance, and discounts, if any. If you specify amount.breakdown, the amount equals item_total plus tax_total plus shipping plus handling plus insurance minus shipping_discount minus discount. The amount must be a positive number. The amount.value field supports up to 15 digits preceding the decimal. For a list of supported currencies, decimal precision, and maximum charge amount, see the PayPal REST APIs Currency Codes. [AliasAs(\"amount\")] public PurchaseAmount Amount { get; set; } Property Value PurchaseAmount CustomId The API caller-provided external ID. Used to reconcile client transactions with PayPal transactions. Appears in transaction and settlement reports but is not visible to the payer. [AliasAs(\"custom_id\")] public string? CustomId { get; set; } Property Value string Description The purchase description. The maximum length of the character is dependent on the type of characters used. The character length is specified assuming a US ASCII character. Depending on type of character; (e.g. accented character, Japanese characters) the number of characters that that can be specified as input might not equal the permissible max length. [AliasAs(\"description\")] public string Description { get; set; } Property Value string InvoiceId The API caller-provided external invoice number for this order. Appears in both the payer's transaction history and the emails that the payer receives. [AliasAs(\"invoice_id\")] public string? InvoiceId { get; set; } Property Value string Items An array of items that the customer purchases from the merchant. [AliasAs(\"items\")] public IEnumerable<Item> Items { get; set; } Property Value IEnumerable<Item> Payee The merchant who receives payment for this transaction. [AliasAs(\"payee\")] public Payee? Payee { get; set; } Property Value Payee ReferenceId The API caller-provided external ID for the purchase unit. Required for multiple purchase units when you must update the order through PATCH. If you omit this value and the order contains only one purchase unit, PayPal sets this value to default. [AliasAs(\"reference_id\")] public string ReferenceId { get; set; } Property Value string Shipping The name and address of the person to whom to ship the items. [AliasAs(\"shipping\")] public Shipping? Shipping { get; set; } Property Value Shipping SoftDescriptor The soft descriptor is the dynamic text used to construct the statement descriptor that appears on a payer's card statement. [AliasAs(\"soft_descriptor\")] public string SoftDescriptor { get; set; } Property Value string"
  },
  "api/Ecommerce.PayPal.Models.Requests.PayPalCreateOrderRequest.html": {
    "href": "api/Ecommerce.PayPal.Models.Requests.PayPalCreateOrderRequest.html",
    "title": "Class PayPalCreateOrderRequest",
    "keywords": "Class PayPalCreateOrderRequest Namespace Ecommerce.PayPal.Models.Requests Assembly Ecommerce.PayPal.dll Represents a request to create a PayPal order. public class PayPalCreateOrderRequest Inheritance object PayPalCreateOrderRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PayPalCreateOrderRequest() public PayPalCreateOrderRequest() Properties Intent The intent to either capture payment immediately or authorize a payment for an order after order creation. [JsonPropertyName(\"intent\")] public string Intent { get; set; } Property Value string PaymentSource The payment source definition. [JsonPropertyName(\"payment_source\")] public PaymentSource PaymentSource { get; set; } Property Value PaymentSource PurchaseUnits An array of purchase units. Each purchase unit establishes a contract between a payer and the payee. Each purchase unit represents either a full or partial order that the payer intends to purchase from the payee. [JsonPropertyName(\"purchase_units\")] public IEnumerable<PurchaseUnit> PurchaseUnits { get; set; } Property Value IEnumerable<PurchaseUnit>"
  },
  "api/Ecommerce.PayPal.Models.Requests.html": {
    "href": "api/Ecommerce.PayPal.Models.Requests.html",
    "title": "Namespace Ecommerce.PayPal.Models.Requests",
    "keywords": "Namespace Ecommerce.PayPal.Models.Requests Classes PayPalCreateOrderRequest Represents a request to create a PayPal order."
  },
  "api/Ecommerce.PayPal.Models.Responses.PayPalAuthTokenResponse.html": {
    "href": "api/Ecommerce.PayPal.Models.Responses.PayPalAuthTokenResponse.html",
    "title": "Class PayPalAuthTokenResponse",
    "keywords": "Class PayPalAuthTokenResponse Namespace Ecommerce.PayPal.Models.Responses Assembly Ecommerce.PayPal.dll Represents the response from PayPal when requesting an auth token. public class PayPalAuthTokenResponse Inheritance object PayPalAuthTokenResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PayPalAuthTokenResponse() public PayPalAuthTokenResponse() Properties AccessToken The access token to use for requests. [JsonPropertyName(\"access_token\")] public string? AccessToken { get; set; } Property Value string AppId The app id. [JsonPropertyName(\"app_id\")] public string? AppId { get; set; } Property Value string ExpiresIn Time in seconds until the token expires. [JsonPropertyName(\"expires_in\")] public int ExpiresIn { get; set; } Property Value int Nonce The nonce. [JsonPropertyName(\"nonce\")] public string? Nonce { get; set; } Property Value string Scope The scope of the token. [JsonPropertyName(\"scope\")] public string? Scope { get; set; } Property Value string TokenType The token type. [JsonPropertyName(\"token_type\")] public string? TokenType { get; set; } Property Value string"
  },
  "api/Ecommerce.PayPal.Models.Responses.PayPalCreateOrderResponse.html": {
    "href": "api/Ecommerce.PayPal.Models.Responses.PayPalCreateOrderResponse.html",
    "title": "Class PayPalCreateOrderResponse",
    "keywords": "Class PayPalCreateOrderResponse Namespace Ecommerce.PayPal.Models.Responses Assembly Ecommerce.PayPal.dll Represents the response from the PayPal API when creating an order. public class PayPalCreateOrderResponse Inheritance object PayPalCreateOrderResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PayPalCreateOrderResponse() public PayPalCreateOrderResponse() Properties CreateTime The date and time when the transaction occurred, in Internet date and time format. [JsonPropertyName(\"create_time\")] public DateTime? CreateTime { get; set; } Property Value DateTime? Id The ID of the order. [JsonPropertyName(\"id\")] public string Id { get; set; } Property Value string Intent The intent to either capture payment immediately or authorize a payment for an order after order creation. [JsonPropertyName(\"intent\")] public string Intent { get; set; } Property Value string Links An array of request-related HATEOAS links. To complete payer approval, use the approve link to redirect the payer. The API caller has 3 hours (default setting, this which can be changed by your account manager to 24/48/72 hours to accommodate your use case) from the time the order is created, to redirect your payer. Once redirected, the API caller has 3 hours for the payer to approve the order and either authorize or capture the order. [JsonPropertyName(\"links\")] public List<Link> Links { get; set; } Property Value List<Link> ProcessingInstruction The instruction to process an order. [JsonPropertyName(\"processing_instruction\")] public string? ProcessingInstruction { get; set; } Property Value string PurchaseUnits An array of purchase units. Each purchase unit establishes a contract between a customer and merchant. Each purchase unit represents either a full or partial order that the customer intends to purchase from the merchant. [JsonPropertyName(\"purchase_units\")] public List<PurchaseUnit>? PurchaseUnits { get; set; } Property Value List<PurchaseUnit> Status The order status. [JsonPropertyName(\"status\")] public string? Status { get; set; } Property Value string UpdateTime The date and time when the transaction was last updated, in Internet date and time format. [JsonPropertyName(\"update_time\")] public DateTime? UpdateTime { get; set; } Property Value DateTime?"
  },
  "api/Ecommerce.PayPal.Models.Responses.html": {
    "href": "api/Ecommerce.PayPal.Models.Responses.html",
    "title": "Namespace Ecommerce.PayPal.Models.Responses",
    "keywords": "Namespace Ecommerce.PayPal.Models.Responses Classes PayPalAuthTokenResponse Represents the response from PayPal when requesting an auth token. PayPalCreateOrderResponse Represents the response from the PayPal API when creating an order."
  },
  "api/Ecommerce.PayPal.Models.Shipping.html": {
    "href": "api/Ecommerce.PayPal.Models.Shipping.html",
    "title": "Class Shipping",
    "keywords": "Class Shipping Namespace Ecommerce.PayPal.Models Assembly Ecommerce.PayPal.dll Represents a shipping address in a PayPal order. public class Shipping Inheritance object Shipping Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Shipping() public Shipping() Properties Address The address of the person to whom to ship the items. [JsonPropertyName(\"address\")] public Address Address { get; set; } Property Value Address Name The name of the person to whom to ship the items. Supports only the full_name property. [JsonPropertyName(\"name\")] public Name Name { get; set; } Property Value Name Options An array of shipping options that the payee or merchant offers to the payer to ship or pick up their items. [JsonPropertyName(\"options\")] public IEnumerable<ShippingOptions> Options { get; set; } Property Value IEnumerable<ShippingOptions> Type A classification for the method of purchase fulfillment (e.g shipping, in-store pickup, etc). Either type or options may be present, but not both. [JsonPropertyName(\"type\")] public string? Type { get; set; } Property Value string"
  },
  "api/Ecommerce.PayPal.Models.ShippingOptions.html": {
    "href": "api/Ecommerce.PayPal.Models.ShippingOptions.html",
    "title": "Class ShippingOptions",
    "keywords": "Class ShippingOptions Namespace Ecommerce.PayPal.Models Assembly Ecommerce.PayPal.dll Represents a shipping option in a PayPal order. public class ShippingOptions Inheritance object ShippingOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShippingOptions() public ShippingOptions() Properties Amount The shipping cost for the selected option. [JsonPropertyName(\"amount\")] public Currency Amount { get; set; } Property Value Currency Id A unique ID that identifies a payer-selected shipping option. [JsonPropertyName(\"id\")] public string Id { get; set; } Property Value string Label A description that the payer sees, which helps them choose an appropriate shipping option. For example, Free Shipping or USPS Priority Shipping. Localize this description to the payer's locale. [JsonPropertyName(\"label\")] public string Label { get; set; } Property Value string Selected If the API request sets selected = true, it represents the shipping option that the payee or merchant expects to be pre-selected for the payer when they first view the shipping.options in the PayPal Checkout experience. As part of the response if a shipping.option contains selected=true, it represents the shipping option that the payer selected during the course of checkout with PayPal. Only one shipping.option can be set to selected=true. [JsonPropertyName(\"selected\")] public bool Selected { get; set; } Property Value bool Type A classification for the method of purchase fulfillment. [JsonPropertyName(\"type\")] public string Type { get; set; } Property Value string"
  },
  "api/Ecommerce.PayPal.Models.TaxInfo.html": {
    "href": "api/Ecommerce.PayPal.Models.TaxInfo.html",
    "title": "Class TaxInfo",
    "keywords": "Class TaxInfo Namespace Ecommerce.PayPal.Models Assembly Ecommerce.PayPal.dll Represents the tax information of the PayPal account holder. public class TaxInfo Inheritance object TaxInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TaxInfo() public TaxInfo() Properties TaxId The customer's tax ID value. [JsonPropertyName(\"tax_id\")] public string TaxId { get; set; } Property Value string TaxIdType The customer's tax ID type. [JsonPropertyName(\"tax_id_type\")] public string TaxIdType { get; set; } Property Value string"
  },
  "api/Ecommerce.PayPal.Models.Upc.html": {
    "href": "api/Ecommerce.PayPal.Models.Upc.html",
    "title": "Class Upc",
    "keywords": "Class Upc Namespace Ecommerce.PayPal.Models Assembly Ecommerce.PayPal.dll Represents a Universal Product Code (UPC). public class Upc Inheritance object Upc Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Upc() public Upc() Properties Code The UPC product code of the item. [JsonPropertyName(\"code\")] public string Code { get; set; } Property Value string Type The Universal Product Code type. [JsonPropertyName(\"type\")] public string Type { get; set; } Property Value string"
  },
  "api/Ecommerce.PayPal.Models.html": {
    "href": "api/Ecommerce.PayPal.Models.html",
    "title": "Namespace Ecommerce.PayPal.Models",
    "keywords": "Namespace Ecommerce.PayPal.Models Classes Address Represents an address in PayPal. BreakDown Represents a breakdown of the total amount in a PayPal purchase unit. Currency Represents a currency amount in PayPal. ExperienceContext Represents the experience context for a PayPal wallet payment source. Item Represents an item in a PayPal purchase unit. Link Represents a link to a resource. Name Represents a name in PayPal. PayPal Represents the PayPal wallet payment source. Payee Represents a merchant in PayPal. PaymentSource Represents the payment source for a PayPal order. Phone Represents a phone number in PayPal. PhoneNumber Represents a phone number. PurchaseAmount PurchaseUnit Represents a purchase unit in a PayPal order. Shipping Represents a shipping address in a PayPal order. ShippingOptions Represents a shipping option in a PayPal order. TaxInfo Represents the tax information of the PayPal account holder. Upc Represents a Universal Product Code (UPC)."
  },
  "api/Ecommerce.PayPal.PayPalServiceRegistration.html": {
    "href": "api/Ecommerce.PayPal.PayPalServiceRegistration.html",
    "title": "Class PayPalServiceRegistration",
    "keywords": "Class PayPalServiceRegistration Namespace Ecommerce.PayPal Assembly Ecommerce.PayPal.dll public static class PayPalServiceRegistration Inheritance object PayPalServiceRegistration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddPayPalServices(IServiceCollection, IConfiguration) public static void AddPayPalServices(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection configuration IConfiguration"
  },
  "api/Ecommerce.PayPal.Security.AuthHeaderHandler.html": {
    "href": "api/Ecommerce.PayPal.Security.AuthHeaderHandler.html",
    "title": "Class AuthHeaderHandler",
    "keywords": "Class AuthHeaderHandler Namespace Ecommerce.PayPal.Security Assembly Ecommerce.PayPal.dll public class AuthHeaderHandler : DelegatingHandler, IDisposable Inheritance object HttpMessageHandler DelegatingHandler AuthHeaderHandler Implements IDisposable Inherited Members DelegatingHandler.Dispose(bool) DelegatingHandler.Send(HttpRequestMessage, CancellationToken) DelegatingHandler.InnerHandler HttpMessageHandler.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthHeaderHandler(ITokenCacheService, IConfiguration) public AuthHeaderHandler(ITokenCacheService tokenCacheService, IConfiguration configuration) Parameters tokenCacheService ITokenCacheService configuration IConfiguration Methods SendAsync(HttpRequestMessage, CancellationToken) Sends an HTTP request to the inner handler to send to the server as an asynchronous operation. protected override Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) Parameters request HttpRequestMessage The HTTP request message to send to the server. cancellationToken CancellationToken A cancellation token to cancel operation. Returns Task<HttpResponseMessage> The task object representing the asynchronous operation. Exceptions ArgumentNullException The request was null."
  },
  "api/Ecommerce.PayPal.Security.TokenCacheService.html": {
    "href": "api/Ecommerce.PayPal.Security.TokenCacheService.html",
    "title": "Class TokenCacheService",
    "keywords": "Class TokenCacheService Namespace Ecommerce.PayPal.Security Assembly Ecommerce.PayPal.dll public class TokenCacheService : ITokenCacheService Inheritance object TokenCacheService Implements ITokenCacheService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TokenCacheService(IMemoryCache) public TokenCacheService(IMemoryCache cache) Parameters cache IMemoryCache Methods GetToken(string) public string? GetToken(string key) Parameters key string Returns string SetToken(string, string, TimeSpan) public void SetToken(string key, string token, TimeSpan expiresIn) Parameters key string token string expiresIn TimeSpan"
  },
  "api/Ecommerce.PayPal.Security.TokenService.html": {
    "href": "api/Ecommerce.PayPal.Security.TokenService.html",
    "title": "Class TokenService",
    "keywords": "Class TokenService Namespace Ecommerce.PayPal.Security Assembly Ecommerce.PayPal.dll public class TokenService : ITokenService Inheritance object TokenService Implements ITokenService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TokenService(IHttpClientFactory, ITokenCacheService, IConfiguration) public TokenService(IHttpClientFactory httpClientFactory, ITokenCacheService tokenCacheService, IConfiguration configuration) Parameters httpClientFactory IHttpClientFactory tokenCacheService ITokenCacheService configuration IConfiguration Methods GetNewToken() public Task<string> GetNewToken() Returns Task<string>"
  },
  "api/Ecommerce.PayPal.Security.html": {
    "href": "api/Ecommerce.PayPal.Security.html",
    "title": "Namespace Ecommerce.PayPal.Security",
    "keywords": "Namespace Ecommerce.PayPal.Security Classes AuthHeaderHandler TokenCacheService TokenService"
  },
  "api/Ecommerce.PayPal.Services.PaypalClientService.html": {
    "href": "api/Ecommerce.PayPal.Services.PaypalClientService.html",
    "title": "Class PaypalClientService",
    "keywords": "Class PaypalClientService Namespace Ecommerce.PayPal.Services Assembly Ecommerce.PayPal.dll Service for interacting with the PayPal API public class PaypalClientService : IPaypalClientService Inheritance object PaypalClientService Implements IPaypalClientService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PaypalClientService(ILogger<PaypalClientService>, ITokenService, IPayPalApiService, IConfiguration) Constructor for the PayPal Client Service public PaypalClientService(ILogger<PaypalClientService> logger, ITokenService tokenService, IPayPalApiService payPalApiService, IConfiguration configuration) Parameters logger ILogger<PaypalClientService> The ILogger instance used for logging. tokenService ITokenService The ITokenService service used for Auth Token operations payPalApiService IPayPalApiService The Refit contract for calling the PayPal API configuration IConfiguration The IConfiguration instance used for configuration settings. Methods CreateOrder(CreatePayPalOrderRequest) Service method for creating a PayPal Order public Task<CreatePayPalOrderResponse> CreateOrder(CreatePayPalOrderRequest request) Parameters request CreatePayPalOrderRequest The Ecommerce Api Request to create an order Returns Task<CreatePayPalOrderResponse> Returns true with the redirect url and the PayPal RequestId if the order was created successfully; Returns false if the order creation failed. Message will contain the message to display to the user."
  },
  "api/Ecommerce.PayPal.Services.html": {
    "href": "api/Ecommerce.PayPal.Services.html",
    "title": "Namespace Ecommerce.PayPal.Services",
    "keywords": "Namespace Ecommerce.PayPal.Services Classes PaypalClientService Service for interacting with the PayPal API"
  },
  "api/Ecommerce.PayPal.html": {
    "href": "api/Ecommerce.PayPal.html",
    "title": "Namespace Ecommerce.PayPal",
    "keywords": "Namespace Ecommerce.PayPal Classes PayPalServiceRegistration"
  },
  "api/Ecommerce.Persistence.Contracts.IAsyncRepository-1.html": {
    "href": "api/Ecommerce.Persistence.Contracts.IAsyncRepository-1.html",
    "title": "Interface IAsyncRepository<T>",
    "keywords": "Interface IAsyncRepository<T> Namespace Ecommerce.Persistence.Contracts Assembly Ecommerce.Persistence.dll Represents a CRUD repository for entities of type T. public interface IAsyncRepository<T> where T : class Type Parameters T The entity type. Methods AddAsync(T) Adds a T to the table. Task<int> AddAsync(T entity) Parameters entity T The T to add Returns Task<int> The ID of the newly added T if successful; -1 if the INSERT operation fails. DeleteAsync(T) Deletes a row in the database based on the provided T. Task<bool> DeleteAsync(T entity) Parameters entity T The T to delete. Returns Task<bool> true if the DELETE is successful; false if the DELETE fails or the T is not found. GetByIdAsync(int) Retrieves a T from the database with the specified ID. Task<T?> GetByIdAsync(int id) Parameters id int The unique identifier of the T Returns Task<T> The T if found; null if no T with the specified ID is found. UpdateAsync(T) Updates a row in the database based on the provided T. Task<bool> UpdateAsync(T entity) Parameters entity T The T with updated data. Returns Task<bool> true if the UPDATE is successful; false if the UPDATE fails or the entity is not found."
  },
  "api/Ecommerce.Persistence.Contracts.ICartItemRepository.html": {
    "href": "api/Ecommerce.Persistence.Contracts.ICartItemRepository.html",
    "title": "Interface ICartItemRepository",
    "keywords": "Interface ICartItemRepository Namespace Ecommerce.Persistence.Contracts Assembly Ecommerce.Persistence.dll Extends the IAsyncRepository<T> interface with an additional method for CartItem entities public interface ICartItemRepository : IAsyncRepository<CartItem> Inherited Members IAsyncRepository<CartItem>.GetByIdAsync(int) IAsyncRepository<CartItem>.AddAsync(CartItem) IAsyncRepository<CartItem>.UpdateAsync(CartItem) IAsyncRepository<CartItem>.DeleteAsync(CartItem) Methods CartItemExistsForUser(Guid, int) Checks to see if the user already has a CartItem for the Product Task<bool> CartItemExistsForUser(Guid userId, int productId) Parameters userId Guid The unique identifier of the EcommerceUser productId int The unique identifier of the Product Returns Task<bool> true if the CartItem exists; false no CartItem is found. ListAllAsync(Guid) Retrieves all CartItem entities from the database for a EcommerceUser. Task<IEnumerable<CartItem>?> ListAllAsync(Guid userId) Parameters userId Guid The unique identifier of the EcommerceUser to find the cart items for Returns Task<IEnumerable<CartItem>> A IEnumerable of all CartItem entities found; A empty IEnumerable if none are found. null if an error occurs. RemoveUserCartItems(Guid) Removes all CartItem entities from the database for a EcommerceUser. Task<bool> RemoveUserCartItems(Guid userId) Parameters userId Guid The unique identifier of the EcommerceUser to remove all cart items for Returns Task<bool> true if the DELETE is successful; false if the DELETE fails or no CartItem entities are not found."
  },
  "api/Ecommerce.Persistence.Contracts.ICategoryAsyncRepository.html": {
    "href": "api/Ecommerce.Persistence.Contracts.ICategoryAsyncRepository.html",
    "title": "Interface ICategoryAsyncRepository",
    "keywords": "Interface ICategoryAsyncRepository Namespace Ecommerce.Persistence.Contracts Assembly Ecommerce.Persistence.dll Extends the IAsyncRepository<T> interface with an additional method for Category entities public interface ICategoryAsyncRepository : IAsyncRepository<Category> Inherited Members IAsyncRepository<Category>.GetByIdAsync(int) IAsyncRepository<Category>.AddAsync(Category) IAsyncRepository<Category>.UpdateAsync(Category) IAsyncRepository<Category>.DeleteAsync(Category) Methods IsNameUnique(string) Checks the table to see if the Name of a Category already exists Task<bool> IsNameUnique(string name) Parameters name string The name to check for Returns Task<bool> false if found; true if not found ListAllAsync() Retrieves all Category rows from the database. Task<IEnumerable<Category>> ListAllAsync() Returns Task<IEnumerable<Category>> A IEnumerable of all Category entities found; A empty IEnumerable if none are found."
  },
  "api/Ecommerce.Persistence.Contracts.IOrderAsyncRepository.html": {
    "href": "api/Ecommerce.Persistence.Contracts.IOrderAsyncRepository.html",
    "title": "Interface IOrderAsyncRepository",
    "keywords": "Interface IOrderAsyncRepository Namespace Ecommerce.Persistence.Contracts Assembly Ecommerce.Persistence.dll Extends the IAsyncRepository<T> interface with an additional method for Order entities public interface IOrderAsyncRepository : IAsyncRepository<Order> Inherited Members IAsyncRepository<Order>.GetByIdAsync(int) IAsyncRepository<Order>.AddAsync(Order) IAsyncRepository<Order>.UpdateAsync(Order) IAsyncRepository<Order>.DeleteAsync(Order) Methods ListAllAsync(Guid) Retrieves all Order entities from the database with the specified EcommerceUser ID. Task<IEnumerable<Order>?> ListAllAsync(Guid userId) Parameters userId Guid The ID of the EcommerceUser to find all corresponding Order entities Returns Task<IEnumerable<Order>> A IEnumerable of all Order entities found; A empty IEnumerable if none are found. null if an error occurs."
  },
  "api/Ecommerce.Persistence.Contracts.IOrderItemAsyncRepository.html": {
    "href": "api/Ecommerce.Persistence.Contracts.IOrderItemAsyncRepository.html",
    "title": "Interface IOrderItemAsyncRepository",
    "keywords": "Interface IOrderItemAsyncRepository Namespace Ecommerce.Persistence.Contracts Assembly Ecommerce.Persistence.dll Extends the IAsyncRepository<T> interface with an additional method for OrderItem entities public interface IOrderItemAsyncRepository : IAsyncRepository<OrderItem> Inherited Members IAsyncRepository<OrderItem>.GetByIdAsync(int) IAsyncRepository<OrderItem>.AddAsync(OrderItem) IAsyncRepository<OrderItem>.UpdateAsync(OrderItem) IAsyncRepository<OrderItem>.DeleteAsync(OrderItem) Methods ListAllAsync(int) Retrieves all OrderItem entities from the database with the specified Order ID. Task<IEnumerable<OrderItem>> ListAllAsync(int orderId) Parameters orderId int The ID of the Order to find all corresponding OrderItem entities Returns Task<IEnumerable<OrderItem>> A IEnumerable of all OrderItem entities found; A empty IEnumerable if none are found."
  },
  "api/Ecommerce.Persistence.Contracts.IOrderKeyRepository.html": {
    "href": "api/Ecommerce.Persistence.Contracts.IOrderKeyRepository.html",
    "title": "Interface IOrderKeyRepository",
    "keywords": "Interface IOrderKeyRepository Namespace Ecommerce.Persistence.Contracts Assembly Ecommerce.Persistence.dll Represents a repository for the OrderKey entity. public interface IOrderKeyRepository Methods AddAsync(OrderKey) Adds a OrderKey to the table. Task<int> AddAsync(OrderKey entity) Parameters entity OrderKey The OrderKey to add Returns Task<int> The ID of the newly added OrderKey if successful; -1 if the INSERT operation fails. DeleteAsync(OrderKey) Deletes a row in the database based on the provided OrderKey. Task<bool> DeleteAsync(OrderKey entity) Parameters entity OrderKey The OrderKey to delete. Returns Task<bool> true if the DELETE is successful; false if the DELETE fails or the OrderKey is not found. GetByOrderIdAsync(int) Retrieves a OrderKey from the database with the specified Order ID. Task<OrderKey?> GetByOrderIdAsync(int orderId) Parameters orderId int The unique identifier of the Order Returns Task<OrderKey> The OrderKey if found; null if no OrderKey with the specified Order ID is found. GetByReturnKeyAsync(string) Retrieves a OrderKey from the database with the specified token. Task<OrderKey?> GetByReturnKeyAsync(string token) Parameters token string The token generated to map back to the order id Returns Task<OrderKey> The OrderKey if found; null if no OrderKey with the specified token is found."
  },
  "api/Ecommerce.Persistence.Contracts.IProductAsyncRepository.html": {
    "href": "api/Ecommerce.Persistence.Contracts.IProductAsyncRepository.html",
    "title": "Interface IProductAsyncRepository",
    "keywords": "Interface IProductAsyncRepository Namespace Ecommerce.Persistence.Contracts Assembly Ecommerce.Persistence.dll Extends the IAsyncRepository<T> interface with an additional method for Product entities public interface IProductAsyncRepository : IAsyncRepository<Product> Inherited Members IAsyncRepository<Product>.GetByIdAsync(int) IAsyncRepository<Product>.AddAsync(Product) IAsyncRepository<Product>.UpdateAsync(Product) IAsyncRepository<Product>.DeleteAsync(Product) Methods IsNameUnique(string) Checks the table to see if the Name of a Product already exists Task<bool> IsNameUnique(string name) Parameters name string The name to check for Returns Task<bool> false if found; true if not found ListAllAsync(int) Retrieves all Product entities from the database with the specified Category ID. Task<IEnumerable<Product>> ListAllAsync(int categoryId) Parameters categoryId int The ID of the Category to find all corresponding Product entities Returns Task<IEnumerable<Product>> A IEnumerable of all Product entities found; A empty IEnumerable if none are found."
  },
  "api/Ecommerce.Persistence.Contracts.IReviewAsyncRepository.html": {
    "href": "api/Ecommerce.Persistence.Contracts.IReviewAsyncRepository.html",
    "title": "Interface IReviewAsyncRepository",
    "keywords": "Interface IReviewAsyncRepository Namespace Ecommerce.Persistence.Contracts Assembly Ecommerce.Persistence.dll Extends the IAsyncRepository<T> interface with an additional method for Review entities public interface IReviewAsyncRepository : IAsyncRepository<Review> Inherited Members IAsyncRepository<Review>.GetByIdAsync(int) IAsyncRepository<Review>.AddAsync(Review) IAsyncRepository<Review>.UpdateAsync(Review) IAsyncRepository<Review>.DeleteAsync(Review) Methods GetAverageRatingForProduct(int) Calculates the average value of all star ratings for a Product Task<decimal> GetAverageRatingForProduct(int productId) Parameters productId int The unique identifier of the Product Returns Task<decimal> Returns the average of all ratings for a product; 0 is none exist for the product GetUserReviewForProduct(string, int) Retrieves a Review from the database with the specified UserId and ProductId Task<Review?> GetUserReviewForProduct(string userName, int productId) Parameters userName string The UserName of the EcommerceUser productId int The unique identifier of the Product Returns Task<Review> The Review if found; A new Review with an ID of -1 if no Review with the specified UserId and ProductId is found. null if an error occurs. ListAllAsync(int) Retrieves all Review entities from the database with the specified Product ID. Task<IEnumerable<Review>?> ListAllAsync(int productId) Parameters productId int The ID of the Product to find all corresponding Review entities Returns Task<IEnumerable<Review>> A IEnumerable of all Review entities found; A empty IEnumerable if none are found. null if an error occurs."
  },
  "api/Ecommerce.Persistence.Contracts.IStorageService.html": {
    "href": "api/Ecommerce.Persistence.Contracts.IStorageService.html",
    "title": "Interface IStorageService",
    "keywords": "Interface IStorageService Namespace Ecommerce.Persistence.Contracts Assembly Ecommerce.Persistence.dll public interface IStorageService Methods DeleteFileAsync(string, string) Task<bool> DeleteFileAsync(string remoteStoragePath, string fileName) Parameters remoteStoragePath string fileName string Returns Task<bool> UploadFileAsync(string, string, Stream) Task<bool> UploadFileAsync(string remoteStoragePath, string fileName, Stream file) Parameters remoteStoragePath string fileName string file Stream Returns Task<bool>"
  },
  "api/Ecommerce.Persistence.Contracts.html": {
    "href": "api/Ecommerce.Persistence.Contracts.html",
    "title": "Namespace Ecommerce.Persistence.Contracts",
    "keywords": "Namespace Ecommerce.Persistence.Contracts Interfaces IAsyncRepository<T> Represents a CRUD repository for entities of type T. ICartItemRepository Extends the IAsyncRepository<T> interface with an additional method for CartItem entities ICategoryAsyncRepository Extends the IAsyncRepository<T> interface with an additional method for Category entities IOrderAsyncRepository Extends the IAsyncRepository<T> interface with an additional method for Order entities IOrderItemAsyncRepository Extends the IAsyncRepository<T> interface with an additional method for OrderItem entities IOrderKeyRepository Represents a repository for the OrderKey entity. IProductAsyncRepository Extends the IAsyncRepository<T> interface with an additional method for Product entities IReviewAsyncRepository Extends the IAsyncRepository<T> interface with an additional method for Review entities IStorageService"
  },
  "api/Ecommerce.Persistence.DatabaseInitializer.html": {
    "href": "api/Ecommerce.Persistence.DatabaseInitializer.html",
    "title": "Class DatabaseInitializer",
    "keywords": "Class DatabaseInitializer Namespace Ecommerce.Persistence Assembly Ecommerce.Persistence.dll public static class DatabaseInitializer Inheritance object DatabaseInitializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MigrateDatabase(EcommercePersistenceDbContext) public static void MigrateDatabase(EcommercePersistenceDbContext dbContext) Parameters dbContext EcommercePersistenceDbContext PostMigrationUpdates(EcommercePersistenceDbContext, RoleManager<IdentityRole<Guid>>) public static void PostMigrationUpdates(EcommercePersistenceDbContext dbContext, RoleManager<IdentityRole<Guid>> roleManager) Parameters dbContext EcommercePersistenceDbContext roleManager RoleManager<IdentityRole<Guid>>"
  },
  "api/Ecommerce.Persistence.EcommercePersistenceDbContext.html": {
    "href": "api/Ecommerce.Persistence.EcommercePersistenceDbContext.html",
    "title": "Class EcommercePersistenceDbContext",
    "keywords": "Class EcommercePersistenceDbContext Namespace Ecommerce.Persistence Assembly Ecommerce.Persistence.dll public class EcommercePersistenceDbContext : IdentityDbContext<EcommerceUser, IdentityRole<Guid>, Guid>, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext IdentityUserContext<EcommerceUser, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>> IdentityDbContext<EcommerceUser, IdentityRole<Guid>, Guid, IdentityUserClaim<Guid>, IdentityUserRole<Guid>, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>> IdentityDbContext<EcommerceUser, IdentityRole<Guid>, Guid> EcommercePersistenceDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members IdentityDbContext<EcommerceUser, IdentityRole<Guid>, Guid, IdentityUserClaim<Guid>, IdentityUserRole<Guid>, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>>.OnModelCreating(ModelBuilder) IdentityDbContext<EcommerceUser, IdentityRole<Guid>, Guid, IdentityUserClaim<Guid>, IdentityUserRole<Guid>, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>>.UserRoles IdentityDbContext<EcommerceUser, IdentityRole<Guid>, Guid, IdentityUserClaim<Guid>, IdentityUserRole<Guid>, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>>.Roles IdentityDbContext<EcommerceUser, IdentityRole<Guid>, Guid, IdentityUserClaim<Guid>, IdentityUserRole<Guid>, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>>.RoleClaims IdentityUserContext<EcommerceUser, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.OnModelCreating(ModelBuilder) IdentityUserContext<EcommerceUser, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.Users IdentityUserContext<EcommerceUser, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.UserClaims IdentityUserContext<EcommerceUser, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.UserLogins IdentityUserContext<EcommerceUser, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.UserTokens IdentityUserContext<EcommerceUser, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.SchemaVersion DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EcommercePersistenceDbContext(DbContextOptions<EcommercePersistenceDbContext>) public EcommercePersistenceDbContext(DbContextOptions<EcommercePersistenceDbContext> options) Parameters options DbContextOptions<EcommercePersistenceDbContext> Properties CartItems public virtual DbSet<CartItem> CartItems { get; init; } Property Value DbSet<CartItem> Categories public virtual DbSet<Category> Categories { get; init; } Property Value DbSet<Category> OrderItems public virtual DbSet<OrderItem> OrderItems { get; init; } Property Value DbSet<OrderItem> OrderKeys public virtual DbSet<OrderKey> OrderKeys { get; init; } Property Value DbSet<OrderKey> Orders public virtual DbSet<Order> Orders { get; init; } Property Value DbSet<Order> Products public virtual DbSet<Product> Products { get; init; } Property Value DbSet<Product> Reviews public virtual DbSet<Review> Reviews { get; init; } Property Value DbSet<Review> Methods OnModelCreating(ModelBuilder) Configures the schema needed for the identity framework. protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder"
  },
  "api/Ecommerce.Persistence.Migrations.InitDatabase.html": {
    "href": "api/Ecommerce.Persistence.Migrations.InitDatabase.html",
    "title": "Class InitDatabase",
    "keywords": "Class InitDatabase Namespace Ecommerce.Persistence.Migrations Assembly Ecommerce.Persistence.dll A base class inherited by each EF Core migration. [DbContext(typeof(EcommercePersistenceDbContext))] [Migration(\"20240421163011_Init Database\")] public class InitDatabase : Migration Inheritance object Migration InitDatabase Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Constructors InitDatabase() public InitDatabase() Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Ecommerce.Persistence.Migrations.html": {
    "href": "api/Ecommerce.Persistence.Migrations.html",
    "title": "Namespace Ecommerce.Persistence.Migrations",
    "keywords": "Namespace Ecommerce.Persistence.Migrations Classes InitDatabase A base class inherited by each EF Core migration."
  },
  "api/Ecommerce.Persistence.PersistenceServiceRegistration.html": {
    "href": "api/Ecommerce.Persistence.PersistenceServiceRegistration.html",
    "title": "Class PersistenceServiceRegistration",
    "keywords": "Class PersistenceServiceRegistration Namespace Ecommerce.Persistence Assembly Ecommerce.Persistence.dll Extension class of IServiceCollection to register services public static class PersistenceServiceRegistration Inheritance object PersistenceServiceRegistration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddPersistenceServices(IServiceCollection, IConfiguration) Extension method to register services for the Persistence project public static void AddPersistenceServices(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection configuration IConfiguration"
  },
  "api/Ecommerce.Persistence.Repositories.CartItemRepository.html": {
    "href": "api/Ecommerce.Persistence.Repositories.CartItemRepository.html",
    "title": "Class CartItemRepository",
    "keywords": "Class CartItemRepository Namespace Ecommerce.Persistence.Repositories Assembly Ecommerce.Persistence.dll Represents a implementation of the ICartItemRepository interface public class CartItemRepository : ICartItemRepository, IAsyncRepository<CartItem> Inheritance object CartItemRepository Implements ICartItemRepository IAsyncRepository<CartItem> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CartItemRepository(ILogger<CartItemRepository>, EcommercePersistenceDbContext) Initializes a new instance of the ProductAsyncRepository class. public CartItemRepository(ILogger<CartItemRepository> logger, EcommercePersistenceDbContext dbContext) Parameters logger ILogger<CartItemRepository> The ILogger instance used for logging. dbContext EcommercePersistenceDbContext The EcommercePersistenceDbContext instance for database access Methods AddAsync(CartItem) Adds a CartItem to the table. public Task<int> AddAsync(CartItem entity) Parameters entity CartItem The CartItem to add Returns Task<int> The ID of the newly added CartItem if successful; -1 if the INSERT operation fails. CartItemExistsForUser(Guid, int) Checks to see if the user already has a CartItem for the Product public Task<bool> CartItemExistsForUser(Guid userId, int productId) Parameters userId Guid The unique identifier of the EcommerceUser productId int The unique identifier of the Product Returns Task<bool> true if the CartItem exists; false no CartItem is found. DeleteAsync(CartItem) Deletes a row in the database based on the provided CartItem. public Task<bool> DeleteAsync(CartItem entity) Parameters entity CartItem The CartItem to delete. Returns Task<bool> true if the DELETE is successful; false if the DELETE fails or the CartItem is not found. GetByIdAsync(int) Retrieves a CartItem from the database with the specified ID. public Task<CartItem?> GetByIdAsync(int id) Parameters id int The unique identifier of the CartItem Returns Task<CartItem> The CartItem if found; null if no CartItem with the specified ID is found. ListAllAsync(Guid) Retrieves all CartItem rows from the database for a EcommerceUser. public Task<IEnumerable<CartItem>?> ListAllAsync(Guid userId) Parameters userId Guid The unique identifier of the EcommerceUser to find the cart items for Returns Task<IEnumerable<CartItem>> A IEnumerable of all CartItem entities found; A empty IEnumerable if none are found. null if an error occurs. RemoveUserCartItems(Guid) Removes all CartItem entities from the database for a EcommerceUser. public Task<bool> RemoveUserCartItems(Guid userId) Parameters userId Guid The unique identifier of the EcommerceUser to remove all cart items for Returns Task<bool> true if the DELETE is successful; false if the DELETE fails or no CartItem entities are not found. UpdateAsync(CartItem) Updates a row in the database based on the provided CartItem. public Task<bool> UpdateAsync(CartItem entity) Parameters entity CartItem The CartItem with updated data. Returns Task<bool> true if the UPDATE is successful; false if the UPDATE fails or the entity is not found."
  },
  "api/Ecommerce.Persistence.Repositories.CategoryAsyncRepository.html": {
    "href": "api/Ecommerce.Persistence.Repositories.CategoryAsyncRepository.html",
    "title": "Class CategoryAsyncRepository",
    "keywords": "Class CategoryAsyncRepository Namespace Ecommerce.Persistence.Repositories Assembly Ecommerce.Persistence.dll Represents a implementation of the ICategoryAsyncRepository interface public class CategoryAsyncRepository : ICategoryAsyncRepository, IAsyncRepository<Category> Inheritance object CategoryAsyncRepository Implements ICategoryAsyncRepository IAsyncRepository<Category> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CategoryAsyncRepository(ILogger<CategoryAsyncRepository>, EcommercePersistenceDbContext) Initializes a new instance of the CategoryAsyncRepository class. public CategoryAsyncRepository(ILogger<CategoryAsyncRepository> logger, EcommercePersistenceDbContext dbContext) Parameters logger ILogger<CategoryAsyncRepository> The ILogger instance used for logging. dbContext EcommercePersistenceDbContext The EcommercePersistenceDbContext instance for database access Methods AddAsync(Category) Adds a Category to the table. public Task<int> AddAsync(Category entity) Parameters entity Category The Category to add Returns Task<int> The ID of the newly added Category if successful; -1 if the INSERT operation fails. DeleteAsync(Category) Deletes a row in the database based on the provided Category. public Task<bool> DeleteAsync(Category entity) Parameters entity Category The Category to delete. Returns Task<bool> true if the DELETE is successful; false if the DELETE fails or the Category is not found. GetByIdAsync(int) Retrieves a Category from the database with the specified ID. public Task<Category?> GetByIdAsync(int id) Parameters id int The unique identifier of the Category Returns Task<Category> The Category if found; null if no Category with the specified ID is found. IsNameUnique(string) Checks the table to see if the Name of a Category already exists public Task<bool> IsNameUnique(string name) Parameters name string The name to check for Returns Task<bool> false if found; true if not found ListAllAsync() Retrieves all Category rows from the database. public Task<IEnumerable<Category>> ListAllAsync() Returns Task<IEnumerable<Category>> A IEnumerable of all Category entities found; A empty IEnumerable if none are found. UpdateAsync(Category) Updates a row in the database based on the provided Category. public Task<bool> UpdateAsync(Category entity) Parameters entity Category The Category with updated data. Returns Task<bool> true if the UPDATE is successful; false if the UPDATE fails or the entity is not found."
  },
  "api/Ecommerce.Persistence.Repositories.OrderAsyncRepository.html": {
    "href": "api/Ecommerce.Persistence.Repositories.OrderAsyncRepository.html",
    "title": "Class OrderAsyncRepository",
    "keywords": "Class OrderAsyncRepository Namespace Ecommerce.Persistence.Repositories Assembly Ecommerce.Persistence.dll Represents a implementation of the IOrderAsyncRepository interface public class OrderAsyncRepository : IOrderAsyncRepository, IAsyncRepository<Order> Inheritance object OrderAsyncRepository Implements IOrderAsyncRepository IAsyncRepository<Order> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrderAsyncRepository(ILogger<OrderAsyncRepository>, EcommercePersistenceDbContext) Initializes a new instance of the OrderAsyncRepository class. public OrderAsyncRepository(ILogger<OrderAsyncRepository> logger, EcommercePersistenceDbContext dbContext) Parameters logger ILogger<OrderAsyncRepository> The ILogger instance used for logging. dbContext EcommercePersistenceDbContext The EcommercePersistenceDbContext instance for database access Methods AddAsync(Order) Adds a Order to the table. public Task<int> AddAsync(Order entity) Parameters entity Order The Order to add Returns Task<int> The ID of the newly added Order if successful; -1 if the INSERT operation fails. DeleteAsync(Order) Deletes a row in the database based on the provided Order. public Task<bool> DeleteAsync(Order entity) Parameters entity Order The Order to delete. Returns Task<bool> true if the DELETE is successful; false if the DELETE fails or the Order is not found. GetByIdAsync(int) Retrieves a Order from the database with the specified ID. public Task<Order?> GetByIdAsync(int id) Parameters id int The unique identifier of the Order Returns Task<Order> The Category if found; null if no Order with the specified ID is found. ListAllAsync(Guid) Retrieves all Order entities from the database with the specified EcommerceUser ID. public Task<IEnumerable<Order>?> ListAllAsync(Guid userId) Parameters userId Guid The ID of the EcommerceUser to find all corresponding Order entities Returns Task<IEnumerable<Order>> A IEnumerable of all Order entities found; A empty IEnumerable if none are found. null if an error occurs. UpdateAsync(Order) Updates a row in the database based on the provided Order. public Task<bool> UpdateAsync(Order entity) Parameters entity Order The Order with updated data. Returns Task<bool> true if the UPDATE is successful; false if the UPDATE fails or the entity is not found."
  },
  "api/Ecommerce.Persistence.Repositories.OrderItemAsyncRepository.html": {
    "href": "api/Ecommerce.Persistence.Repositories.OrderItemAsyncRepository.html",
    "title": "Class OrderItemAsyncRepository",
    "keywords": "Class OrderItemAsyncRepository Namespace Ecommerce.Persistence.Repositories Assembly Ecommerce.Persistence.dll Represents a implementation of the IOrderItemAsyncRepository interface public class OrderItemAsyncRepository : IOrderItemAsyncRepository, IAsyncRepository<OrderItem> Inheritance object OrderItemAsyncRepository Implements IOrderItemAsyncRepository IAsyncRepository<OrderItem> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrderItemAsyncRepository(ILogger<OrderItemAsyncRepository>, EcommercePersistenceDbContext) Initializes a new instance of the CategoryAsyncRepository class. public OrderItemAsyncRepository(ILogger<OrderItemAsyncRepository> logger, EcommercePersistenceDbContext dbContext) Parameters logger ILogger<OrderItemAsyncRepository> The ILogger instance used for logging. dbContext EcommercePersistenceDbContext The EcommercePersistenceDbContext instance for database access Methods AddAsync(OrderItem) Adds a OrderItem to the table. public Task<int> AddAsync(OrderItem entity) Parameters entity OrderItem The OrderItem to add Returns Task<int> The ID of the newly added OrderItem if successful; -1 if the INSERT operation fails. DeleteAsync(OrderItem) Deletes a row in the database based on the provided OrderItem. public Task<bool> DeleteAsync(OrderItem entity) Parameters entity OrderItem The OrderItem to delete. Returns Task<bool> true if the DELETE is successful; false if the DELETE fails or the OrderItem is not found. GetByIdAsync(int) Retrieves a OrderItem from the database with the specified ID. public Task<OrderItem?> GetByIdAsync(int id) Parameters id int The unique identifier of the OrderItem Returns Task<OrderItem> The OrderItem if found; null if no OrderItem with the specified ID is found. ListAllAsync(int) Retrieves all OrderItem entities from the database with the specified Order ID. public Task<IEnumerable<OrderItem>> ListAllAsync(int orderId) Parameters orderId int The ID of the Order to find all corresponding OrderItem entities Returns Task<IEnumerable<OrderItem>> A IEnumerable of all OrderItem entities found; A empty IEnumerable if none are found. UpdateAsync(OrderItem) Updates a row in the database based on the provided OrderItem. public Task<bool> UpdateAsync(OrderItem entity) Parameters entity OrderItem The OrderItem with updated data. Returns Task<bool> true if the UPDATE is successful; false if the UPDATE fails or the entity is not found."
  },
  "api/Ecommerce.Persistence.Repositories.OrderKeyRepository.html": {
    "href": "api/Ecommerce.Persistence.Repositories.OrderKeyRepository.html",
    "title": "Class OrderKeyRepository",
    "keywords": "Class OrderKeyRepository Namespace Ecommerce.Persistence.Repositories Assembly Ecommerce.Persistence.dll Represents a implementation of the IOrderKeyRepository interface public class OrderKeyRepository : IOrderKeyRepository Inheritance object OrderKeyRepository Implements IOrderKeyRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrderKeyRepository(ILogger<OrderKeyRepository>, EcommercePersistenceDbContext) Initializes a new instance of the OrderKeyRepository class. public OrderKeyRepository(ILogger<OrderKeyRepository> logger, EcommercePersistenceDbContext dbContext) Parameters logger ILogger<OrderKeyRepository> The ILogger instance used for logging. dbContext EcommercePersistenceDbContext The EcommercePersistenceDbContext instance for database access Methods AddAsync(OrderKey) Adds a OrderKey to the table. public Task<int> AddAsync(OrderKey entity) Parameters entity OrderKey The OrderKey to add Returns Task<int> The ID of the newly added OrderKey if successful; -1 if the INSERT operation fails. DeleteAsync(OrderKey) Deletes a row in the database based on the provided OrderKey. public Task<bool> DeleteAsync(OrderKey entity) Parameters entity OrderKey The OrderKey to delete. Returns Task<bool> true if the DELETE is successful; false if the DELETE fails or the OrderKey is not found. GetByOrderIdAsync(int) Retrieves a OrderKey from the database with the specified Order ID. public Task<OrderKey?> GetByOrderIdAsync(int orderId) Parameters orderId int The unique identifier of the Order Returns Task<OrderKey> The OrderKey if found; null if no OrderKey with the specified Order ID is found. GetByReturnKeyAsync(string) Retrieves a OrderKey from the database with the specified token. public Task<OrderKey?> GetByReturnKeyAsync(string token) Parameters token string The token generated to map back to the order id Returns Task<OrderKey> The OrderKey if found; null if no OrderKey with the specified token is found."
  },
  "api/Ecommerce.Persistence.Repositories.ProductAsyncRepository.html": {
    "href": "api/Ecommerce.Persistence.Repositories.ProductAsyncRepository.html",
    "title": "Class ProductAsyncRepository",
    "keywords": "Class ProductAsyncRepository Namespace Ecommerce.Persistence.Repositories Assembly Ecommerce.Persistence.dll Represents a implementation of the IProductAsyncRepository interface public class ProductAsyncRepository : IProductAsyncRepository, IAsyncRepository<Product> Inheritance object ProductAsyncRepository Implements IProductAsyncRepository IAsyncRepository<Product> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProductAsyncRepository(ILogger<ProductAsyncRepository>, EcommercePersistenceDbContext) Initializes a new instance of the ProductAsyncRepository class. public ProductAsyncRepository(ILogger<ProductAsyncRepository> logger, EcommercePersistenceDbContext dbContext) Parameters logger ILogger<ProductAsyncRepository> The ILogger instance used for logging. dbContext EcommercePersistenceDbContext The EcommercePersistenceDbContext instance for database access Methods AddAsync(Product) Adds a Product to the table. public Task<int> AddAsync(Product entity) Parameters entity Product The Product to add Returns Task<int> The ID of the newly added Product if successful; -1 if the INSERT operation fails. DeleteAsync(Product) Deletes a row in the database based on the provided Product. public Task<bool> DeleteAsync(Product entity) Parameters entity Product The Product to delete. Returns Task<bool> true if the DELETE is successful; false if the DELETE fails or the Product is not found. GetByIdAsync(int) Retrieves a Product from the database with the specified ID. public Task<Product?> GetByIdAsync(int id) Parameters id int The unique identifier of the Product Returns Task<Product> The Product if found; null if no Product with the specified ID is found. IsNameUnique(string) Checks the table to see if the Name of a Product already exists public Task<bool> IsNameUnique(string name) Parameters name string The name to check for Returns Task<bool> false if found; true if not found ListAllAsync(int) Retrieves all Product entities from the database with the specified Category ID. public Task<IEnumerable<Product>> ListAllAsync(int categoryId) Parameters categoryId int The ID of the Category to find all corresponding Product entities Returns Task<IEnumerable<Product>> A IEnumerable of all Product entities found; A empty IEnumerable if none are found. UpdateAsync(Product) Updates a row in the database based on the provided Product. public Task<bool> UpdateAsync(Product entity) Parameters entity Product The Product with updated data. Returns Task<bool> true if the UPDATE is successful; false if the UPDATE fails or the entity is not found."
  },
  "api/Ecommerce.Persistence.Repositories.ReviewAsyncRepository.html": {
    "href": "api/Ecommerce.Persistence.Repositories.ReviewAsyncRepository.html",
    "title": "Class ReviewAsyncRepository",
    "keywords": "Class ReviewAsyncRepository Namespace Ecommerce.Persistence.Repositories Assembly Ecommerce.Persistence.dll Represents a implementation of the IReviewAsyncRepository interface public class ReviewAsyncRepository : IReviewAsyncRepository, IAsyncRepository<Review> Inheritance object ReviewAsyncRepository Implements IReviewAsyncRepository IAsyncRepository<Review> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ReviewAsyncRepository(ILogger<ReviewAsyncRepository>, EcommercePersistenceDbContext) Initializes a new instance of the ReviewAsyncRepository class. public ReviewAsyncRepository(ILogger<ReviewAsyncRepository> logger, EcommercePersistenceDbContext dbContext) Parameters logger ILogger<ReviewAsyncRepository> The ILogger instance used for logging. dbContext EcommercePersistenceDbContext The EcommercePersistenceDbContext instance for database access Methods AddAsync(Review) Adds a Review to the table. public Task<int> AddAsync(Review entity) Parameters entity Review The Review to add Returns Task<int> The ID of the newly added Review if successful; -1 if the INSERT operation fails. DeleteAsync(Review) Deletes a row in the database based on the provided Review. public Task<bool> DeleteAsync(Review entity) Parameters entity Review The Review to delete. Returns Task<bool> true if the DELETE is successful; false if the DELETE fails or the Review is not found. GetAverageRatingForProduct(int) Calculates the average value of all star ratings for a Product public Task<decimal> GetAverageRatingForProduct(int productId) Parameters productId int The unique identifier of the Product Returns Task<decimal> Returns the average of all ratings for a product; 0 is none exist for the product GetByIdAsync(int) Retrieves a Review from the database with the specified ID. public Task<Review?> GetByIdAsync(int id) Parameters id int The unique identifier of the Review Returns Task<Review> The Review if found; null if no Review with the specified ID is found. GetUserReviewForProduct(string, int) Retrieves a Review from the database with the specified UserId and ProductId public Task<Review?> GetUserReviewForProduct(string userName, int productId) Parameters userName string The UserName of the EcommerceUser productId int The unique identifier of the Product Returns Task<Review> The Review if found; A new Review with an ID of -1 if no Review with the specified UserId and ProductId is found. null if an error occurs. ListAllAsync(int) Retrieves all Review entities from the database with the specified Product ID. public Task<IEnumerable<Review>?> ListAllAsync(int productId) Parameters productId int The ID of the Product to find all corresponding Review entities Returns Task<IEnumerable<Review>> A IEnumerable of all Review entities found; A empty IEnumerable if none are found. null if an error occurs. UpdateAsync(Review) Updates a row in the database based on the provided Review. public Task<bool> UpdateAsync(Review entity) Parameters entity Review The Review with updated data. Returns Task<bool> true if the UPDATE is successful; false if the UPDATE fails or the entity is not found."
  },
  "api/Ecommerce.Persistence.Repositories.html": {
    "href": "api/Ecommerce.Persistence.Repositories.html",
    "title": "Namespace Ecommerce.Persistence.Repositories",
    "keywords": "Namespace Ecommerce.Persistence.Repositories Classes CartItemRepository Represents a implementation of the ICartItemRepository interface CategoryAsyncRepository Represents a implementation of the ICategoryAsyncRepository interface OrderAsyncRepository Represents a implementation of the IOrderAsyncRepository interface OrderItemAsyncRepository Represents a implementation of the IOrderItemAsyncRepository interface OrderKeyRepository Represents a implementation of the IOrderKeyRepository interface ProductAsyncRepository Represents a implementation of the IProductAsyncRepository interface ReviewAsyncRepository Represents a implementation of the IReviewAsyncRepository interface"
  },
  "api/Ecommerce.Persistence.Services.ProductImageStorageService.html": {
    "href": "api/Ecommerce.Persistence.Services.ProductImageStorageService.html",
    "title": "Class ProductImageStorageService",
    "keywords": "Class ProductImageStorageService Namespace Ecommerce.Persistence.Services Assembly Ecommerce.Persistence.dll public class ProductImageStorageService : IStorageService Inheritance object ProductImageStorageService Implements IStorageService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProductImageStorageService(ILogger<ProductImageStorageService>, IConfiguration) public ProductImageStorageService(ILogger<ProductImageStorageService> logger, IConfiguration configuration) Parameters logger ILogger<ProductImageStorageService> configuration IConfiguration Methods DeleteFileAsync(string, string) public Task<bool> DeleteFileAsync(string remoteStoragePath, string fileName) Parameters remoteStoragePath string fileName string Returns Task<bool> UploadFileAsync(string, string, Stream) public Task<bool> UploadFileAsync(string remoteStoragePath, string fileName, Stream file) Parameters remoteStoragePath string fileName string file Stream Returns Task<bool>"
  },
  "api/Ecommerce.Persistence.Services.html": {
    "href": "api/Ecommerce.Persistence.Services.html",
    "title": "Namespace Ecommerce.Persistence.Services",
    "keywords": "Namespace Ecommerce.Persistence.Services Classes ProductImageStorageService"
  },
  "api/Ecommerce.Persistence.html": {
    "href": "api/Ecommerce.Persistence.html",
    "title": "Namespace Ecommerce.Persistence",
    "keywords": "Namespace Ecommerce.Persistence Classes DatabaseInitializer EcommercePersistenceDbContext PersistenceServiceRegistration Extension class of IServiceCollection to register services"
  },
  "api/Ecommerce.Shared.Dtos.CartItemDto.html": {
    "href": "api/Ecommerce.Shared.Dtos.CartItemDto.html",
    "title": "Class CartItemDto",
    "keywords": "Class CartItemDto Namespace Ecommerce.Shared.Dtos Assembly Ecommerce.Shared.dll public class CartItemDto Inheritance object CartItemDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CartItemDto() public CartItemDto() Properties Id public int Id { get; set; } Property Value int ProductId public int ProductId { get; set; } Property Value int Quantity public int Quantity { get; set; } Property Value int UserId public Guid UserId { get; set; } Property Value Guid"
  },
  "api/Ecommerce.Shared.Dtos.CategoryDto.html": {
    "href": "api/Ecommerce.Shared.Dtos.CategoryDto.html",
    "title": "Class CategoryDto",
    "keywords": "Class CategoryDto Namespace Ecommerce.Shared.Dtos Assembly Ecommerce.Shared.dll public class CategoryDto Inheritance object CategoryDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CategoryDto() public CategoryDto() Properties Id public int Id { get; set; } Property Value int Name public string Name { get; set; } Property Value string Summary public string Summary { get; set; } Property Value string"
  },
  "api/Ecommerce.Shared.Dtos.OrderDto.html": {
    "href": "api/Ecommerce.Shared.Dtos.OrderDto.html",
    "title": "Class OrderDto",
    "keywords": "Class OrderDto Namespace Ecommerce.Shared.Dtos Assembly Ecommerce.Shared.dll public class OrderDto Inheritance object OrderDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrderDto() public OrderDto() Properties CreatedDate public DateTime CreatedDate { get; set; } Property Value DateTime Id public int Id { get; set; } Property Value int OrderItems public IEnumerable<OrderItemDto>? OrderItems { get; set; } Property Value IEnumerable<OrderItemDto> PayPalRequestId public Guid PayPalRequestId { get; set; } Property Value Guid Status public OrderStatus Status { get; set; } Property Value OrderStatus Total public double Total { get; set; } Property Value double UserId public Guid UserId { get; set; } Property Value Guid"
  },
  "api/Ecommerce.Shared.Dtos.OrderItemDto.html": {
    "href": "api/Ecommerce.Shared.Dtos.OrderItemDto.html",
    "title": "Class OrderItemDto",
    "keywords": "Class OrderItemDto Namespace Ecommerce.Shared.Dtos Assembly Ecommerce.Shared.dll public class OrderItemDto Inheritance object OrderItemDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrderItemDto() public OrderItemDto() Properties Id public int Id { get; set; } Property Value int OrderId public int OrderId { get; set; } Property Value int Price public double Price { get; set; } Property Value double ProductDescription public string ProductDescription { get; set; } Property Value string ProductName public string ProductName { get; set; } Property Value string ProductSku public string ProductSku { get; set; } Property Value string Quantity public int Quantity { get; set; } Property Value int"
  },
  "api/Ecommerce.Shared.Dtos.ProductDto.html": {
    "href": "api/Ecommerce.Shared.Dtos.ProductDto.html",
    "title": "Class ProductDto",
    "keywords": "Class ProductDto Namespace Ecommerce.Shared.Dtos Assembly Ecommerce.Shared.dll public class ProductDto Inheritance object ProductDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProductDto() public ProductDto() Properties AverageRating public decimal AverageRating { get; set; } Property Value decimal CategoryId public int CategoryId { get; set; } Property Value int CustomerReviews public IEnumerable<ReviewDto> CustomerReviews { get; set; } Property Value IEnumerable<ReviewDto> Description public string Description { get; set; } Property Value string Id public int Id { get; set; } Property Value int ImageUrl public string ImageUrl { get; set; } Property Value string Name public string Name { get; set; } Property Value string Price public double Price { get; set; } Property Value double QuantityAvailable public int QuantityAvailable { get; set; } Property Value int"
  },
  "api/Ecommerce.Shared.Dtos.ReviewDto.html": {
    "href": "api/Ecommerce.Shared.Dtos.ReviewDto.html",
    "title": "Class ReviewDto",
    "keywords": "Class ReviewDto Namespace Ecommerce.Shared.Dtos Assembly Ecommerce.Shared.dll public class ReviewDto Inheritance object ReviewDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ReviewDto() public ReviewDto() Properties Comments public string? Comments { get; set; } Property Value string Id public int Id { get; set; } Property Value int ProductId public int ProductId { get; set; } Property Value int Stars public int Stars { get; set; } Property Value int UserName public string UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Shared.Dtos.html": {
    "href": "api/Ecommerce.Shared.Dtos.html",
    "title": "Namespace Ecommerce.Shared.Dtos",
    "keywords": "Namespace Ecommerce.Shared.Dtos Classes CartItemDto CategoryDto OrderDto OrderItemDto ProductDto ReviewDto"
  },
  "api/Ecommerce.Shared.Enums.OrderStatus.html": {
    "href": "api/Ecommerce.Shared.Enums.OrderStatus.html",
    "title": "Enum OrderStatus",
    "keywords": "Enum OrderStatus Namespace Ecommerce.Shared.Enums Assembly Ecommerce.Shared.dll public enum OrderStatus Fields Cancelled = 3 Completed = 4 Created = 0 Failed = 5 Pending = 1 Processing = 2"
  },
  "api/Ecommerce.Shared.Enums.PaymentSource.html": {
    "href": "api/Ecommerce.Shared.Enums.PaymentSource.html",
    "title": "Enum PaymentSource",
    "keywords": "Enum PaymentSource Namespace Ecommerce.Shared.Enums Assembly Ecommerce.Shared.dll public enum PaymentSource Fields PayPal = 0"
  },
  "api/Ecommerce.Shared.Enums.html": {
    "href": "api/Ecommerce.Shared.Enums.html",
    "title": "Namespace Ecommerce.Shared.Enums",
    "keywords": "Namespace Ecommerce.Shared.Enums Enums OrderStatus PaymentSource"
  },
  "api/Ecommerce.Shared.Exceptions.BadRequestException.html": {
    "href": "api/Ecommerce.Shared.Exceptions.BadRequestException.html",
    "title": "Class BadRequestException",
    "keywords": "Class BadRequestException Namespace Ecommerce.Shared.Exceptions Assembly Ecommerce.Shared.dll public class BadRequestException : ApplicationException, ISerializable Inheritance object Exception ApplicationException BadRequestException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BadRequestException(string) public BadRequestException(string message) Parameters message string"
  },
  "api/Ecommerce.Shared.Exceptions.InvalidPaymentSourceException.html": {
    "href": "api/Ecommerce.Shared.Exceptions.InvalidPaymentSourceException.html",
    "title": "Class InvalidPaymentSourceException",
    "keywords": "Class InvalidPaymentSourceException Namespace Ecommerce.Shared.Exceptions Assembly Ecommerce.Shared.dll public class InvalidPaymentSourceException : ApplicationException, ISerializable Inheritance object Exception ApplicationException InvalidPaymentSourceException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InvalidPaymentSourceException(string) public InvalidPaymentSourceException(string message) Parameters message string"
  },
  "api/Ecommerce.Shared.Exceptions.NotFoundException.html": {
    "href": "api/Ecommerce.Shared.Exceptions.NotFoundException.html",
    "title": "Class NotFoundException",
    "keywords": "Class NotFoundException Namespace Ecommerce.Shared.Exceptions Assembly Ecommerce.Shared.dll public class NotFoundException : ApplicationException, ISerializable Inheritance object Exception ApplicationException NotFoundException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NotFoundException(string, object) public NotFoundException(string name, object key) Parameters name string key object"
  },
  "api/Ecommerce.Shared.Exceptions.html": {
    "href": "api/Ecommerce.Shared.Exceptions.html",
    "title": "Namespace Ecommerce.Shared.Exceptions",
    "keywords": "Namespace Ecommerce.Shared.Exceptions Classes BadRequestException InvalidPaymentSourceException NotFoundException"
  },
  "api/Ecommerce.Shared.Extensions.DateTimeExtensions.html": {
    "href": "api/Ecommerce.Shared.Extensions.DateTimeExtensions.html",
    "title": "Class DateTimeExtensions",
    "keywords": "Class DateTimeExtensions Namespace Ecommerce.Shared.Extensions Assembly Ecommerce.Shared.dll public static class DateTimeExtensions Inheritance object DateTimeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods StartOfNextDay(DateTime, int) public static DateTime StartOfNextDay(this DateTime date, int startHour = 0) Parameters date DateTime startHour int Returns DateTime ToEst(DateTime) public static DateTime ToEst(this DateTime date) Parameters date DateTime Returns DateTime"
  },
  "api/Ecommerce.Shared.Extensions.StringExtensions.html": {
    "href": "api/Ecommerce.Shared.Extensions.StringExtensions.html",
    "title": "Class StringExtensions",
    "keywords": "Class StringExtensions Namespace Ecommerce.Shared.Extensions Assembly Ecommerce.Shared.dll public static class StringExtensions Inheritance object StringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LowerAndUpperFirst(string) public static string LowerAndUpperFirst(this string input) Parameters input string Returns string"
  },
  "api/Ecommerce.Shared.Extensions.html": {
    "href": "api/Ecommerce.Shared.Extensions.html",
    "title": "Namespace Ecommerce.Shared.Extensions",
    "keywords": "Namespace Ecommerce.Shared.Extensions Classes DateTimeExtensions StringExtensions"
  },
  "api/Ecommerce.Shared.Requests.CartItem.CreateCartItemApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.CartItem.CreateCartItemApiRequest.html",
    "title": "Class CreateCartItemApiRequest",
    "keywords": "Class CreateCartItemApiRequest Namespace Ecommerce.Shared.Requests.CartItem Assembly Ecommerce.Shared.dll A Api request to create a new CartItem public class CreateCartItemApiRequest Inheritance object CreateCartItemApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateCartItemApiRequest() public CreateCartItemApiRequest() Properties CartItemToCreate The CartItem to be created public CartItemDto? CartItemToCreate { get; set; } Property Value CartItemDto"
  },
  "api/Ecommerce.Shared.Requests.CartItem.DeleteCartItemApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.CartItem.DeleteCartItemApiRequest.html",
    "title": "Class DeleteCartItemApiRequest",
    "keywords": "Class DeleteCartItemApiRequest Namespace Ecommerce.Shared.Requests.CartItem Assembly Ecommerce.Shared.dll A Api request to delete a CartItem public class DeleteCartItemApiRequest Inheritance object DeleteCartItemApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteCartItemApiRequest() public DeleteCartItemApiRequest() Properties CartItemToDelete The CartItem to delete public CartItemDto? CartItemToDelete { get; set; } Property Value CartItemDto"
  },
  "api/Ecommerce.Shared.Requests.CartItem.DeleteUserCartItemsApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.CartItem.DeleteUserCartItemsApiRequest.html",
    "title": "Class DeleteUserCartItemsApiRequest",
    "keywords": "Class DeleteUserCartItemsApiRequest Namespace Ecommerce.Shared.Requests.CartItem Assembly Ecommerce.Shared.dll A Api request to delete all CartItems for a User public class DeleteUserCartItemsApiRequest Inheritance object DeleteUserCartItemsApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteUserCartItemsApiRequest() public DeleteUserCartItemsApiRequest() Properties UserId The unique identifier of the User to delete all CartItems for public Guid UserId { get; set; } Property Value Guid"
  },
  "api/Ecommerce.Shared.Requests.CartItem.GetUserCartItemsApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.CartItem.GetUserCartItemsApiRequest.html",
    "title": "Class GetUserCartItemsApiRequest",
    "keywords": "Class GetUserCartItemsApiRequest Namespace Ecommerce.Shared.Requests.CartItem Assembly Ecommerce.Shared.dll A Api request to get all CartItems for a User public class GetUserCartItemsApiRequest Inheritance object GetUserCartItemsApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetUserCartItemsApiRequest() public GetUserCartItemsApiRequest() Properties UserId Id of the User to find all CartItems for public Guid UserId { get; set; } Property Value Guid"
  },
  "api/Ecommerce.Shared.Requests.CartItem.UpdateCartItemApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.CartItem.UpdateCartItemApiRequest.html",
    "title": "Class UpdateCartItemApiRequest",
    "keywords": "Class UpdateCartItemApiRequest Namespace Ecommerce.Shared.Requests.CartItem Assembly Ecommerce.Shared.dll A Api request to update a CartItem public class UpdateCartItemApiRequest Inheritance object UpdateCartItemApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateCartItemApiRequest() public UpdateCartItemApiRequest() Properties CartItemToUpdate The CartItem to update with public CartItemDto? CartItemToUpdate { get; set; } Property Value CartItemDto"
  },
  "api/Ecommerce.Shared.Requests.CartItem.html": {
    "href": "api/Ecommerce.Shared.Requests.CartItem.html",
    "title": "Namespace Ecommerce.Shared.Requests.CartItem",
    "keywords": "Namespace Ecommerce.Shared.Requests.CartItem Classes CreateCartItemApiRequest A Api request to create a new CartItem DeleteCartItemApiRequest A Api request to delete a CartItem DeleteUserCartItemsApiRequest A Api request to delete all CartItems for a User GetUserCartItemsApiRequest A Api request to get all CartItems for a User UpdateCartItemApiRequest A Api request to update a CartItem"
  },
  "api/Ecommerce.Shared.Requests.Category.CreateCategoryApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.Category.CreateCategoryApiRequest.html",
    "title": "Class CreateCategoryApiRequest",
    "keywords": "Class CreateCategoryApiRequest Namespace Ecommerce.Shared.Requests.Category Assembly Ecommerce.Shared.dll A Api request to create a new Category public class CreateCategoryApiRequest Inheritance object CreateCategoryApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateCategoryApiRequest() public CreateCategoryApiRequest() Properties CategoryToCreate The Category to be created public CategoryDto? CategoryToCreate { get; set; } Property Value CategoryDto"
  },
  "api/Ecommerce.Shared.Requests.Category.DeleteCategoryApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.Category.DeleteCategoryApiRequest.html",
    "title": "Class DeleteCategoryApiRequest",
    "keywords": "Class DeleteCategoryApiRequest Namespace Ecommerce.Shared.Requests.Category Assembly Ecommerce.Shared.dll A Api request to delete a Category public class DeleteCategoryApiRequest Inheritance object DeleteCategoryApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteCategoryApiRequest() public DeleteCategoryApiRequest() Properties CategoryToDelete The Category to delete public CategoryDto? CategoryToDelete { get; set; } Property Value CategoryDto"
  },
  "api/Ecommerce.Shared.Requests.Category.GetAllCategoriesApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.Category.GetAllCategoriesApiRequest.html",
    "title": "Class GetAllCategoriesApiRequest",
    "keywords": "Class GetAllCategoriesApiRequest Namespace Ecommerce.Shared.Requests.Category Assembly Ecommerce.Shared.dll public class GetAllCategoriesApiRequest Inheritance object GetAllCategoriesApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetAllCategoriesApiRequest() public GetAllCategoriesApiRequest() Properties DummyProperty public bool DummyProperty { get; set; } Property Value bool"
  },
  "api/Ecommerce.Shared.Requests.Category.GetCategoryByIdApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.Category.GetCategoryByIdApiRequest.html",
    "title": "Class GetCategoryByIdApiRequest",
    "keywords": "Class GetCategoryByIdApiRequest Namespace Ecommerce.Shared.Requests.Category Assembly Ecommerce.Shared.dll A Api request to get all Categories public class GetCategoryByIdApiRequest Inheritance object GetCategoryByIdApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetCategoryByIdApiRequest() public GetCategoryByIdApiRequest() Properties DummyProperty public bool DummyProperty { get; set; } Property Value bool"
  },
  "api/Ecommerce.Shared.Requests.Category.UpdateCategoryApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.Category.UpdateCategoryApiRequest.html",
    "title": "Class UpdateCategoryApiRequest",
    "keywords": "Class UpdateCategoryApiRequest Namespace Ecommerce.Shared.Requests.Category Assembly Ecommerce.Shared.dll A Api request to update a Category public class UpdateCategoryApiRequest Inheritance object UpdateCategoryApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateCategoryApiRequest() public UpdateCategoryApiRequest() Properties CategoryToUpdate The Category to update with public CategoryDto? CategoryToUpdate { get; set; } Property Value CategoryDto"
  },
  "api/Ecommerce.Shared.Requests.Category.html": {
    "href": "api/Ecommerce.Shared.Requests.Category.html",
    "title": "Namespace Ecommerce.Shared.Requests.Category",
    "keywords": "Namespace Ecommerce.Shared.Requests.Category Classes CreateCategoryApiRequest A Api request to create a new Category DeleteCategoryApiRequest A Api request to delete a Category GetAllCategoriesApiRequest GetCategoryByIdApiRequest A Api request to get all Categories UpdateCategoryApiRequest A Api request to update a Category"
  },
  "api/Ecommerce.Shared.Requests.Order.CreateOrderApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.Order.CreateOrderApiRequest.html",
    "title": "Class CreateOrderApiRequest",
    "keywords": "Class CreateOrderApiRequest Namespace Ecommerce.Shared.Requests.Order Assembly Ecommerce.Shared.dll A Api request to create a new Order public class CreateOrderApiRequest Inheritance object CreateOrderApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateOrderApiRequest() public CreateOrderApiRequest() Properties CartItems The items in the cart to create the order from public IEnumerable<CartItemDto>? CartItems { get; set; } Property Value IEnumerable<CartItemDto> PaymentSource The method of payment for the order [JsonConverter(typeof(JsonStringEnumConverter))] public PaymentSource PaymentSource { get; set; } Property Value PaymentSource"
  },
  "api/Ecommerce.Shared.Requests.Order.GetAllOrdersByUserIdApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.Order.GetAllOrdersByUserIdApiRequest.html",
    "title": "Class GetAllOrdersByUserIdApiRequest",
    "keywords": "Class GetAllOrdersByUserIdApiRequest Namespace Ecommerce.Shared.Requests.Order Assembly Ecommerce.Shared.dll A Api request to get all Orders for a User public class GetAllOrdersByUserIdApiRequest Inheritance object GetAllOrdersByUserIdApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetAllOrdersByUserIdApiRequest() public GetAllOrdersByUserIdApiRequest() Properties UserId Id of the User to find all Orders for public Guid UserId { get; set; } Property Value Guid"
  },
  "api/Ecommerce.Shared.Requests.Order.GetOrderAfterSuccessfulCheckoutApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.Order.GetOrderAfterSuccessfulCheckoutApiRequest.html",
    "title": "Class GetOrderAfterSuccessfulCheckoutApiRequest",
    "keywords": "Class GetOrderAfterSuccessfulCheckoutApiRequest Namespace Ecommerce.Shared.Requests.Order Assembly Ecommerce.Shared.dll An Api request to get an Order after a successful checkout public class GetOrderAfterSuccessfulCheckoutApiRequest Inheritance object GetOrderAfterSuccessfulCheckoutApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetOrderAfterSuccessfulCheckoutApiRequest() public GetOrderAfterSuccessfulCheckoutApiRequest() Properties Id The unique identifier of the Order to retrieve public int Id { get; set; } Property Value int"
  },
  "api/Ecommerce.Shared.Requests.Order.GetOrderByIdApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.Order.GetOrderByIdApiRequest.html",
    "title": "Class GetOrderByIdApiRequest",
    "keywords": "Class GetOrderByIdApiRequest Namespace Ecommerce.Shared.Requests.Order Assembly Ecommerce.Shared.dll A Api request to get a Order via its Id public class GetOrderByIdApiRequest Inheritance object GetOrderByIdApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetOrderByIdApiRequest() public GetOrderByIdApiRequest() Properties Id The unique identifier of the Order to retrieve public int Id { get; set; } Property Value int"
  },
  "api/Ecommerce.Shared.Requests.Order.UpdateOrderApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.Order.UpdateOrderApiRequest.html",
    "title": "Class UpdateOrderApiRequest",
    "keywords": "Class UpdateOrderApiRequest Namespace Ecommerce.Shared.Requests.Order Assembly Ecommerce.Shared.dll A Api request to update a Order public class UpdateOrderApiRequest Inheritance object UpdateOrderApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateOrderApiRequest() public UpdateOrderApiRequest() Properties OrderToUpdate The Order to update with public OrderDto? OrderToUpdate { get; set; } Property Value OrderDto"
  },
  "api/Ecommerce.Shared.Requests.Order.html": {
    "href": "api/Ecommerce.Shared.Requests.Order.html",
    "title": "Namespace Ecommerce.Shared.Requests.Order",
    "keywords": "Namespace Ecommerce.Shared.Requests.Order Classes CreateOrderApiRequest A Api request to create a new Order GetAllOrdersByUserIdApiRequest A Api request to get all Orders for a User GetOrderAfterSuccessfulCheckoutApiRequest An Api request to get an Order after a successful checkout GetOrderByIdApiRequest A Api request to get a Order via its Id UpdateOrderApiRequest A Api request to update a Order"
  },
  "api/Ecommerce.Shared.Requests.PayPal.CreatePayPalOrderRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.PayPal.CreatePayPalOrderRequest.html",
    "title": "Class CreatePayPalOrderRequest",
    "keywords": "Class CreatePayPalOrderRequest Namespace Ecommerce.Shared.Requests.PayPal Assembly Ecommerce.Shared.dll A request to model the information needed to create a PayPal Order public class CreatePayPalOrderRequest Inheritance object CreatePayPalOrderRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreatePayPalOrderRequest() public CreatePayPalOrderRequest() Properties Order The Ecommerce order to create a PayPal Order for public OrderDto? Order { get; set; } Property Value OrderDto ReturnKey The return key to map the PayPal Order to the Ecommerce Order public string ReturnKey { get; set; } Property Value string"
  },
  "api/Ecommerce.Shared.Requests.PayPal.html": {
    "href": "api/Ecommerce.Shared.Requests.PayPal.html",
    "title": "Namespace Ecommerce.Shared.Requests.PayPal",
    "keywords": "Namespace Ecommerce.Shared.Requests.PayPal Classes CreatePayPalOrderRequest A request to model the information needed to create a PayPal Order"
  },
  "api/Ecommerce.Shared.Requests.Product.CreateProductApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.Product.CreateProductApiRequest.html",
    "title": "Class CreateProductApiRequest",
    "keywords": "Class CreateProductApiRequest Namespace Ecommerce.Shared.Requests.Product Assembly Ecommerce.Shared.dll A Api request to create a new Product public class CreateProductApiRequest Inheritance object CreateProductApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateProductApiRequest() public CreateProductApiRequest() Properties ProductToCreate The Product to be created public ProductDto? ProductToCreate { get; set; } Property Value ProductDto"
  },
  "api/Ecommerce.Shared.Requests.Product.DeleteProductApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.Product.DeleteProductApiRequest.html",
    "title": "Class DeleteProductApiRequest",
    "keywords": "Class DeleteProductApiRequest Namespace Ecommerce.Shared.Requests.Product Assembly Ecommerce.Shared.dll A Api request to delete a Product public class DeleteProductApiRequest Inheritance object DeleteProductApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteProductApiRequest() public DeleteProductApiRequest() Properties ProductToDelete The Product to delete public ProductDto? ProductToDelete { get; set; } Property Value ProductDto"
  },
  "api/Ecommerce.Shared.Requests.Product.GetAllProductsByCategoryIdApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.Product.GetAllProductsByCategoryIdApiRequest.html",
    "title": "Class GetAllProductsByCategoryIdApiRequest",
    "keywords": "Class GetAllProductsByCategoryIdApiRequest Namespace Ecommerce.Shared.Requests.Product Assembly Ecommerce.Shared.dll A Api request to get all Products in a Category public class GetAllProductsByCategoryIdApiRequest Inheritance object GetAllProductsByCategoryIdApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetAllProductsByCategoryIdApiRequest() public GetAllProductsByCategoryIdApiRequest() Properties CategoryId Id of the Category to find all Products for public int CategoryId { get; set; } Property Value int"
  },
  "api/Ecommerce.Shared.Requests.Product.GetProductByIdApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.Product.GetProductByIdApiRequest.html",
    "title": "Class GetProductByIdApiRequest",
    "keywords": "Class GetProductByIdApiRequest Namespace Ecommerce.Shared.Requests.Product Assembly Ecommerce.Shared.dll A Api request to get a Product via its Id public class GetProductByIdApiRequest Inheritance object GetProductByIdApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetProductByIdApiRequest() public GetProductByIdApiRequest() Properties ProductId The unique identifier of the Product to retrieve public int ProductId { get; set; } Property Value int"
  },
  "api/Ecommerce.Shared.Requests.Product.UpdateProductApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.Product.UpdateProductApiRequest.html",
    "title": "Class UpdateProductApiRequest",
    "keywords": "Class UpdateProductApiRequest Namespace Ecommerce.Shared.Requests.Product Assembly Ecommerce.Shared.dll A Api request to update a Product public class UpdateProductApiRequest Inheritance object UpdateProductApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateProductApiRequest() public UpdateProductApiRequest() Properties ProductToUpdate The Product to update with public ProductDto? ProductToUpdate { get; set; } Property Value ProductDto"
  },
  "api/Ecommerce.Shared.Requests.Product.html": {
    "href": "api/Ecommerce.Shared.Requests.Product.html",
    "title": "Namespace Ecommerce.Shared.Requests.Product",
    "keywords": "Namespace Ecommerce.Shared.Requests.Product Classes CreateProductApiRequest A Api request to create a new Product DeleteProductApiRequest A Api request to delete a Product GetAllProductsByCategoryIdApiRequest A Api request to get all Products in a Category GetProductByIdApiRequest A Api request to get a Product via its Id UpdateProductApiRequest A Api request to update a Product"
  },
  "api/Ecommerce.Shared.Requests.Review.CreateReviewApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.Review.CreateReviewApiRequest.html",
    "title": "Class CreateReviewApiRequest",
    "keywords": "Class CreateReviewApiRequest Namespace Ecommerce.Shared.Requests.Review Assembly Ecommerce.Shared.dll A Api request to create a new Review public class CreateReviewApiRequest Inheritance object CreateReviewApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateReviewApiRequest() public CreateReviewApiRequest() Properties ReviewToCreate The Review to create public ReviewDto? ReviewToCreate { get; set; } Property Value ReviewDto"
  },
  "api/Ecommerce.Shared.Requests.Review.DeleteReviewApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.Review.DeleteReviewApiRequest.html",
    "title": "Class DeleteReviewApiRequest",
    "keywords": "Class DeleteReviewApiRequest Namespace Ecommerce.Shared.Requests.Review Assembly Ecommerce.Shared.dll A Api request to delete a Review public class DeleteReviewApiRequest Inheritance object DeleteReviewApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteReviewApiRequest() public DeleteReviewApiRequest() Properties ReviewToDelete The Review to delete public ReviewDto? ReviewToDelete { get; set; } Property Value ReviewDto"
  },
  "api/Ecommerce.Shared.Requests.Review.GetReviewsForProductApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.Review.GetReviewsForProductApiRequest.html",
    "title": "Class GetReviewsForProductApiRequest",
    "keywords": "Class GetReviewsForProductApiRequest Namespace Ecommerce.Shared.Requests.Review Assembly Ecommerce.Shared.dll A Api request to get all reviews for a Product public class GetReviewsForProductApiRequest Inheritance object GetReviewsForProductApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetReviewsForProductApiRequest() public GetReviewsForProductApiRequest() Properties ProductId Id of the Product to find all Reviews for public int ProductId { get; set; } Property Value int"
  },
  "api/Ecommerce.Shared.Requests.Review.GetUserReviewForProductApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.Review.GetUserReviewForProductApiRequest.html",
    "title": "Class GetUserReviewForProductApiRequest",
    "keywords": "Class GetUserReviewForProductApiRequest Namespace Ecommerce.Shared.Requests.Review Assembly Ecommerce.Shared.dll A Api request to get a User's review of a Product public class GetUserReviewForProductApiRequest Inheritance object GetUserReviewForProductApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetUserReviewForProductApiRequest() public GetUserReviewForProductApiRequest() Properties ProductId The unique identifier of the Product the Review is for public int ProductId { get; set; } Property Value int UserName The UserName of the User who made the Review public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Shared.Requests.Review.UpdateReviewApiRequest.html": {
    "href": "api/Ecommerce.Shared.Requests.Review.UpdateReviewApiRequest.html",
    "title": "Class UpdateReviewApiRequest",
    "keywords": "Class UpdateReviewApiRequest Namespace Ecommerce.Shared.Requests.Review Assembly Ecommerce.Shared.dll A Api request to update a Review public class UpdateReviewApiRequest Inheritance object UpdateReviewApiRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateReviewApiRequest() public UpdateReviewApiRequest() Properties ReviewToUpdate The Review to update with public ReviewDto? ReviewToUpdate { get; set; } Property Value ReviewDto"
  },
  "api/Ecommerce.Shared.Requests.Review.html": {
    "href": "api/Ecommerce.Shared.Requests.Review.html",
    "title": "Namespace Ecommerce.Shared.Requests.Review",
    "keywords": "Namespace Ecommerce.Shared.Requests.Review Classes CreateReviewApiRequest A Api request to create a new Review DeleteReviewApiRequest A Api request to delete a Review GetReviewsForProductApiRequest A Api request to get all reviews for a Product GetUserReviewForProductApiRequest A Api request to get a User's review of a Product UpdateReviewApiRequest A Api request to update a Review"
  },
  "api/Ecommerce.Shared.Responses.BaseResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.BaseResponse.html",
    "title": "Class BaseResponse",
    "keywords": "Class BaseResponse Namespace Ecommerce.Shared.Responses Assembly Ecommerce.Shared.dll Abstract class representing the base structure of all response objects public abstract class BaseResponse Inheritance object BaseResponse Derived CreateCartItemResponse DeleteCartItemResponse DeleteUserCartItemsResponse GetUserCartItemsResponse UpdateCartItemResponse CreateCategoryResponse DeleteCategoryResponse GetAllCategoriesResponse GetCategoryByIdResponse UpdateCategoryResponse CreateOrderResponse DeleteOrderResponse GetAllOrdersByUserIdResponse GetOrderAfterSuccessfulCheckoutResponse GetOrderByIdResponse UpdateOrderResponse CreateOrderItemResponse GetAllOrderItemsByOrderIdResponse CreatePayPalOrderResponse CreateProductResponse DeleteProductResponse GetAllProductsByCategoryIdResponse GetProductByIdResponse UpdateProductResponse CreateReviewResponse DeleteReviewResponse GetReviewsForProductResponse GetUserReviewForProductResponse UpdateReviewResponse UpdateEcommerceUserResponse UpdatePasswordResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BaseResponse() protected BaseResponse() Properties Message A optional message to display to the user public string? Message { get; set; } Property Value string Success Indicates whether the request was successful or not public bool Success { get; set; } Property Value bool ValidationErrors A list of errors that occured during validation to present to the user public List<string> ValidationErrors { get; set; } Property Value List<string>"
  },
  "api/Ecommerce.Shared.Responses.CartItem.CreateCartItemResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.CartItem.CreateCartItemResponse.html",
    "title": "Class CreateCartItemResponse",
    "keywords": "Class CreateCartItemResponse Namespace Ecommerce.Shared.Responses.CartItem Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to create a new CartItem public class CreateCartItemResponse : BaseResponse Inheritance object BaseResponse CreateCartItemResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateCartItemResponse() public CreateCartItemResponse() Properties CartItem The newly created CartItem if request was successful public CartItemDto? CartItem { get; set; } Property Value CartItemDto"
  },
  "api/Ecommerce.Shared.Responses.CartItem.DeleteCartItemResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.CartItem.DeleteCartItemResponse.html",
    "title": "Class DeleteCartItemResponse",
    "keywords": "Class DeleteCartItemResponse Namespace Ecommerce.Shared.Responses.CartItem Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to delete a CartItem public class DeleteCartItemResponse : BaseResponse Inheritance object BaseResponse DeleteCartItemResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteCartItemResponse() public DeleteCartItemResponse()"
  },
  "api/Ecommerce.Shared.Responses.CartItem.DeleteUserCartItemsResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.CartItem.DeleteUserCartItemsResponse.html",
    "title": "Class DeleteUserCartItemsResponse",
    "keywords": "Class DeleteUserCartItemsResponse Namespace Ecommerce.Shared.Responses.CartItem Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to delete all CartItems for a user public class DeleteUserCartItemsResponse : BaseResponse Inheritance object BaseResponse DeleteUserCartItemsResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteUserCartItemsResponse() public DeleteUserCartItemsResponse()"
  },
  "api/Ecommerce.Shared.Responses.CartItem.GetUserCartItemsResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.CartItem.GetUserCartItemsResponse.html",
    "title": "Class GetUserCartItemsResponse",
    "keywords": "Class GetUserCartItemsResponse Namespace Ecommerce.Shared.Responses.CartItem Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to get all CartItems for a User public class GetUserCartItemsResponse : BaseResponse Inheritance object BaseResponse GetUserCartItemsResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetUserCartItemsResponse() public GetUserCartItemsResponse() Properties CartItems The collection of CartItems if any exist for the User public IEnumerable<CartItemDto> CartItems { get; set; } Property Value IEnumerable<CartItemDto>"
  },
  "api/Ecommerce.Shared.Responses.CartItem.UpdateCartItemResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.CartItem.UpdateCartItemResponse.html",
    "title": "Class UpdateCartItemResponse",
    "keywords": "Class UpdateCartItemResponse Namespace Ecommerce.Shared.Responses.CartItem Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to update a CartItem public class UpdateCartItemResponse : BaseResponse Inheritance object BaseResponse UpdateCartItemResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateCartItemResponse() public UpdateCartItemResponse()"
  },
  "api/Ecommerce.Shared.Responses.CartItem.html": {
    "href": "api/Ecommerce.Shared.Responses.CartItem.html",
    "title": "Namespace Ecommerce.Shared.Responses.CartItem",
    "keywords": "Namespace Ecommerce.Shared.Responses.CartItem Classes CreateCartItemResponse A implementation of BaseResponse for a request to create a new CartItem DeleteCartItemResponse A implementation of BaseResponse for a request to delete a CartItem DeleteUserCartItemsResponse A implementation of BaseResponse for a request to delete all CartItems for a user GetUserCartItemsResponse A implementation of BaseResponse for a request to get all CartItems for a User UpdateCartItemResponse A implementation of BaseResponse for a request to update a CartItem"
  },
  "api/Ecommerce.Shared.Responses.Category.CreateCategoryResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Category.CreateCategoryResponse.html",
    "title": "Class CreateCategoryResponse",
    "keywords": "Class CreateCategoryResponse Namespace Ecommerce.Shared.Responses.Category Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to create a Category public class CreateCategoryResponse : BaseResponse Inheritance object BaseResponse CreateCategoryResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateCategoryResponse() public CreateCategoryResponse() Properties Category The newly created Category if request was successful public CategoryDto? Category { get; set; } Property Value CategoryDto"
  },
  "api/Ecommerce.Shared.Responses.Category.DeleteCategoryResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Category.DeleteCategoryResponse.html",
    "title": "Class DeleteCategoryResponse",
    "keywords": "Class DeleteCategoryResponse Namespace Ecommerce.Shared.Responses.Category Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to delete a Category public class DeleteCategoryResponse : BaseResponse Inheritance object BaseResponse DeleteCategoryResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteCategoryResponse() public DeleteCategoryResponse()"
  },
  "api/Ecommerce.Shared.Responses.Category.GetAllCategoriesResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Category.GetAllCategoriesResponse.html",
    "title": "Class GetAllCategoriesResponse",
    "keywords": "Class GetAllCategoriesResponse Namespace Ecommerce.Shared.Responses.Category Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to get all Categories public class GetAllCategoriesResponse : BaseResponse Inheritance object BaseResponse GetAllCategoriesResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetAllCategoriesResponse() public GetAllCategoriesResponse() Properties Categories A collection of CategoryDto entities if any exist public IEnumerable<CategoryDto> Categories { get; set; } Property Value IEnumerable<CategoryDto>"
  },
  "api/Ecommerce.Shared.Responses.Category.GetCategoryByIdResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Category.GetCategoryByIdResponse.html",
    "title": "Class GetCategoryByIdResponse",
    "keywords": "Class GetCategoryByIdResponse Namespace Ecommerce.Shared.Responses.Category Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to get a Category by Id public class GetCategoryByIdResponse : BaseResponse Inheritance object BaseResponse GetCategoryByIdResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetCategoryByIdResponse() public GetCategoryByIdResponse() Properties Category The Category with the Id from the GetCategoryByIdApiRequest if it exists public CategoryDto? Category { get; set; } Property Value CategoryDto"
  },
  "api/Ecommerce.Shared.Responses.Category.UpdateCategoryResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Category.UpdateCategoryResponse.html",
    "title": "Class UpdateCategoryResponse",
    "keywords": "Class UpdateCategoryResponse Namespace Ecommerce.Shared.Responses.Category Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to update a Category public class UpdateCategoryResponse : BaseResponse Inheritance object BaseResponse UpdateCategoryResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateCategoryResponse() public UpdateCategoryResponse()"
  },
  "api/Ecommerce.Shared.Responses.Category.html": {
    "href": "api/Ecommerce.Shared.Responses.Category.html",
    "title": "Namespace Ecommerce.Shared.Responses.Category",
    "keywords": "Namespace Ecommerce.Shared.Responses.Category Classes CreateCategoryResponse A implementation of BaseResponse for a request to create a Category DeleteCategoryResponse A implementation of BaseResponse for a request to delete a Category GetAllCategoriesResponse A implementation of BaseResponse for a request to get all Categories GetCategoryByIdResponse A implementation of BaseResponse for a request to get a Category by Id UpdateCategoryResponse A implementation of BaseResponse for a request to update a Category"
  },
  "api/Ecommerce.Shared.Responses.Order.CreateOrderResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Order.CreateOrderResponse.html",
    "title": "Class CreateOrderResponse",
    "keywords": "Class CreateOrderResponse Namespace Ecommerce.Shared.Responses.Order Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to create a Order public class CreateOrderResponse : BaseResponse Inheritance object BaseResponse CreateOrderResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateOrderResponse() public CreateOrderResponse() Properties Order The newly created Order if request was successful public OrderDto? Order { get; set; } Property Value OrderDto RedirectUrl The url to redirect the user to for payment of the order public string? RedirectUrl { get; set; } Property Value string"
  },
  "api/Ecommerce.Shared.Responses.Order.DeleteOrderResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Order.DeleteOrderResponse.html",
    "title": "Class DeleteOrderResponse",
    "keywords": "Class DeleteOrderResponse Namespace Ecommerce.Shared.Responses.Order Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to delete a Order public class DeleteOrderResponse : BaseResponse Inheritance object BaseResponse DeleteOrderResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteOrderResponse() public DeleteOrderResponse()"
  },
  "api/Ecommerce.Shared.Responses.Order.GetAllOrdersByUserIdResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Order.GetAllOrdersByUserIdResponse.html",
    "title": "Class GetAllOrdersByUserIdResponse",
    "keywords": "Class GetAllOrdersByUserIdResponse Namespace Ecommerce.Shared.Responses.Order Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to get all Orders for a User public class GetAllOrdersByUserIdResponse : BaseResponse Inheritance object BaseResponse GetAllOrdersByUserIdResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetAllOrdersByUserIdResponse() public GetAllOrdersByUserIdResponse() Properties Orders A collection of OrderDto entities if any exist public IEnumerable<OrderDto> Orders { get; set; } Property Value IEnumerable<OrderDto>"
  },
  "api/Ecommerce.Shared.Responses.Order.GetOrderAfterSuccessfulCheckoutResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Order.GetOrderAfterSuccessfulCheckoutResponse.html",
    "title": "Class GetOrderAfterSuccessfulCheckoutResponse",
    "keywords": "Class GetOrderAfterSuccessfulCheckoutResponse Namespace Ecommerce.Shared.Responses.Order Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to get a Order after a successful checkout public class GetOrderAfterSuccessfulCheckoutResponse : BaseResponse Inheritance object BaseResponse GetOrderAfterSuccessfulCheckoutResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetOrderAfterSuccessfulCheckoutResponse() public GetOrderAfterSuccessfulCheckoutResponse() Properties Order The Order with the Id from the GetOrderAfterSuccessfulCheckoutApiRequest if it exists public OrderDto? Order { get; set; } Property Value OrderDto"
  },
  "api/Ecommerce.Shared.Responses.Order.GetOrderByIdResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Order.GetOrderByIdResponse.html",
    "title": "Class GetOrderByIdResponse",
    "keywords": "Class GetOrderByIdResponse Namespace Ecommerce.Shared.Responses.Order Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to get a Order by Id public class GetOrderByIdResponse : BaseResponse Inheritance object BaseResponse GetOrderByIdResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetOrderByIdResponse() public GetOrderByIdResponse() Properties Order The Order with the Id from the GetOrderByIdApiRequest if it exists public OrderDto? Order { get; set; } Property Value OrderDto"
  },
  "api/Ecommerce.Shared.Responses.Order.UpdateOrderResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Order.UpdateOrderResponse.html",
    "title": "Class UpdateOrderResponse",
    "keywords": "Class UpdateOrderResponse Namespace Ecommerce.Shared.Responses.Order Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to update a Order public class UpdateOrderResponse : BaseResponse Inheritance object BaseResponse UpdateOrderResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateOrderResponse() public UpdateOrderResponse()"
  },
  "api/Ecommerce.Shared.Responses.Order.html": {
    "href": "api/Ecommerce.Shared.Responses.Order.html",
    "title": "Namespace Ecommerce.Shared.Responses.Order",
    "keywords": "Namespace Ecommerce.Shared.Responses.Order Classes CreateOrderResponse A implementation of BaseResponse for a request to create a Order DeleteOrderResponse A implementation of BaseResponse for a request to delete a Order GetAllOrdersByUserIdResponse A implementation of BaseResponse for a request to get all Orders for a User GetOrderAfterSuccessfulCheckoutResponse A implementation of BaseResponse for a request to get a Order after a successful checkout GetOrderByIdResponse A implementation of BaseResponse for a request to get a Order by Id UpdateOrderResponse A implementation of BaseResponse for a request to update a Order"
  },
  "api/Ecommerce.Shared.Responses.OrderItem.CreateOrderItemResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.OrderItem.CreateOrderItemResponse.html",
    "title": "Class CreateOrderItemResponse",
    "keywords": "Class CreateOrderItemResponse Namespace Ecommerce.Shared.Responses.OrderItem Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to create a OrderItem public class CreateOrderItemResponse : BaseResponse Inheritance object BaseResponse CreateOrderItemResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateOrderItemResponse() public CreateOrderItemResponse() Properties OrderItem The OrderItem created if request was successful public OrderItemDto? OrderItem { get; set; } Property Value OrderItemDto"
  },
  "api/Ecommerce.Shared.Responses.OrderItem.GetAllOrderItemsByOrderIdResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.OrderItem.GetAllOrderItemsByOrderIdResponse.html",
    "title": "Class GetAllOrderItemsByOrderIdResponse",
    "keywords": "Class GetAllOrderItemsByOrderIdResponse Namespace Ecommerce.Shared.Responses.OrderItem Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to get all OrderItems for a Order public class GetAllOrderItemsByOrderIdResponse : BaseResponse Inheritance object BaseResponse GetAllOrderItemsByOrderIdResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetAllOrderItemsByOrderIdResponse() public GetAllOrderItemsByOrderIdResponse() Properties OrderItems The collection of Order Items if any exist for the order public IEnumerable<OrderItemDto> OrderItems { get; set; } Property Value IEnumerable<OrderItemDto>"
  },
  "api/Ecommerce.Shared.Responses.OrderItem.html": {
    "href": "api/Ecommerce.Shared.Responses.OrderItem.html",
    "title": "Namespace Ecommerce.Shared.Responses.OrderItem",
    "keywords": "Namespace Ecommerce.Shared.Responses.OrderItem Classes CreateOrderItemResponse A implementation of BaseResponse for a request to create a OrderItem GetAllOrderItemsByOrderIdResponse A implementation of BaseResponse for a request to get all OrderItems for a Order"
  },
  "api/Ecommerce.Shared.Responses.PayPal.CreatePayPalOrderResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.PayPal.CreatePayPalOrderResponse.html",
    "title": "Class CreatePayPalOrderResponse",
    "keywords": "Class CreatePayPalOrderResponse Namespace Ecommerce.Shared.Responses.PayPal Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to create a PayPal Order public class CreatePayPalOrderResponse : BaseResponse Inheritance object BaseResponse CreatePayPalOrderResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreatePayPalOrderResponse() public CreatePayPalOrderResponse() Properties RedirectUrl The url to redirect the user to for the PayPal Order public string? RedirectUrl { get; set; } Property Value string"
  },
  "api/Ecommerce.Shared.Responses.PayPal.html": {
    "href": "api/Ecommerce.Shared.Responses.PayPal.html",
    "title": "Namespace Ecommerce.Shared.Responses.PayPal",
    "keywords": "Namespace Ecommerce.Shared.Responses.PayPal Classes CreatePayPalOrderResponse A implementation of BaseResponse for a request to create a PayPal Order"
  },
  "api/Ecommerce.Shared.Responses.Product.CreateProductResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Product.CreateProductResponse.html",
    "title": "Class CreateProductResponse",
    "keywords": "Class CreateProductResponse Namespace Ecommerce.Shared.Responses.Product Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to create a Product public class CreateProductResponse : BaseResponse Inheritance object BaseResponse CreateProductResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateProductResponse() public CreateProductResponse() Properties Product The newly created Product if request was successful public ProductDto? Product { get; set; } Property Value ProductDto"
  },
  "api/Ecommerce.Shared.Responses.Product.DeleteProductResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Product.DeleteProductResponse.html",
    "title": "Class DeleteProductResponse",
    "keywords": "Class DeleteProductResponse Namespace Ecommerce.Shared.Responses.Product Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to delete a Product public class DeleteProductResponse : BaseResponse Inheritance object BaseResponse DeleteProductResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteProductResponse() public DeleteProductResponse()"
  },
  "api/Ecommerce.Shared.Responses.Product.GetAllProductsByCategoryIdResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Product.GetAllProductsByCategoryIdResponse.html",
    "title": "Class GetAllProductsByCategoryIdResponse",
    "keywords": "Class GetAllProductsByCategoryIdResponse Namespace Ecommerce.Shared.Responses.Product Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to get all Products for a Category public class GetAllProductsByCategoryIdResponse : BaseResponse Inheritance object BaseResponse GetAllProductsByCategoryIdResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetAllProductsByCategoryIdResponse() public GetAllProductsByCategoryIdResponse() Properties Products The collection of Products if any exist for in the Category public IEnumerable<ProductDto> Products { get; set; } Property Value IEnumerable<ProductDto>"
  },
  "api/Ecommerce.Shared.Responses.Product.GetProductByIdResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Product.GetProductByIdResponse.html",
    "title": "Class GetProductByIdResponse",
    "keywords": "Class GetProductByIdResponse Namespace Ecommerce.Shared.Responses.Product Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to get a Product by Id public class GetProductByIdResponse : BaseResponse Inheritance object BaseResponse GetProductByIdResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetProductByIdResponse() public GetProductByIdResponse() Properties Product The Category with the Id from the GetProductByIdApiRequest if it exists public ProductDto? Product { get; set; } Property Value ProductDto"
  },
  "api/Ecommerce.Shared.Responses.Product.UpdateProductResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Product.UpdateProductResponse.html",
    "title": "Class UpdateProductResponse",
    "keywords": "Class UpdateProductResponse Namespace Ecommerce.Shared.Responses.Product Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to update a Product public class UpdateProductResponse : BaseResponse Inheritance object BaseResponse UpdateProductResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateProductResponse() public UpdateProductResponse()"
  },
  "api/Ecommerce.Shared.Responses.Product.html": {
    "href": "api/Ecommerce.Shared.Responses.Product.html",
    "title": "Namespace Ecommerce.Shared.Responses.Product",
    "keywords": "Namespace Ecommerce.Shared.Responses.Product Classes CreateProductResponse A implementation of BaseResponse for a request to create a Product DeleteProductResponse A implementation of BaseResponse for a request to delete a Product GetAllProductsByCategoryIdResponse A implementation of BaseResponse for a request to get all Products for a Category GetProductByIdResponse A implementation of BaseResponse for a request to get a Product by Id UpdateProductResponse A implementation of BaseResponse for a request to update a Product"
  },
  "api/Ecommerce.Shared.Responses.Review.CreateReviewResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Review.CreateReviewResponse.html",
    "title": "Class CreateReviewResponse",
    "keywords": "Class CreateReviewResponse Namespace Ecommerce.Shared.Responses.Review Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to create a Review public class CreateReviewResponse : BaseResponse Inheritance object BaseResponse CreateReviewResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateReviewResponse() public CreateReviewResponse() Properties Review The newly created Category if request was successful public ReviewDto? Review { get; set; } Property Value ReviewDto"
  },
  "api/Ecommerce.Shared.Responses.Review.DeleteReviewResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Review.DeleteReviewResponse.html",
    "title": "Class DeleteReviewResponse",
    "keywords": "Class DeleteReviewResponse Namespace Ecommerce.Shared.Responses.Review Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to delete a Review public class DeleteReviewResponse : BaseResponse Inheritance object BaseResponse DeleteReviewResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteReviewResponse() public DeleteReviewResponse()"
  },
  "api/Ecommerce.Shared.Responses.Review.GetReviewsForProductResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Review.GetReviewsForProductResponse.html",
    "title": "Class GetReviewsForProductResponse",
    "keywords": "Class GetReviewsForProductResponse Namespace Ecommerce.Shared.Responses.Review Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to get all Reviews for a Product public class GetReviewsForProductResponse : BaseResponse Inheritance object BaseResponse GetReviewsForProductResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetReviewsForProductResponse() public GetReviewsForProductResponse() Properties Reviews A collection of ReviewDto entities if any exist public IEnumerable<ReviewDto> Reviews { get; set; } Property Value IEnumerable<ReviewDto>"
  },
  "api/Ecommerce.Shared.Responses.Review.GetUserReviewForProductResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Review.GetUserReviewForProductResponse.html",
    "title": "Class GetUserReviewForProductResponse",
    "keywords": "Class GetUserReviewForProductResponse Namespace Ecommerce.Shared.Responses.Review Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to get a User's Review for a Product public class GetUserReviewForProductResponse : BaseResponse Inheritance object BaseResponse GetUserReviewForProductResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetUserReviewForProductResponse() public GetUserReviewForProductResponse() Properties UserReview The User's ReviewDto if it exists public ReviewDto? UserReview { get; set; } Property Value ReviewDto"
  },
  "api/Ecommerce.Shared.Responses.Review.UpdateReviewResponse.html": {
    "href": "api/Ecommerce.Shared.Responses.Review.UpdateReviewResponse.html",
    "title": "Class UpdateReviewResponse",
    "keywords": "Class UpdateReviewResponse Namespace Ecommerce.Shared.Responses.Review Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to update a Review public class UpdateReviewResponse : BaseResponse Inheritance object BaseResponse UpdateReviewResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateReviewResponse() public UpdateReviewResponse()"
  },
  "api/Ecommerce.Shared.Responses.Review.html": {
    "href": "api/Ecommerce.Shared.Responses.Review.html",
    "title": "Namespace Ecommerce.Shared.Responses.Review",
    "keywords": "Namespace Ecommerce.Shared.Responses.Review Classes CreateReviewResponse A implementation of BaseResponse for a request to create a Review DeleteReviewResponse A implementation of BaseResponse for a request to delete a Review GetReviewsForProductResponse A implementation of BaseResponse for a request to get all Reviews for a Product GetUserReviewForProductResponse A implementation of BaseResponse for a request to get a User's Review for a Product UpdateReviewResponse A implementation of BaseResponse for a request to update a Review"
  },
  "api/Ecommerce.Shared.Responses.html": {
    "href": "api/Ecommerce.Shared.Responses.html",
    "title": "Namespace Ecommerce.Shared.Responses",
    "keywords": "Namespace Ecommerce.Shared.Responses Classes BaseResponse Abstract class representing the base structure of all response objects"
  },
  "api/Ecommerce.Shared.Security.AuthenticatedUserModel.html": {
    "href": "api/Ecommerce.Shared.Security.AuthenticatedUserModel.html",
    "title": "Class AuthenticatedUserModel",
    "keywords": "Class AuthenticatedUserModel Namespace Ecommerce.Shared.Security Assembly Ecommerce.Shared.dll Class used to model an authenticated user in the Ecommerce App public class AuthenticatedUserModel Inheritance object AuthenticatedUserModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthenticatedUserModel() public AuthenticatedUserModel() Properties AccessToken The token used to authenticate requests for the user public string AccessToken { get; set; } Property Value string UserName The UserName of the authenticated user public string UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Shared.Security.CustomClaims.html": {
    "href": "api/Ecommerce.Shared.Security.CustomClaims.html",
    "title": "Class CustomClaims",
    "keywords": "Class CustomClaims Namespace Ecommerce.Shared.Security Assembly Ecommerce.Shared.dll public static class CustomClaims Inheritance object CustomClaims Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields _firstName public const string _firstName = \"FirstName\" Field Value string _lastName public const string _lastName = \"LastName\" Field Value string _securityStamp public const string _securityStamp = \"SecurityStamp\" Field Value string"
  },
  "api/Ecommerce.Shared.Security.Requests.AuthenticationRequest.html": {
    "href": "api/Ecommerce.Shared.Security.Requests.AuthenticationRequest.html",
    "title": "Class AuthenticationRequest",
    "keywords": "Class AuthenticationRequest Namespace Ecommerce.Shared.Security.Requests Assembly Ecommerce.Shared.dll The Api Request to authenticate a user based on UserName and Password public class AuthenticationRequest Inheritance object AuthenticationRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthenticationRequest() public AuthenticationRequest() Properties Password The Password of the user attempting to authenticate public string? Password { get; set; } Property Value string UserName The UserName of the user attempting to authenticate public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Shared.Security.Requests.ConfirmEmailRequest.html": {
    "href": "api/Ecommerce.Shared.Security.Requests.ConfirmEmailRequest.html",
    "title": "Class ConfirmEmailRequest",
    "keywords": "Class ConfirmEmailRequest Namespace Ecommerce.Shared.Security.Requests Assembly Ecommerce.Shared.dll A API request for confirming a User's email address public class ConfirmEmailRequest Inheritance object ConfirmEmailRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConfirmEmailRequest() public ConfirmEmailRequest() Properties EmailToken The token in the link sent to the User's email public string? EmailToken { get; set; } Property Value string UserId The unique identifier of the User to confirm the email for public string? UserId { get; set; } Property Value string"
  },
  "api/Ecommerce.Shared.Security.Requests.CreateUserRequest.html": {
    "href": "api/Ecommerce.Shared.Security.Requests.CreateUserRequest.html",
    "title": "Class CreateUserRequest",
    "keywords": "Class CreateUserRequest Namespace Ecommerce.Shared.Security.Requests Assembly Ecommerce.Shared.dll A Api request to create a new User public class CreateUserRequest Inheritance object CreateUserRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateUserRequest() public CreateUserRequest() Properties EmailAddress The Email Address of the User to create [Required] public string? EmailAddress { get; set; } Property Value string FirstName The First Name of the User to create [Required] public string? FirstName { get; set; } Property Value string LastName The Last Name of the User to create [Required] public string? LastName { get; set; } Property Value string Password The Password of the User to create [Required] [MaxLength(50)] public string? Password { get; set; } Property Value string UserName The UserName of the User to create [Required] public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Shared.Security.Requests.LogoutUserRequest.html": {
    "href": "api/Ecommerce.Shared.Security.Requests.LogoutUserRequest.html",
    "title": "Class LogoutUserRequest",
    "keywords": "Class LogoutUserRequest Namespace Ecommerce.Shared.Security.Requests Assembly Ecommerce.Shared.dll public class LogoutUserRequest Inheritance object LogoutUserRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LogoutUserRequest() public LogoutUserRequest() Properties UserName public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Shared.Security.Requests.UpdateEcommerceUserRequest.html": {
    "href": "api/Ecommerce.Shared.Security.Requests.UpdateEcommerceUserRequest.html",
    "title": "Class UpdateEcommerceUserRequest",
    "keywords": "Class UpdateEcommerceUserRequest Namespace Ecommerce.Shared.Security.Requests Assembly Ecommerce.Shared.dll A Api request to update a User public class UpdateEcommerceUserRequest Inheritance object UpdateEcommerceUserRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateEcommerceUserRequest() public UpdateEcommerceUserRequest() Properties Email The Email of the User to update public string? Email { get; set; } Property Value string FirstName The First Name of the User to update public string? FirstName { get; set; } Property Value string LastName The Last Name of the User to update public string? LastName { get; set; } Property Value string UpdateUserName The Updated Username to use public string? UpdateUserName { get; set; } Property Value string UserName The UserName of the User to update public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Shared.Security.Requests.UpdatePasswordRequest.html": {
    "href": "api/Ecommerce.Shared.Security.Requests.UpdatePasswordRequest.html",
    "title": "Class UpdatePasswordRequest",
    "keywords": "Class UpdatePasswordRequest Namespace Ecommerce.Shared.Security.Requests Assembly Ecommerce.Shared.dll A Api request to update a User's password public class UpdatePasswordRequest Inheritance object UpdatePasswordRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdatePasswordRequest() public UpdatePasswordRequest() Properties CurrentPassword The current password of the User public string? CurrentPassword { get; set; } Property Value string NewPassword The new password to use public string? NewPassword { get; set; } Property Value string UserName The UserName of the User to update the password for public string? UserName { get; set; } Property Value string"
  },
  "api/Ecommerce.Shared.Security.Requests.html": {
    "href": "api/Ecommerce.Shared.Security.Requests.html",
    "title": "Namespace Ecommerce.Shared.Security.Requests",
    "keywords": "Namespace Ecommerce.Shared.Security.Requests Classes AuthenticationRequest The Api Request to authenticate a user based on UserName and Password ConfirmEmailRequest A API request for confirming a User's email address CreateUserRequest A Api request to create a new User LogoutUserRequest UpdateEcommerceUserRequest A Api request to update a User UpdatePasswordRequest A Api request to update a User's password"
  },
  "api/Ecommerce.Shared.Security.Responses.AuthenticateResponse.html": {
    "href": "api/Ecommerce.Shared.Security.Responses.AuthenticateResponse.html",
    "title": "Class AuthenticateResponse",
    "keywords": "Class AuthenticateResponse Namespace Ecommerce.Shared.Security.Responses Assembly Ecommerce.Shared.dll A response object for signing in a User public class AuthenticateResponse Inheritance object AuthenticateResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthenticateResponse() public AuthenticateResponse() Properties SignInResult The result of the sign in request public SignInResponseResult SignInResult { get; set; } Property Value SignInResponseResult Token The authentication token for the User public string? Token { get; set; } Property Value string TwoFactorToken The Two Factor Authentication token for the User public string? TwoFactorToken { get; set; } Property Value string"
  },
  "api/Ecommerce.Shared.Security.Responses.ConfirmEmailResponse.html": {
    "href": "api/Ecommerce.Shared.Security.Responses.ConfirmEmailResponse.html",
    "title": "Class ConfirmEmailResponse",
    "keywords": "Class ConfirmEmailResponse Namespace Ecommerce.Shared.Security.Responses Assembly Ecommerce.Shared.dll A response object for confirming a User's email address public class ConfirmEmailResponse Inheritance object ConfirmEmailResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConfirmEmailResponse() public ConfirmEmailResponse() Properties Message The message returned from the request public string? Message { get; set; } Property Value string Success Indicates whether the request was successful or not public bool Success { get; set; } Property Value bool"
  },
  "api/Ecommerce.Shared.Security.Responses.CreateUserResponse.html": {
    "href": "api/Ecommerce.Shared.Security.Responses.CreateUserResponse.html",
    "title": "Class CreateUserResponse",
    "keywords": "Class CreateUserResponse Namespace Ecommerce.Shared.Security.Responses Assembly Ecommerce.Shared.dll A response object for creating a new User public class CreateUserResponse Inheritance object CreateUserResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateUserResponse() public CreateUserResponse() Properties ConfirmationLink The link to confirm the User's email address public string? ConfirmationLink { get; set; } Property Value string Errors Holds all errors that occurred during User registration public IEnumerable<string>? Errors { get; set; } Property Value IEnumerable<string> Success Indicates whether the request was successful or not public bool Success { get; set; } Property Value bool"
  },
  "api/Ecommerce.Shared.Security.Responses.UpdateEcommerceUserResponse.html": {
    "href": "api/Ecommerce.Shared.Security.Responses.UpdateEcommerceUserResponse.html",
    "title": "Class UpdateEcommerceUserResponse",
    "keywords": "Class UpdateEcommerceUserResponse Namespace Ecommerce.Shared.Security.Responses Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to update a EcommerceUser public class UpdateEcommerceUserResponse : BaseResponse Inheritance object BaseResponse UpdateEcommerceUserResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateEcommerceUserResponse() public UpdateEcommerceUserResponse() Properties UpdatedAccessToken The updated token used to authenticate requests for the user public string UpdatedAccessToken { get; set; } Property Value string"
  },
  "api/Ecommerce.Shared.Security.Responses.UpdatePasswordResponse.html": {
    "href": "api/Ecommerce.Shared.Security.Responses.UpdatePasswordResponse.html",
    "title": "Class UpdatePasswordResponse",
    "keywords": "Class UpdatePasswordResponse Namespace Ecommerce.Shared.Security.Responses Assembly Ecommerce.Shared.dll A implementation of BaseResponse for a request to update a User's password public class UpdatePasswordResponse : BaseResponse Inheritance object BaseResponse UpdatePasswordResponse Inherited Members BaseResponse.Success BaseResponse.Message BaseResponse.ValidationErrors object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdatePasswordResponse() public UpdatePasswordResponse() Properties UpdatedAccessToken The updated token used to authenticate requests for the user public string UpdatedAccessToken { get; set; } Property Value string"
  },
  "api/Ecommerce.Shared.Security.Responses.html": {
    "href": "api/Ecommerce.Shared.Security.Responses.html",
    "title": "Namespace Ecommerce.Shared.Security.Responses",
    "keywords": "Namespace Ecommerce.Shared.Security.Responses Classes AuthenticateResponse A response object for signing in a User ConfirmEmailResponse A response object for confirming a User's email address CreateUserResponse A response object for creating a new User UpdateEcommerceUserResponse A implementation of BaseResponse for a request to update a EcommerceUser UpdatePasswordResponse A implementation of BaseResponse for a request to update a User's password"
  },
  "api/Ecommerce.Shared.Security.SignInResponseResult.html": {
    "href": "api/Ecommerce.Shared.Security.SignInResponseResult.html",
    "title": "Enum SignInResponseResult",
    "keywords": "Enum SignInResponseResult Namespace Ecommerce.Shared.Security Assembly Ecommerce.Shared.dll public enum SignInResponseResult Fields AccountLocked = 2 AccountNotAllowed = 3 EmailNotConfirmed = 4 InvalidCredentials = 1 Success = 0 TwoFactorRequired = 5 UnexpectedError = 6"
  },
  "api/Ecommerce.Shared.Security.html": {
    "href": "api/Ecommerce.Shared.Security.html",
    "title": "Namespace Ecommerce.Shared.Security",
    "keywords": "Namespace Ecommerce.Shared.Security Classes AuthenticatedUserModel Class used to model an authenticated user in the Ecommerce App CustomClaims Enums SignInResponseResult"
  },
  "api/Ecommerce.UI.App.html": {
    "href": "api/Ecommerce.UI.App.html",
    "title": "Class App",
    "keywords": "Class App Namespace Ecommerce.UI Assembly Ecommerce.UI.dll public class App : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase App Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Ecommerce.UI.Contracts.ICartService.html": {
    "href": "api/Ecommerce.UI.Contracts.ICartService.html",
    "title": "Interface ICartService",
    "keywords": "Interface ICartService Namespace Ecommerce.UI.Contracts Assembly Ecommerce.UI.dll public interface ICartService Methods AddItemToCart(CartItemDto) Task<CreateCartItemResponse> AddItemToCart(CartItemDto cartItem) Parameters cartItem CartItemDto Returns Task<CreateCartItemResponse> ClearCart(Guid) Task<DeleteUserCartItemsResponse> ClearCart(Guid userId) Parameters userId Guid Returns Task<DeleteUserCartItemsResponse> GetItemsInCart(Guid) Task<GetUserCartItemsResponse> GetItemsInCart(Guid userId) Parameters userId Guid Returns Task<GetUserCartItemsResponse> RemoveItemFromCart(CartItemDto) Task<DeleteCartItemResponse> RemoveItemFromCart(CartItemDto cartItem) Parameters cartItem CartItemDto Returns Task<DeleteCartItemResponse> UpdateItemInCart(CartItemDto) Task<UpdateCartItemResponse> UpdateItemInCart(CartItemDto cartItem) Parameters cartItem CartItemDto Returns Task<UpdateCartItemResponse>"
  },
  "api/Ecommerce.UI.Contracts.ICategoryService.html": {
    "href": "api/Ecommerce.UI.Contracts.ICategoryService.html",
    "title": "Interface ICategoryService",
    "keywords": "Interface ICategoryService Namespace Ecommerce.UI.Contracts Assembly Ecommerce.UI.dll public interface ICategoryService Methods GetAllCategories() Task<GetAllCategoriesResponse> GetAllCategories() Returns Task<GetAllCategoriesResponse>"
  },
  "api/Ecommerce.UI.Contracts.IOrderService.html": {
    "href": "api/Ecommerce.UI.Contracts.IOrderService.html",
    "title": "Interface IOrderService",
    "keywords": "Interface IOrderService Namespace Ecommerce.UI.Contracts Assembly Ecommerce.UI.dll public interface IOrderService Methods CreateOrder(IEnumerable<CartItemDto>) Task<CreateOrderResponse> CreateOrder(IEnumerable<CartItemDto> cartItems) Parameters cartItems IEnumerable<CartItemDto> Returns Task<CreateOrderResponse> GetOrderAfterSuccessfulCheckout(int) Task<GetOrderAfterSuccessfulCheckoutResponse> GetOrderAfterSuccessfulCheckout(int orderId) Parameters orderId int Returns Task<GetOrderAfterSuccessfulCheckoutResponse> GetOrderById(int) Task<GetOrderByIdResponse> GetOrderById(int orderId) Parameters orderId int Returns Task<GetOrderByIdResponse> GetUserOrders(Guid) Task<GetAllOrdersByUserIdResponse> GetUserOrders(Guid userId) Parameters userId Guid Returns Task<GetAllOrdersByUserIdResponse> UpdateOrder(OrderDto) Task<UpdateOrderResponse> UpdateOrder(OrderDto orderDto) Parameters orderDto OrderDto Returns Task<UpdateOrderResponse>"
  },
  "api/Ecommerce.UI.Contracts.IProductService.html": {
    "href": "api/Ecommerce.UI.Contracts.IProductService.html",
    "title": "Interface IProductService",
    "keywords": "Interface IProductService Namespace Ecommerce.UI.Contracts Assembly Ecommerce.UI.dll public interface IProductService Methods GetAllProducts(int) Task<GetAllProductsByCategoryIdResponse> GetAllProducts(int categoryId) Parameters categoryId int Returns Task<GetAllProductsByCategoryIdResponse> GetProductById(int) Task<GetProductByIdResponse> GetProductById(int productId) Parameters productId int Returns Task<GetProductByIdResponse>"
  },
  "api/Ecommerce.UI.Contracts.IReviewService.html": {
    "href": "api/Ecommerce.UI.Contracts.IReviewService.html",
    "title": "Interface IReviewService",
    "keywords": "Interface IReviewService Namespace Ecommerce.UI.Contracts Assembly Ecommerce.UI.dll public interface IReviewService Methods GetUserReview(string, int) Task<GetUserReviewForProductResponse> GetUserReview(string userName, int productId) Parameters userName string productId int Returns Task<GetUserReviewForProductResponse> RemoveReview(ReviewDto) Task<DeleteReviewResponse> RemoveReview(ReviewDto review) Parameters review ReviewDto Returns Task<DeleteReviewResponse> SubmitReview(ReviewDto) Task<CreateReviewResponse> SubmitReview(ReviewDto review) Parameters review ReviewDto Returns Task<CreateReviewResponse> UpdateReview(ReviewDto) Task<UpdateReviewResponse> UpdateReview(ReviewDto review) Parameters review ReviewDto Returns Task<UpdateReviewResponse>"
  },
  "api/Ecommerce.UI.Contracts.ISecurityService.html": {
    "href": "api/Ecommerce.UI.Contracts.ISecurityService.html",
    "title": "Interface ISecurityService",
    "keywords": "Interface ISecurityService Namespace Ecommerce.UI.Contracts Assembly Ecommerce.UI.dll public interface ISecurityService Methods ConfirmUserEmail(string?, string?) Task<ConfirmEmailResponse> ConfirmUserEmail(string? userId, string? emailToken) Parameters userId string emailToken string Returns Task<ConfirmEmailResponse> Login(AuthenticationRequest) Task<LoginResponse> Login(AuthenticationRequest authenticationRequest) Parameters authenticationRequest AuthenticationRequest Returns Task<LoginResponse> Logout(string) Task<bool> Logout(string userName) Parameters userName string Returns Task<bool> RegisterUser(CreateUserRequest) Task<CreateUserResponse> RegisterUser(CreateUserRequest createUserRequest) Parameters createUserRequest CreateUserRequest Returns Task<CreateUserResponse> UpdatePassword(string, string, string) Task<UpdatePasswordResponse> UpdatePassword(string username, string currentPassword, string newPassword) Parameters username string currentPassword string newPassword string Returns Task<UpdatePasswordResponse> UpdateUser(UpdateEcommerceUserRequest) Task<UpdateEcommerceUserResponse> UpdateUser(UpdateEcommerceUserRequest updateUserRequest) Parameters updateUserRequest UpdateEcommerceUserRequest Returns Task<UpdateEcommerceUserResponse>"
  },
  "api/Ecommerce.UI.Contracts.Refit.ICartApiService.html": {
    "href": "api/Ecommerce.UI.Contracts.Refit.ICartApiService.html",
    "title": "Interface ICartApiService",
    "keywords": "Interface ICartApiService Namespace Ecommerce.UI.Contracts.Refit Assembly Ecommerce.UI.dll public interface ICartApiService Methods CreateCartItem(CreateCartItemApiRequest) [Post(\"/api/cartitem/create\")] Task<ApiResponse<CreateCartItemResponse>> CreateCartItem(CreateCartItemApiRequest createCartItemApiRequest) Parameters createCartItemApiRequest CreateCartItemApiRequest Returns Task<ApiResponse<CreateCartItemResponse>> DeleteAllCartItems(DeleteUserCartItemsApiRequest) [Delete(\"/api/cartitem/user/delete\")] Task<ApiResponse<DeleteUserCartItemsResponse>> DeleteAllCartItems(DeleteUserCartItemsApiRequest deleteUserCartItemsApiRequest) Parameters deleteUserCartItemsApiRequest DeleteUserCartItemsApiRequest Returns Task<ApiResponse<DeleteUserCartItemsResponse>> DeleteCartItem(DeleteCartItemApiRequest) [Delete(\"/api/cartitem/delete\")] Task<ApiResponse<DeleteCartItemResponse>> DeleteCartItem(DeleteCartItemApiRequest deleteCartItemApiRequest) Parameters deleteCartItemApiRequest DeleteCartItemApiRequest Returns Task<ApiResponse<DeleteCartItemResponse>> GetUserCartItems(GetUserCartItemsApiRequest) [Get(\"/api/cartitem/all\")] Task<ApiResponse<GetUserCartItemsResponse>> GetUserCartItems(GetUserCartItemsApiRequest getUserCartItemsApiRequest) Parameters getUserCartItemsApiRequest GetUserCartItemsApiRequest Returns Task<ApiResponse<GetUserCartItemsResponse>> UpdateCartItem(UpdateCartItemApiRequest) [Put(\"/api/cartitem/update\")] Task<ApiResponse<UpdateCartItemResponse>> UpdateCartItem(UpdateCartItemApiRequest updateCartItemApiRequest) Parameters updateCartItemApiRequest UpdateCartItemApiRequest Returns Task<ApiResponse<UpdateCartItemResponse>>"
  },
  "api/Ecommerce.UI.Contracts.Refit.ICategoryApiService.html": {
    "href": "api/Ecommerce.UI.Contracts.Refit.ICategoryApiService.html",
    "title": "Interface ICategoryApiService",
    "keywords": "Interface ICategoryApiService Namespace Ecommerce.UI.Contracts.Refit Assembly Ecommerce.UI.dll public interface ICategoryApiService Methods GetAllCategories(GetAllCategoriesApiRequest) [Get(\"/api/category/all\")] Task<ApiResponse<GetAllCategoriesResponse>> GetAllCategories(GetAllCategoriesApiRequest getAllCategoriesApiRequest) Parameters getAllCategoriesApiRequest GetAllCategoriesApiRequest Returns Task<ApiResponse<GetAllCategoriesResponse>>"
  },
  "api/Ecommerce.UI.Contracts.Refit.IOrderApiService.html": {
    "href": "api/Ecommerce.UI.Contracts.Refit.IOrderApiService.html",
    "title": "Interface IOrderApiService",
    "keywords": "Interface IOrderApiService Namespace Ecommerce.UI.Contracts.Refit Assembly Ecommerce.UI.dll public interface IOrderApiService Methods CreateOrder(CreateOrderApiRequest) [Post(\"/api/order/create\")] Task<ApiResponse<CreateOrderResponse>> CreateOrder(CreateOrderApiRequest createOrderApiRequest) Parameters createOrderApiRequest CreateOrderApiRequest Returns Task<ApiResponse<CreateOrderResponse>> GetOrderAfterSuccessfulCheckout(GetOrderAfterSuccessfulCheckoutApiRequest) [Get(\"/api/checkout/order\")] Task<ApiResponse<GetOrderAfterSuccessfulCheckoutResponse>> GetOrderAfterSuccessfulCheckout(GetOrderAfterSuccessfulCheckoutApiRequest getOrderAfterSuccessfulCheckoutApiRequest) Parameters getOrderAfterSuccessfulCheckoutApiRequest GetOrderAfterSuccessfulCheckoutApiRequest Returns Task<ApiResponse<GetOrderAfterSuccessfulCheckoutResponse>> GetOrderById(GetOrderByIdApiRequest) [Get(\"/api/order\")] Task<ApiResponse<GetOrderByIdResponse>> GetOrderById(GetOrderByIdApiRequest getOrderByIdApiRequest) Parameters getOrderByIdApiRequest GetOrderByIdApiRequest Returns Task<ApiResponse<GetOrderByIdResponse>> GetUserOrders(GetAllOrdersByUserIdApiRequest) [Get(\"/api/order/user/all\")] Task<ApiResponse<GetAllOrdersByUserIdResponse>> GetUserOrders(GetAllOrdersByUserIdApiRequest getAllOrdersByUserIdApiRequest) Parameters getAllOrdersByUserIdApiRequest GetAllOrdersByUserIdApiRequest Returns Task<ApiResponse<GetAllOrdersByUserIdResponse>> UpdateOrder(UpdateOrderApiRequest) [Put(\"/api/order/update\")] Task<ApiResponse<UpdateOrderResponse>> UpdateOrder(UpdateOrderApiRequest updateOrderApiRequest) Parameters updateOrderApiRequest UpdateOrderApiRequest Returns Task<ApiResponse<UpdateOrderResponse>>"
  },
  "api/Ecommerce.UI.Contracts.Refit.IProductApiService.html": {
    "href": "api/Ecommerce.UI.Contracts.Refit.IProductApiService.html",
    "title": "Interface IProductApiService",
    "keywords": "Interface IProductApiService Namespace Ecommerce.UI.Contracts.Refit Assembly Ecommerce.UI.dll public interface IProductApiService Methods GetAllProductsByCategory(GetAllProductsByCategoryIdApiRequest) [Get(\"/api/product/all\")] Task<ApiResponse<GetAllProductsByCategoryIdResponse>> GetAllProductsByCategory(GetAllProductsByCategoryIdApiRequest getAllProductsRequest) Parameters getAllProductsRequest GetAllProductsByCategoryIdApiRequest Returns Task<ApiResponse<GetAllProductsByCategoryIdResponse>> GetProductById(GetProductByIdApiRequest) [Get(\"/api/product/get\")] Task<ApiResponse<GetProductByIdResponse>> GetProductById(GetProductByIdApiRequest getProductByIdApiRequest) Parameters getProductByIdApiRequest GetProductByIdApiRequest Returns Task<ApiResponse<GetProductByIdResponse>>"
  },
  "api/Ecommerce.UI.Contracts.Refit.IReviewApiService.html": {
    "href": "api/Ecommerce.UI.Contracts.Refit.IReviewApiService.html",
    "title": "Interface IReviewApiService",
    "keywords": "Interface IReviewApiService Namespace Ecommerce.UI.Contracts.Refit Assembly Ecommerce.UI.dll public interface IReviewApiService Methods CreateReview(CreateReviewApiRequest) [Post(\"/api/review/create\")] Task<ApiResponse<CreateReviewResponse>> CreateReview(CreateReviewApiRequest createReviewApiRequest) Parameters createReviewApiRequest CreateReviewApiRequest Returns Task<ApiResponse<CreateReviewResponse>> DeleteReview(DeleteReviewApiRequest) [Delete(\"/api/review/delete\")] Task<ApiResponse<DeleteReviewResponse>> DeleteReview(DeleteReviewApiRequest deleteReviewApiRequest) Parameters deleteReviewApiRequest DeleteReviewApiRequest Returns Task<ApiResponse<DeleteReviewResponse>> GetUserReview(GetUserReviewForProductApiRequest) [Get(\"/api/review/user\")] Task<ApiResponse<GetUserReviewForProductResponse>> GetUserReview(GetUserReviewForProductApiRequest getUserReviewForProductApiRequest) Parameters getUserReviewForProductApiRequest GetUserReviewForProductApiRequest Returns Task<ApiResponse<GetUserReviewForProductResponse>> UpdateReview(UpdateReviewApiRequest) [Put(\"/api/review/update\")] Task<ApiResponse<UpdateReviewResponse>> UpdateReview(UpdateReviewApiRequest updateReviewApiRequest) Parameters updateReviewApiRequest UpdateReviewApiRequest Returns Task<ApiResponse<UpdateReviewResponse>>"
  },
  "api/Ecommerce.UI.Contracts.Refit.ISecurityApiService.html": {
    "href": "api/Ecommerce.UI.Contracts.Refit.ISecurityApiService.html",
    "title": "Interface ISecurityApiService",
    "keywords": "Interface ISecurityApiService Namespace Ecommerce.UI.Contracts.Refit Assembly Ecommerce.UI.dll public interface ISecurityApiService Methods ConfirmEmail(ConfirmEmailRequest) [Post(\"/api/user/confirm-email\")] Task<ApiResponse<ConfirmEmailResponse?>> ConfirmEmail(ConfirmEmailRequest confirmEmailRequest) Parameters confirmEmailRequest ConfirmEmailRequest Returns Task<ApiResponse<ConfirmEmailResponse>> CreateUser(CreateUserRequest) [Post(\"/api/register\")] Task<ApiResponse<CreateUserResponse>> CreateUser(CreateUserRequest createUserRequest) Parameters createUserRequest CreateUserRequest Returns Task<ApiResponse<CreateUserResponse>> Login(AuthenticationRequest) [Post(\"/api/login\")] Task<ApiResponse<AuthenticateResponse>> Login(AuthenticationRequest authenticationRequest) Parameters authenticationRequest AuthenticationRequest Returns Task<ApiResponse<AuthenticateResponse>> Logout(LogoutUserRequest) [Post(\"/api/logout\")] Task<IApiResponse> Logout(LogoutUserRequest logoutRequest) Parameters logoutRequest LogoutUserRequest Returns Task<IApiResponse> UpdatePassword(UpdatePasswordRequest) [Put(\"/api/password/update\")] Task<ApiResponse<UpdatePasswordResponse>> UpdatePassword(UpdatePasswordRequest updatePasswordRequest) Parameters updatePasswordRequest UpdatePasswordRequest Returns Task<ApiResponse<UpdatePasswordResponse>> UpdateUser(UpdateEcommerceUserRequest) [Put(\"/api/user/update\")] Task<ApiResponse<UpdateEcommerceUserResponse>> UpdateUser(UpdateEcommerceUserRequest updateUserRequest) Parameters updateUserRequest UpdateEcommerceUserRequest Returns Task<ApiResponse<UpdateEcommerceUserResponse>>"
  },
  "api/Ecommerce.UI.Contracts.Refit.html": {
    "href": "api/Ecommerce.UI.Contracts.Refit.html",
    "title": "Namespace Ecommerce.UI.Contracts.Refit",
    "keywords": "Namespace Ecommerce.UI.Contracts.Refit Interfaces ICartApiService ICategoryApiService IOrderApiService IProductApiService IReviewApiService ISecurityApiService"
  },
  "api/Ecommerce.UI.Contracts.html": {
    "href": "api/Ecommerce.UI.Contracts.html",
    "title": "Namespace Ecommerce.UI.Contracts",
    "keywords": "Namespace Ecommerce.UI.Contracts Interfaces ICartService ICategoryService IOrderService IProductService IReviewService ISecurityService"
  },
  "api/Ecommerce.UI.Extensions.NavigationManagerExtensions.html": {
    "href": "api/Ecommerce.UI.Extensions.NavigationManagerExtensions.html",
    "title": "Class NavigationManagerExtensions",
    "keywords": "Class NavigationManagerExtensions Namespace Ecommerce.UI.Extensions Assembly Ecommerce.UI.dll public static class NavigationManagerExtensions Inheritance object NavigationManagerExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods TryGetQueryString<T>(NavigationManager, string, out T) public static bool TryGetQueryString<T>(this NavigationManager navManager, string key, out T value) Parameters navManager NavigationManager key string value T Returns bool Type Parameters T"
  },
  "api/Ecommerce.UI.Extensions.html": {
    "href": "api/Ecommerce.UI.Extensions.html",
    "title": "Namespace Ecommerce.UI.Extensions",
    "keywords": "Namespace Ecommerce.UI.Extensions Classes NavigationManagerExtensions"
  },
  "api/Ecommerce.UI.Modals.AddToCartModal.html": {
    "href": "api/Ecommerce.UI.Modals.AddToCartModal.html",
    "title": "Class AddToCartModal",
    "keywords": "Class AddToCartModal Namespace Ecommerce.UI.Modals Assembly Ecommerce.UI.dll public class AddToCartModal : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase AddToCartModal Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CartService [Inject] public ICartService CartService { get; set; } Property Value ICartService SelectedProduct [Parameter] public ProductDto SelectedProduct { get; set; } Property Value ProductDto Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/Ecommerce.UI.Modals.EditCartItemModal.html": {
    "href": "api/Ecommerce.UI.Modals.EditCartItemModal.html",
    "title": "Class EditCartItemModal",
    "keywords": "Class EditCartItemModal Namespace Ecommerce.UI.Modals Assembly Ecommerce.UI.dll public class EditCartItemModal : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase EditCartItemModal Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CartService [Inject] public ICartService CartService { get; set; } Property Value ICartService CurrentQuantity [Parameter] public int CurrentQuantity { get; set; } Property Value int SelectedProduct [Parameter] public ProductDto SelectedProduct { get; set; } Property Value ProductDto Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized()"
  },
  "api/Ecommerce.UI.Modals.html": {
    "href": "api/Ecommerce.UI.Modals.html",
    "title": "Namespace Ecommerce.UI.Modals",
    "keywords": "Namespace Ecommerce.UI.Modals Classes AddToCartModal EditCartItemModal"
  },
  "api/Ecommerce.UI.Pages.Cart.html": {
    "href": "api/Ecommerce.UI.Pages.Cart.html",
    "title": "Class Cart",
    "keywords": "Class Cart Namespace Ecommerce.UI.Pages Assembly Ecommerce.UI.dll [Authorize] [Route(\"/Cart\")] public class Cart : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Cart Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AuthenticationStateProvider [Inject] public AuthenticationStateProvider AuthenticationStateProvider { get; set; } Property Value AuthenticationStateProvider CartService [Inject] public ICartService CartService { get; set; } Property Value ICartService Modal [CascadingParameter] public IModalService Modal { get; set; } Property Value IModalService NavigationManager [Inject] public NavigationManager NavigationManager { get; set; } Property Value NavigationManager OrderService [Inject] public IOrderService OrderService { get; set; } Property Value IOrderService ProductService [Inject] public IProductService ProductService { get; set; } Property Value IProductService ToastService [Inject] public IToastService ToastService { get; set; } Property Value IToastService Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/Ecommerce.UI.Pages.Categories.html": {
    "href": "api/Ecommerce.UI.Pages.Categories.html",
    "title": "Class Categories",
    "keywords": "Class Categories Namespace Ecommerce.UI.Pages Assembly Ecommerce.UI.dll [Route(\"/Categories\")] public class Categories : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Categories Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CategoryService [Inject] public ICategoryService CategoryService { get; set; } Property Value ICategoryService NavigationManager [Inject] public NavigationManager NavigationManager { get; set; } Property Value NavigationManager ToastService [Inject] public IToastService ToastService { get; set; } Property Value IToastService Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/Ecommerce.UI.Pages.CheckoutReturn.CancelReturn.html": {
    "href": "api/Ecommerce.UI.Pages.CheckoutReturn.CancelReturn.html",
    "title": "Class CancelReturn",
    "keywords": "Class CancelReturn Namespace Ecommerce.UI.Pages.CheckoutReturn Assembly Ecommerce.UI.dll [Route(\"/checkout/cancel\")] public class CancelReturn : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase CancelReturn Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties NavigationManager [Inject] public NavigationManager NavigationManager { get; set; } Property Value NavigationManager Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/Ecommerce.UI.Pages.CheckoutReturn.PaymentReturn.html": {
    "href": "api/Ecommerce.UI.Pages.CheckoutReturn.PaymentReturn.html",
    "title": "Class PaymentReturn",
    "keywords": "Class PaymentReturn Namespace Ecommerce.UI.Pages.CheckoutReturn Assembly Ecommerce.UI.dll [Route(\"/checkout/success/{OrderId}\")] public class PaymentReturn : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase PaymentReturn Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AuthenticationStateProvider [Inject] public AuthenticationStateProvider AuthenticationStateProvider { get; set; } Property Value AuthenticationStateProvider OrderId [Parameter] public string OrderId { get; set; } Property Value string Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/Ecommerce.UI.Pages.CheckoutReturn.html": {
    "href": "api/Ecommerce.UI.Pages.CheckoutReturn.html",
    "title": "Namespace Ecommerce.UI.Pages.CheckoutReturn",
    "keywords": "Namespace Ecommerce.UI.Pages.CheckoutReturn Classes CancelReturn PaymentReturn"
  },
  "api/Ecommerce.UI.Pages.Index.html": {
    "href": "api/Ecommerce.UI.Pages.Index.html",
    "title": "Class Index",
    "keywords": "Class Index Namespace Ecommerce.UI.Pages Assembly Ecommerce.UI.dll [Route(\"/\")] public class Index : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Index Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Ecommerce.UI.Pages.OrderDetail.html": {
    "href": "api/Ecommerce.UI.Pages.OrderDetail.html",
    "title": "Class OrderDetail",
    "keywords": "Class OrderDetail Namespace Ecommerce.UI.Pages Assembly Ecommerce.UI.dll [Route(\"/OrderDetail/{OrderId}\")] public class OrderDetail : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase OrderDetail Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties NavigationManager [Inject] public NavigationManager NavigationManager { get; set; } Property Value NavigationManager OrderId [Parameter] public string OrderId { get; set; } Property Value string OrderService [Inject] public IOrderService OrderService { get; set; } Property Value IOrderService ProductService [Inject] public IProductService ProductService { get; set; } Property Value IProductService ToastService [Inject] public IToastService ToastService { get; set; } Property Value IToastService Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/Ecommerce.UI.Pages.Orders.html": {
    "href": "api/Ecommerce.UI.Pages.Orders.html",
    "title": "Class Orders",
    "keywords": "Class Orders Namespace Ecommerce.UI.Pages Assembly Ecommerce.UI.dll [Route(\"/Orders\")] public class Orders : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Orders Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AuthenticationStateProvider [Inject] public AuthenticationStateProvider AuthenticationStateProvider { get; set; } Property Value AuthenticationStateProvider NavigationManager [Inject] public NavigationManager NavigationManager { get; set; } Property Value NavigationManager OrderService [Inject] public IOrderService OrderService { get; set; } Property Value IOrderService ToastService [Inject] public IToastService ToastService { get; set; } Property Value IToastService Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/Ecommerce.UI.Pages.ProductDetail.html": {
    "href": "api/Ecommerce.UI.Pages.ProductDetail.html",
    "title": "Class ProductDetail",
    "keywords": "Class ProductDetail Namespace Ecommerce.UI.Pages Assembly Ecommerce.UI.dll [Route(\"/ProductDetail/{ProductId}\")] public class ProductDetail : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ProductDetail Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CartService [Inject] public ICartService CartService { get; set; } Property Value ICartService Modal [CascadingParameter] public IModalService Modal { get; set; } Property Value IModalService NavigationManager [Inject] public NavigationManager NavigationManager { get; set; } Property Value NavigationManager ProductId [Parameter] public string ProductId { get; set; } Property Value string ProductService [Inject] public IProductService ProductService { get; set; } Property Value IProductService ReviewService [Inject] public IReviewService ReviewService { get; set; } Property Value IReviewService ToastService [Inject] public IToastService ToastService { get; set; } Property Value IToastService Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/Ecommerce.UI.Pages.Products.html": {
    "href": "api/Ecommerce.UI.Pages.Products.html",
    "title": "Class Products",
    "keywords": "Class Products Namespace Ecommerce.UI.Pages Assembly Ecommerce.UI.dll [Route(\"/Products/{CategoryId}\")] public class Products : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Products Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CartService [Inject] public ICartService CartService { get; set; } Property Value ICartService CategoryId [Parameter] public string CategoryId { get; set; } Property Value string Modal [CascadingParameter] public IModalService Modal { get; set; } Property Value IModalService NavigationManager [Inject] public NavigationManager NavigationManager { get; set; } Property Value NavigationManager ProductService [Inject] public IProductService ProductService { get; set; } Property Value IProductService ToastService [Inject] public IToastService ToastService { get; set; } Property Value IToastService Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/Ecommerce.UI.Pages.Profile.html": {
    "href": "api/Ecommerce.UI.Pages.Profile.html",
    "title": "Class Profile",
    "keywords": "Class Profile Namespace Ecommerce.UI.Pages Assembly Ecommerce.UI.dll [Route(\"/Profile\")] public class Profile : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Profile Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties NavigationManager [Inject] public NavigationManager NavigationManager { get; set; } Property Value NavigationManager SecurityService [Inject] public ISecurityService SecurityService { get; set; } Property Value ISecurityService ToastService [Inject] public IToastService ToastService { get; set; } Property Value IToastService Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/Ecommerce.UI.Pages.Security.ConfirmEmail.html": {
    "href": "api/Ecommerce.UI.Pages.Security.ConfirmEmail.html",
    "title": "Class ConfirmEmail",
    "keywords": "Class ConfirmEmail Namespace Ecommerce.UI.Pages.Security Assembly Ecommerce.UI.dll [Route(\"/ConfirmEmail\")] public class ConfirmEmail : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase ConfirmEmail Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties NavigationManager [Inject] public NavigationManager NavigationManager { get; set; } Property Value NavigationManager SecurityService [Inject] public ISecurityService SecurityService { get; set; } Property Value ISecurityService Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/Ecommerce.UI.Pages.Security.Login.html": {
    "href": "api/Ecommerce.UI.Pages.Security.Login.html",
    "title": "Class Login",
    "keywords": "Class Login Namespace Ecommerce.UI.Pages.Security Assembly Ecommerce.UI.dll [Route(\"/Login/{NewUser?}\")] public class Login : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Login Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AuthenticationRequestModel public AuthenticationRequest AuthenticationRequestModel { get; set; } Property Value AuthenticationRequest NavigationManager [Inject] public NavigationManager NavigationManager { get; set; } Property Value NavigationManager NewUser [Parameter] public string? NewUser { get; set; } Property Value string SecurityService [Inject] public ISecurityService SecurityService { get; set; } Property Value ISecurityService ToastService [Inject] public IToastService ToastService { get; set; } Property Value IToastService Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitialized() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. protected override void OnInitialized()"
  },
  "api/Ecommerce.UI.Pages.Security.Logout.html": {
    "href": "api/Ecommerce.UI.Pages.Security.Logout.html",
    "title": "Class Logout",
    "keywords": "Class Logout Namespace Ecommerce.UI.Pages.Security Assembly Ecommerce.UI.dll [Route(\"/Logout\")] public class Logout : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Logout Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties NavigationManager [Inject] public NavigationManager NavigationManager { get; set; } Property Value NavigationManager SecurityService [Inject] public ISecurityService SecurityService { get; set; } Property Value ISecurityService Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/Ecommerce.UI.Pages.Security.RedirectToLogin.html": {
    "href": "api/Ecommerce.UI.Pages.Security.RedirectToLogin.html",
    "title": "Class RedirectToLogin",
    "keywords": "Class RedirectToLogin Namespace Ecommerce.UI.Pages.Security Assembly Ecommerce.UI.dll public class RedirectToLogin : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase RedirectToLogin Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder OnInitializedAsync() Method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Override this method if you will perform an asynchronous operation and want the component to refresh when that operation is completed. protected override Task OnInitializedAsync() Returns Task A Task representing any asynchronous operation."
  },
  "api/Ecommerce.UI.Pages.Security.Register.html": {
    "href": "api/Ecommerce.UI.Pages.Security.Register.html",
    "title": "Class Register",
    "keywords": "Class Register Namespace Ecommerce.UI.Pages.Security Assembly Ecommerce.UI.dll [Route(\"/Register\")] public class Register : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase Register Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties NavigationManager [Inject] public NavigationManager NavigationManager { get; set; } Property Value NavigationManager SecurityService [Inject] public ISecurityService SecurityService { get; set; } Property Value ISecurityService ToastService [Inject] public IToastService ToastService { get; set; } Property Value IToastService Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Ecommerce.UI.Pages.Security.html": {
    "href": "api/Ecommerce.UI.Pages.Security.html",
    "title": "Namespace Ecommerce.UI.Pages.Security",
    "keywords": "Namespace Ecommerce.UI.Pages.Security Classes ConfirmEmail Login Logout RedirectToLogin Register"
  },
  "api/Ecommerce.UI.Pages.html": {
    "href": "api/Ecommerce.UI.Pages.html",
    "title": "Namespace Ecommerce.UI.Pages",
    "keywords": "Namespace Ecommerce.UI.Pages Classes Cart Categories Index OrderDetail Orders ProductDetail Products Profile"
  },
  "api/Ecommerce.UI.Security.AuthHeaderHandler.html": {
    "href": "api/Ecommerce.UI.Security.AuthHeaderHandler.html",
    "title": "Class AuthHeaderHandler",
    "keywords": "Class AuthHeaderHandler Namespace Ecommerce.UI.Security Assembly Ecommerce.UI.dll public class AuthHeaderHandler : DelegatingHandler, IDisposable Inheritance object HttpMessageHandler DelegatingHandler AuthHeaderHandler Implements IDisposable Inherited Members DelegatingHandler.Dispose(bool) DelegatingHandler.Send(HttpRequestMessage, CancellationToken) DelegatingHandler.InnerHandler HttpMessageHandler.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthHeaderHandler(ILocalStorageService, IConfiguration) public AuthHeaderHandler(ILocalStorageService localStorageService, IConfiguration configuration) Parameters localStorageService ILocalStorageService configuration IConfiguration Methods SendAsync(HttpRequestMessage, CancellationToken) Sends an HTTP request to the inner handler to send to the server as an asynchronous operation. protected override Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) Parameters request HttpRequestMessage The HTTP request message to send to the server. cancellationToken CancellationToken A cancellation token to cancel operation. Returns Task<HttpResponseMessage> The task object representing the asynchronous operation. Exceptions ArgumentNullException The request was null."
  },
  "api/Ecommerce.UI.Security.AuthStateProvider.html": {
    "href": "api/Ecommerce.UI.Security.AuthStateProvider.html",
    "title": "Class AuthStateProvider",
    "keywords": "Class AuthStateProvider Namespace Ecommerce.UI.Security Assembly Ecommerce.UI.dll public class AuthStateProvider : AuthenticationStateProvider Inheritance object AuthenticationStateProvider AuthStateProvider Inherited Members AuthenticationStateProvider.NotifyAuthenticationStateChanged(Task<AuthenticationState>) AuthenticationStateProvider.AuthenticationStateChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthStateProvider(ILocalStorageService, IConfiguration) public AuthStateProvider(ILocalStorageService localStorageService, IConfiguration configuration) Parameters localStorageService ILocalStorageService configuration IConfiguration Methods GetAuthenticationStateAsync() Asynchronously gets an AuthenticationState that describes the current user. public override Task<AuthenticationState> GetAuthenticationStateAsync() Returns Task<AuthenticationState> A task that, when resolved, gives an AuthenticationState instance that describes the current user. NotifyUserAuthentication(string) public void NotifyUserAuthentication(string token) Parameters token string NotifyUserLogout() public void NotifyUserLogout()"
  },
  "api/Ecommerce.UI.Security.JwtParser.html": {
    "href": "api/Ecommerce.UI.Security.JwtParser.html",
    "title": "Class JwtParser",
    "keywords": "Class JwtParser Namespace Ecommerce.UI.Security Assembly Ecommerce.UI.dll public class JwtParser Inheritance object JwtParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ParseClaimsFromJwt(string) public static IEnumerable<Claim> ParseClaimsFromJwt(string jwt) Parameters jwt string Returns IEnumerable<Claim>"
  },
  "api/Ecommerce.UI.Security.LoginResponse.html": {
    "href": "api/Ecommerce.UI.Security.LoginResponse.html",
    "title": "Class LoginResponse",
    "keywords": "Class LoginResponse Namespace Ecommerce.UI.Security Assembly Ecommerce.UI.dll public class LoginResponse Inheritance object LoginResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsSuccessful public bool IsSuccessful { get; set; } Property Value bool Message public string? Message { get; set; } Property Value string TwoFactorToken public string? TwoFactorToken { get; set; } Property Value string"
  },
  "api/Ecommerce.UI.Security.html": {
    "href": "api/Ecommerce.UI.Security.html",
    "title": "Namespace Ecommerce.UI.Security",
    "keywords": "Namespace Ecommerce.UI.Security Classes AuthHeaderHandler AuthStateProvider JwtParser LoginResponse"
  },
  "api/Ecommerce.UI.ServiceRegistration.html": {
    "href": "api/Ecommerce.UI.ServiceRegistration.html",
    "title": "Class ServiceRegistration",
    "keywords": "Class ServiceRegistration Namespace Ecommerce.UI Assembly Ecommerce.UI.dll public static class ServiceRegistration Inheritance object ServiceRegistration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddProjectServices(IServiceCollection, IConfiguration) public static void AddProjectServices(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection configuration IConfiguration"
  },
  "api/Ecommerce.UI.Services.CartService.html": {
    "href": "api/Ecommerce.UI.Services.CartService.html",
    "title": "Class CartService",
    "keywords": "Class CartService Namespace Ecommerce.UI.Services Assembly Ecommerce.UI.dll public class CartService : ICartService Inheritance object CartService Implements ICartService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CartService(ICartApiService) public CartService(ICartApiService cartApiService) Parameters cartApiService ICartApiService Methods AddItemToCart(CartItemDto) public Task<CreateCartItemResponse> AddItemToCart(CartItemDto cartItem) Parameters cartItem CartItemDto Returns Task<CreateCartItemResponse> ClearCart(Guid) public Task<DeleteUserCartItemsResponse> ClearCart(Guid userId) Parameters userId Guid Returns Task<DeleteUserCartItemsResponse> GetItemsInCart(Guid) public Task<GetUserCartItemsResponse> GetItemsInCart(Guid userId) Parameters userId Guid Returns Task<GetUserCartItemsResponse> RemoveItemFromCart(CartItemDto) public Task<DeleteCartItemResponse> RemoveItemFromCart(CartItemDto cartItem) Parameters cartItem CartItemDto Returns Task<DeleteCartItemResponse> UpdateItemInCart(CartItemDto) public Task<UpdateCartItemResponse> UpdateItemInCart(CartItemDto cartItem) Parameters cartItem CartItemDto Returns Task<UpdateCartItemResponse>"
  },
  "api/Ecommerce.UI.Services.CategoryService.html": {
    "href": "api/Ecommerce.UI.Services.CategoryService.html",
    "title": "Class CategoryService",
    "keywords": "Class CategoryService Namespace Ecommerce.UI.Services Assembly Ecommerce.UI.dll public class CategoryService : ICategoryService Inheritance object CategoryService Implements ICategoryService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CategoryService(ICategoryApiService) public CategoryService(ICategoryApiService categoryApiService) Parameters categoryApiService ICategoryApiService Methods GetAllCategories() public Task<GetAllCategoriesResponse> GetAllCategories() Returns Task<GetAllCategoriesResponse>"
  },
  "api/Ecommerce.UI.Services.OrderService.html": {
    "href": "api/Ecommerce.UI.Services.OrderService.html",
    "title": "Class OrderService",
    "keywords": "Class OrderService Namespace Ecommerce.UI.Services Assembly Ecommerce.UI.dll public class OrderService : IOrderService Inheritance object OrderService Implements IOrderService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrderService(IOrderApiService) public OrderService(IOrderApiService orderApiService) Parameters orderApiService IOrderApiService Methods CreateOrder(IEnumerable<CartItemDto>) public Task<CreateOrderResponse> CreateOrder(IEnumerable<CartItemDto> cartItems) Parameters cartItems IEnumerable<CartItemDto> Returns Task<CreateOrderResponse> GetOrderAfterSuccessfulCheckout(int) public Task<GetOrderAfterSuccessfulCheckoutResponse> GetOrderAfterSuccessfulCheckout(int orderId) Parameters orderId int Returns Task<GetOrderAfterSuccessfulCheckoutResponse> GetOrderById(int) public Task<GetOrderByIdResponse> GetOrderById(int orderId) Parameters orderId int Returns Task<GetOrderByIdResponse> GetUserOrders(Guid) public Task<GetAllOrdersByUserIdResponse> GetUserOrders(Guid userId) Parameters userId Guid Returns Task<GetAllOrdersByUserIdResponse> UpdateOrder(OrderDto) public Task<UpdateOrderResponse> UpdateOrder(OrderDto orderDto) Parameters orderDto OrderDto Returns Task<UpdateOrderResponse>"
  },
  "api/Ecommerce.UI.Services.ProductService.html": {
    "href": "api/Ecommerce.UI.Services.ProductService.html",
    "title": "Class ProductService",
    "keywords": "Class ProductService Namespace Ecommerce.UI.Services Assembly Ecommerce.UI.dll public class ProductService : IProductService Inheritance object ProductService Implements IProductService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProductService(IProductApiService) public ProductService(IProductApiService productApiService) Parameters productApiService IProductApiService Methods GetAllProducts(int) public Task<GetAllProductsByCategoryIdResponse> GetAllProducts(int categoryId) Parameters categoryId int Returns Task<GetAllProductsByCategoryIdResponse> GetProductById(int) public Task<GetProductByIdResponse> GetProductById(int productId) Parameters productId int Returns Task<GetProductByIdResponse>"
  },
  "api/Ecommerce.UI.Services.ReviewService.html": {
    "href": "api/Ecommerce.UI.Services.ReviewService.html",
    "title": "Class ReviewService",
    "keywords": "Class ReviewService Namespace Ecommerce.UI.Services Assembly Ecommerce.UI.dll public class ReviewService : IReviewService Inheritance object ReviewService Implements IReviewService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ReviewService(IReviewApiService) public ReviewService(IReviewApiService reviewApiService) Parameters reviewApiService IReviewApiService Methods GetUserReview(string, int) public Task<GetUserReviewForProductResponse> GetUserReview(string userName, int productId) Parameters userName string productId int Returns Task<GetUserReviewForProductResponse> RemoveReview(ReviewDto) public Task<DeleteReviewResponse> RemoveReview(ReviewDto review) Parameters review ReviewDto Returns Task<DeleteReviewResponse> SubmitReview(ReviewDto) public Task<CreateReviewResponse> SubmitReview(ReviewDto review) Parameters review ReviewDto Returns Task<CreateReviewResponse> UpdateReview(ReviewDto) public Task<UpdateReviewResponse> UpdateReview(ReviewDto review) Parameters review ReviewDto Returns Task<UpdateReviewResponse>"
  },
  "api/Ecommerce.UI.Services.SecurityService.html": {
    "href": "api/Ecommerce.UI.Services.SecurityService.html",
    "title": "Class SecurityService",
    "keywords": "Class SecurityService Namespace Ecommerce.UI.Services Assembly Ecommerce.UI.dll public class SecurityService : ISecurityService Inheritance object SecurityService Implements ISecurityService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SecurityService(ISecurityApiService, ILocalStorageService, IConfiguration, AuthenticationStateProvider) public SecurityService(ISecurityApiService securityApiService, ILocalStorageService localStorageService, IConfiguration configuration, AuthenticationStateProvider authenticationStateProvider) Parameters securityApiService ISecurityApiService localStorageService ILocalStorageService configuration IConfiguration authenticationStateProvider AuthenticationStateProvider Methods ConfirmUserEmail(string?, string?) public Task<ConfirmEmailResponse> ConfirmUserEmail(string? userId, string? emailToken) Parameters userId string emailToken string Returns Task<ConfirmEmailResponse> Login(AuthenticationRequest) public Task<LoginResponse> Login(AuthenticationRequest authenticationRequest) Parameters authenticationRequest AuthenticationRequest Returns Task<LoginResponse> Logout(string) public Task<bool> Logout(string userName) Parameters userName string Returns Task<bool> RegisterUser(CreateUserRequest) public Task<CreateUserResponse> RegisterUser(CreateUserRequest createUserRequest) Parameters createUserRequest CreateUserRequest Returns Task<CreateUserResponse> UpdatePassword(string, string, string) public Task<UpdatePasswordResponse> UpdatePassword(string username, string currentPassword, string newPassword) Parameters username string currentPassword string newPassword string Returns Task<UpdatePasswordResponse> UpdateUser(UpdateEcommerceUserRequest) public Task<UpdateEcommerceUserResponse> UpdateUser(UpdateEcommerceUserRequest updateUserRequest) Parameters updateUserRequest UpdateEcommerceUserRequest Returns Task<UpdateEcommerceUserResponse>"
  },
  "api/Ecommerce.UI.Services.html": {
    "href": "api/Ecommerce.UI.Services.html",
    "title": "Namespace Ecommerce.UI.Services",
    "keywords": "Namespace Ecommerce.UI.Services Classes CartService CategoryService OrderService ProductService ReviewService SecurityService"
  },
  "api/Ecommerce.UI.Shared.MainLayout.html": {
    "href": "api/Ecommerce.UI.Shared.MainLayout.html",
    "title": "Class MainLayout",
    "keywords": "Class MainLayout Namespace Ecommerce.UI.Shared Assembly Ecommerce.UI.dll public class MainLayout : LayoutComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase LayoutComponentBase MainLayout Implements IComponent IHandleEvent IHandleAfterRender Inherited Members LayoutComponentBase.SetParametersAsync(ParameterView) LayoutComponentBase.Body ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Ecommerce.UI.Shared.NavMenu.html": {
    "href": "api/Ecommerce.UI.Shared.NavMenu.html",
    "title": "Class NavMenu",
    "keywords": "Class NavMenu Namespace Ecommerce.UI.Shared Assembly Ecommerce.UI.dll public class NavMenu : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase NavMenu Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Ecommerce.UI.Shared.html": {
    "href": "api/Ecommerce.UI.Shared.html",
    "title": "Namespace Ecommerce.UI.Shared",
    "keywords": "Namespace Ecommerce.UI.Shared Classes MainLayout NavMenu"
  },
  "api/Ecommerce.UI._Imports.html": {
    "href": "api/Ecommerce.UI._Imports.html",
    "title": "Class _Imports",
    "keywords": "Class _Imports Namespace Ecommerce.UI Assembly Ecommerce.UI.dll public class _Imports : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Inheritance object ComponentBase _Imports Implements IComponent IHandleEvent IHandleAfterRender Inherited Members ComponentBase.OnInitialized() ComponentBase.OnInitializedAsync() ComponentBase.OnParametersSet() ComponentBase.OnParametersSetAsync() ComponentBase.StateHasChanged() ComponentBase.ShouldRender() ComponentBase.OnAfterRender(bool) ComponentBase.OnAfterRenderAsync(bool) ComponentBase.InvokeAsync(Action) ComponentBase.InvokeAsync(Func<Task>) ComponentBase.DispatchExceptionAsync(Exception) ComponentBase.SetParametersAsync(ParameterView) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildRenderTree(RenderTreeBuilder) Renders the component to the supplied RenderTreeBuilder. protected override void BuildRenderTree(RenderTreeBuilder __builder) Parameters __builder RenderTreeBuilder"
  },
  "api/Ecommerce.UI.html": {
    "href": "api/Ecommerce.UI.html",
    "title": "Namespace Ecommerce.UI",
    "keywords": "Namespace Ecommerce.UI Classes App ServiceRegistration _Imports"
  },
  "api/Ecommerce.UnitTests.ApplicationTests.CartItemTests.html": {
    "href": "api/Ecommerce.UnitTests.ApplicationTests.CartItemTests.html",
    "title": "Class CartItemTests",
    "keywords": "Class CartItemTests Namespace Ecommerce.UnitTests.ApplicationTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class CartItemTests Inheritance object CartItemTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateCartItemCommandHandler_WhenSqlFailsToCreate_ReturnsFailedResponse() [Test] public Task CreateCartItemCommandHandler_WhenSqlFailsToCreate_ReturnsFailedResponse() Returns Task CreateCartItemCommandHandler_WithCartItemAlreadyExists_ReturnsFailedResponse() [Test] public Task CreateCartItemCommandHandler_WithCartItemAlreadyExists_ReturnsFailedResponse() Returns Task CreateCartItemCommandHandler_WithNullCartItemDto_ReturnsFailedResponse() [Test] public Task CreateCartItemCommandHandler_WithNullCartItemDto_ReturnsFailedResponse() Returns Task CreateCartItemCommandHandler_WithNullOrEmptyUserName_ReturnsFailedResponse() [Test] public Task CreateCartItemCommandHandler_WithNullOrEmptyUserName_ReturnsFailedResponse() Returns Task CreateCartItemCommandHandler_WithProductNotFound_ReturnsFailedResponse() [Test] public Task CreateCartItemCommandHandler_WithProductNotFound_ReturnsFailedResponse() Returns Task CreateCartItemCommandHandler_WithQuantityLessThanOne_ReturnsFailedResponse() [Test] public Task CreateCartItemCommandHandler_WithQuantityLessThanOne_ReturnsFailedResponse() Returns Task CreateCartItemCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccessResponse() [Test] public Task CreateCartItemCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccessResponse() Returns Task DeleteCartItemCommandHandler_WhenSqlFailsToDelete_ReturnsFailedResponse() [Test] public Task DeleteCartItemCommandHandler_WhenSqlFailsToDelete_ReturnsFailedResponse() Returns Task DeleteCartItemCommandHandler_WithNullCartItemDto_ReturnsFailedResponse() [Test] public Task DeleteCartItemCommandHandler_WithNullCartItemDto_ReturnsFailedResponse() Returns Task DeleteCartItemCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccessResponse() [Test] public Task DeleteCartItemCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccessResponse() Returns Task DeleteUserCartItemsCommandHandler_WhenSqlFailsToDelete_ReturnsFailedResponse() [Test] public Task DeleteUserCartItemsCommandHandler_WhenSqlFailsToDelete_ReturnsFailedResponse() Returns Task DeleteUserCartItemsCommandHandler_WithEmptyUserId_ReturnsFailedResponse() [Test] public Task DeleteUserCartItemsCommandHandler_WithEmptyUserId_ReturnsFailedResponse() Returns Task DeleteUserCartItemsCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccessResponse() [Test] public Task DeleteUserCartItemsCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccessResponse() Returns Task GetUserCartItemsQueryHandler_WhenSqlReturnsEmptyList_ReturnsSuccessResponse() [Test] public Task GetUserCartItemsQueryHandler_WhenSqlReturnsEmptyList_ReturnsSuccessResponse() Returns Task GetUserCartItemsQueryHandler_WhenSqlReturnsNull_ReturnsFailedResponse() [Test] public Task GetUserCartItemsQueryHandler_WhenSqlReturnsNull_ReturnsFailedResponse() Returns Task GetUserCartItemsQueryHandler_WithEmptyUserId_ReturnsFailedResponse() [Test] public Task GetUserCartItemsQueryHandler_WithEmptyUserId_ReturnsFailedResponse() Returns Task GetUserCartItemsQueryHandler_WithValidRequestAndWithoutErrors_ReturnsSuccessResponse() [Test] public Task GetUserCartItemsQueryHandler_WithValidRequestAndWithoutErrors_ReturnsSuccessResponse() Returns Task Setup() [SetUp] public void Setup() UpdateCartItemCommandHandler_WhenSqlFailsToUpdate_ReturnsFailedResponse() [Test] public Task UpdateCartItemCommandHandler_WhenSqlFailsToUpdate_ReturnsFailedResponse() Returns Task UpdateCartItemCommandHandler_WithCartItemNotFound_ReturnsFailedResponse() [Test] public Task UpdateCartItemCommandHandler_WithCartItemNotFound_ReturnsFailedResponse() Returns Task UpdateCartItemCommandHandler_WithNullCartItemDto_ReturnsFailedResponse() [Test] public Task UpdateCartItemCommandHandler_WithNullCartItemDto_ReturnsFailedResponse() Returns Task UpdateCartItemCommandHandler_WithNullOrEmptyUserName_ReturnsFailedResponse() [Test] public Task UpdateCartItemCommandHandler_WithNullOrEmptyUserName_ReturnsFailedResponse() Returns Task UpdateCartItemCommandHandler_WithProductNotFound_ReturnsFailedResponse() [Test] public Task UpdateCartItemCommandHandler_WithProductNotFound_ReturnsFailedResponse() Returns Task UpdateCartItemCommandHandler_WithQuantityLessThanOne_ReturnsFailedResponse() [Test] public Task UpdateCartItemCommandHandler_WithQuantityLessThanOne_ReturnsFailedResponse() Returns Task UpdateCartItemCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccessResponse() [Test] public Task UpdateCartItemCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccessResponse() Returns Task"
  },
  "api/Ecommerce.UnitTests.ApplicationTests.CategoryTests.html": {
    "href": "api/Ecommerce.UnitTests.ApplicationTests.CategoryTests.html",
    "title": "Class CategoryTests",
    "keywords": "Class CategoryTests Namespace Ecommerce.UnitTests.ApplicationTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class CategoryTests Inheritance object CategoryTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateCategoryCommandHandler_WhenNameExceedsMaxLength_ReturnsFailedResponse() [Test] public Task CreateCategoryCommandHandler_WhenNameExceedsMaxLength_ReturnsFailedResponse() Returns Task CreateCategoryCommandHandler_WhenNameIsEmpty_ReturnsFailedResponse() [Test] public Task CreateCategoryCommandHandler_WhenNameIsEmpty_ReturnsFailedResponse() Returns Task CreateCategoryCommandHandler_WhenNameIsNotUnique_ReturnsFailedResponse() [Test] public Task CreateCategoryCommandHandler_WhenNameIsNotUnique_ReturnsFailedResponse() Returns Task CreateCategoryCommandHandler_WhenNameIsNull_ReturnsFailedResponse() [Test] public Task CreateCategoryCommandHandler_WhenNameIsNull_ReturnsFailedResponse() Returns Task CreateCategoryCommandHandler_WhenSqlFailsToCreateCategory_ReturnsFailedResponse() [Test] public Task CreateCategoryCommandHandler_WhenSqlFailsToCreateCategory_ReturnsFailedResponse() Returns Task CreateCategoryCommandHandler_WhenSummaryExceedsMaxLength_ReturnsFailedResponse() [Test] public Task CreateCategoryCommandHandler_WhenSummaryExceedsMaxLength_ReturnsFailedResponse() Returns Task CreateCategoryCommandHandler_WhenSummaryIsEmpty_ReturnsFailedResponse() [Test] public Task CreateCategoryCommandHandler_WhenSummaryIsEmpty_ReturnsFailedResponse() Returns Task CreateCategoryCommandHandler_WhenSummaryIsNull_ReturnsFailedResponse() [Test] public Task CreateCategoryCommandHandler_WhenSummaryIsNull_ReturnsFailedResponse() Returns Task CreateCategoryCommandHandler_WithEmptyDto_ReturnsFailedResponse() [Test] public Task CreateCategoryCommandHandler_WithEmptyDto_ReturnsFailedResponse() Returns Task CreateCategoryCommandHandler_WithEmptyUserName_ReturnsFailedResponse() [Test] public Task CreateCategoryCommandHandler_WithEmptyUserName_ReturnsFailedResponse() Returns Task CreateCategoryCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccessResponse() [Test] public Task CreateCategoryCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccessResponse() Returns Task DeleteCategoryCommandHandler_WhenSqlFailsToDeleteCategory_ReturnsFailedResponse() [Test] public Task DeleteCategoryCommandHandler_WhenSqlFailsToDeleteCategory_ReturnsFailedResponse() Returns Task DeleteCategoryCommandHandler_WithEmptyDto_ReturnsFailedResponse() [Test] public Task DeleteCategoryCommandHandler_WithEmptyDto_ReturnsFailedResponse() Returns Task DeleteCategoryCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccessResponse() [Test] public Task DeleteCategoryCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccessResponse() Returns Task GetAllCategoriesQueryHandler_WhenNoCategoriesFound_ReturnsFailedResponse() [Test] public Task GetAllCategoriesQueryHandler_WhenNoCategoriesFound_ReturnsFailedResponse() Returns Task GetAllCategoriesQueryHandler_WithValidRequestAndWithoutErrors_ReturnsSuccessResponse() [Test] public Task GetAllCategoriesQueryHandler_WithValidRequestAndWithoutErrors_ReturnsSuccessResponse() Returns Task GetCategoryByIdQueryHandler_WhenCategoryNotFound_ReturnsFailedResponse() [Test] public Task GetCategoryByIdQueryHandler_WhenCategoryNotFound_ReturnsFailedResponse() Returns Task GetCategoryByIdQueryHandler_WithValidRequestAndWithoutErrors_ReturnsSuccessResponse() [Test] public Task GetCategoryByIdQueryHandler_WithValidRequestAndWithoutErrors_ReturnsSuccessResponse() Returns Task Setup() [SetUp] public void Setup() UpdateCategoryCommandHandler_WhenNameExceedsMaxLength_ReturnsFailedResponse() [Test] public Task UpdateCategoryCommandHandler_WhenNameExceedsMaxLength_ReturnsFailedResponse() Returns Task UpdateCategoryCommandHandler_WhenNameIsEmpty_ReturnsFailedResponse() [Test] public Task UpdateCategoryCommandHandler_WhenNameIsEmpty_ReturnsFailedResponse() Returns Task UpdateCategoryCommandHandler_WhenNameIsNotUnique_ReturnsFailedResponse() [Test] public Task UpdateCategoryCommandHandler_WhenNameIsNotUnique_ReturnsFailedResponse() Returns Task UpdateCategoryCommandHandler_WhenNameIsNull_ReturnsFailedResponse() [Test] public Task UpdateCategoryCommandHandler_WhenNameIsNull_ReturnsFailedResponse() Returns Task UpdateCategoryCommandHandler_WhenSqlFailsToUpdateCategory_ReturnsFailedResponse() [Test] public Task UpdateCategoryCommandHandler_WhenSqlFailsToUpdateCategory_ReturnsFailedResponse() Returns Task UpdateCategoryCommandHandler_WhenSummaryExceedsMaxLength_ReturnsFailedResponse() [Test] public Task UpdateCategoryCommandHandler_WhenSummaryExceedsMaxLength_ReturnsFailedResponse() Returns Task UpdateCategoryCommandHandler_WhenSummaryIsEmpty_ReturnsFailedResponse() [Test] public Task UpdateCategoryCommandHandler_WhenSummaryIsEmpty_ReturnsFailedResponse() Returns Task UpdateCategoryCommandHandler_WhenSummaryIsNull_ReturnsFailedResponse() [Test] public Task UpdateCategoryCommandHandler_WhenSummaryIsNull_ReturnsFailedResponse() Returns Task UpdateCategoryCommandHandler_WithEmptyDto_ReturnsFailedResponse() [Test] public Task UpdateCategoryCommandHandler_WithEmptyDto_ReturnsFailedResponse() Returns Task UpdateCategoryCommandHandler_WithEmptyUserName_ReturnsFailedResponse() [Test] public Task UpdateCategoryCommandHandler_WithEmptyUserName_ReturnsFailedResponse() Returns Task UpdateCategoryCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccessResponse() [Test] public Task UpdateCategoryCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccessResponse() Returns Task"
  },
  "api/Ecommerce.UnitTests.ApplicationTests.EcommerceUserTests.html": {
    "href": "api/Ecommerce.UnitTests.ApplicationTests.EcommerceUserTests.html",
    "title": "Class EcommerceUserTests",
    "keywords": "Class EcommerceUserTests Namespace Ecommerce.UnitTests.ApplicationTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class EcommerceUserTests Inheritance object EcommerceUserTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConfirmEmailCommandHandler_WhenServiceReturnsResponse_ShouldReturnSameResponse() [Test] public Task ConfirmEmailCommandHandler_WhenServiceReturnsResponse_ShouldReturnSameResponse() Returns Task RegisterEcommerceUserCommandHandler_WhenServiceReturnsFailedResponse_ShouldReturnSameResponse() [Test] public Task RegisterEcommerceUserCommandHandler_WhenServiceReturnsFailedResponse_ShouldReturnSameResponse() Returns Task RegisterEcommerceUserCommandHandler_WhenServiceReturnsNoToken_ShouldReturnSameResponse() [Test] public Task RegisterEcommerceUserCommandHandler_WhenServiceReturnsNoToken_ShouldReturnSameResponse() Returns Task RegisterEcommerceUserCommandHandler_WhenServiceReturnsResponse_ShouldReturnSameResponse() [Test] public Task RegisterEcommerceUserCommandHandler_WhenServiceReturnsResponse_ShouldReturnSameResponse() Returns Task RegisterEcommerceUserCommandHandler_WhenUserIdNotFound_ShouldReturnFailedResponse() [Test] public Task RegisterEcommerceUserCommandHandler_WhenUserIdNotFound_ShouldReturnFailedResponse() Returns Task Setup() [SetUp] public void Setup() UpdateEcommerceUserCommandHandler_WhenUpdateFails_ReturnsFailedResponse() [Test] public Task UpdateEcommerceUserCommandHandler_WhenUpdateFails_ReturnsFailedResponse() Returns Task UpdateEcommerceUserCommandHandler_WhenUserNotFound_ReturnsFailedResponse() [Test] public Task UpdateEcommerceUserCommandHandler_WhenUserNotFound_ReturnsFailedResponse() Returns Task UpdateEcommerceUserCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task UpdateEcommerceUserCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task UpdateEcommerceUserCommandHandler_WithoutEmail_ReturnsFailedResponse() [Test] public Task UpdateEcommerceUserCommandHandler_WithoutEmail_ReturnsFailedResponse() Returns Task UpdateEcommerceUserCommandHandler_WithoutFirstName_ReturnsFailedResponse() [Test] public Task UpdateEcommerceUserCommandHandler_WithoutFirstName_ReturnsFailedResponse() Returns Task UpdateEcommerceUserCommandHandler_WithoutLastName_ReturnsFailedResponse() [Test] public Task UpdateEcommerceUserCommandHandler_WithoutLastName_ReturnsFailedResponse() Returns Task UpdateEcommerceUserCommandHandler_WithoutUserName_ReturnsFailedResponse() [Test] public Task UpdateEcommerceUserCommandHandler_WithoutUserName_ReturnsFailedResponse() Returns Task UpdatePasswordCommandHandler_WhenUserNotFound_ReturnsFailedResponse() [Test] public Task UpdatePasswordCommandHandler_WhenUserNotFound_ReturnsFailedResponse() Returns Task UpdatePasswordCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task UpdatePasswordCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task UpdatePasswordCommandHandler_WithoutCurrentPassword_ReturnsFailedResponse() [Test] public Task UpdatePasswordCommandHandler_WithoutCurrentPassword_ReturnsFailedResponse() Returns Task UpdatePasswordCommandHandler_WithoutNewPassword_ReturnsFailedResponse() [Test] public Task UpdatePasswordCommandHandler_WithoutNewPassword_ReturnsFailedResponse() Returns Task UpdatePasswordCommandHandler_WithoutUserName_ReturnsFailedResponse() [Test] public Task UpdatePasswordCommandHandler_WithoutUserName_ReturnsFailedResponse() Returns Task"
  },
  "api/Ecommerce.UnitTests.ApplicationTests.OrderItemTests.html": {
    "href": "api/Ecommerce.UnitTests.ApplicationTests.OrderItemTests.html",
    "title": "Class OrderItemTests",
    "keywords": "Class OrderItemTests Namespace Ecommerce.UnitTests.ApplicationTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class OrderItemTests Inheritance object OrderItemTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateOrderItemCommandHandler_WhenOrderDoesNotExist_ReturnsFailedResponse() [Test] public Task CreateOrderItemCommandHandler_WhenOrderDoesNotExist_ReturnsFailedResponse() Returns Task CreateOrderItemCommandHandler_WhenPriceIsLessThanOne_ReturnsFailedResponse() [Test] public Task CreateOrderItemCommandHandler_WhenPriceIsLessThanOne_ReturnsFailedResponse() Returns Task CreateOrderItemCommandHandler_WhenQuantityIsLessThanOne_ReturnsFailedResponse() [Test] public Task CreateOrderItemCommandHandler_WhenQuantityIsLessThanOne_ReturnsFailedResponse() Returns Task CreateOrderItemCommandHandler_WhenSqlOperationFails_ReturnsFailedResponse() [Test] public Task CreateOrderItemCommandHandler_WhenSqlOperationFails_ReturnsFailedResponse() Returns Task CreateOrderItemCommandHandler_WhenUsernameIsNull_ReturnsFailedResponse() [Test] public Task CreateOrderItemCommandHandler_WhenUsernameIsNull_ReturnsFailedResponse() Returns Task CreateOrderItemCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task CreateOrderItemCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task GetAllOrderItemsByOrderIdQueryHandler_WhenNoOrderItemsFound_ReturnsFailedResponse() [Test] public Task GetAllOrderItemsByOrderIdQueryHandler_WhenNoOrderItemsFound_ReturnsFailedResponse() Returns Task GetAllOrderItemsByOrderIdQueryHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task GetAllOrderItemsByOrderIdQueryHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task Setup() [SetUp] public void Setup()"
  },
  "api/Ecommerce.UnitTests.ApplicationTests.OrderTests.html": {
    "href": "api/Ecommerce.UnitTests.ApplicationTests.OrderTests.html",
    "title": "Class OrderTests",
    "keywords": "Class OrderTests Namespace Ecommerce.UnitTests.ApplicationTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class OrderTests Inheritance object OrderTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddPayPalRequestIdCommandHandler_InvalidOrderId_ReturnsFalse() [Test] public Task AddPayPalRequestIdCommandHandler_InvalidOrderId_ReturnsFalse() Returns Task AddPayPalRequestIdCommandHandler_UpdateFails_ReturnsFalse() [Test] public Task AddPayPalRequestIdCommandHandler_UpdateFails_ReturnsFalse() Returns Task AddPayPalRequestIdCommandHandler_ValidRequestAndWithoutErrors_ReturnsTrue() [Test] public Task AddPayPalRequestIdCommandHandler_ValidRequestAndWithoutErrors_ReturnsTrue() Returns Task CreateOrderCommandHandler_ValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task CreateOrderCommandHandler_ValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task CreateOrderCommandHandler_WhenOrderCreationFails_ReturnsFailedResponse() [Test] public Task CreateOrderCommandHandler_WhenOrderCreationFails_ReturnsFailedResponse() Returns Task CreateOrderCommandHandler_WhenOrderItemCreationFails_ReturnsFailedResponse() [Test] public Task CreateOrderCommandHandler_WhenOrderItemCreationFails_ReturnsFailedResponse() Returns Task CreateOrderCommandHandler_WhenOrderTotalIsNotGreaterThanZero_ReturnsFailedResponse() [Test] public Task CreateOrderCommandHandler_WhenOrderTotalIsNotGreaterThanZero_ReturnsFailedResponse() Returns Task CreateOrderCommandHandler_WhenProductIsNotFound_ReturnsFailedResponse() [Test] public Task CreateOrderCommandHandler_WhenProductIsNotFound_ReturnsFailedResponse() Returns Task CreateOrderCommandHandler_WithNoCartItems_ReturnsFailedResponse() [Test] public Task CreateOrderCommandHandler_WithNoCartItems_ReturnsFailedResponse() Returns Task CreateOrderCommandHandler_WithNoUserId_ReturnsFailedResponse() [Test] public Task CreateOrderCommandHandler_WithNoUserId_ReturnsFailedResponse() Returns Task CreateOrderCommandHandler_WithNoUserName_ReturnsFailedResponse() [Test] public Task CreateOrderCommandHandler_WithNoUserName_ReturnsFailedResponse() Returns Task DeleteOrderCommandHandler_WhenDeleteFails_ReturnsFailedResponse() [Test] public Task DeleteOrderCommandHandler_WhenDeleteFails_ReturnsFailedResponse() Returns Task DeleteOrderCommandHandler_WithNullOrder_ReturnsFailedResponse() [Test] public Task DeleteOrderCommandHandler_WithNullOrder_ReturnsFailedResponse() Returns Task DeleteOrderCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task DeleteOrderCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task GetAllOrdersByUserIdQueryHandler_WhenErrorOccurs_ReturnsFailedResponse() [Test] public Task GetAllOrdersByUserIdQueryHandler_WhenErrorOccurs_ReturnsFailedResponse() Returns Task GetAllOrdersByUserIdQueryHandler_WithInvalidUserId_ReturnsFailedResponse() [Test] public Task GetAllOrdersByUserIdQueryHandler_WithInvalidUserId_ReturnsFailedResponse() Returns Task GetAllOrdersByUserIdQueryHandler_WithNoOrdersFound_ReturnsSuccessWithEmptyListResponse() [Test] public Task GetAllOrdersByUserIdQueryHandler_WithNoOrdersFound_ReturnsSuccessWithEmptyListResponse() Returns Task GetAllOrdersByUserIdQueryHandler_WithOrdersInCreatedOrPendingStatus_ReturnsSuccessWithEmptyListResponse() [Test] public Task GetAllOrdersByUserIdQueryHandler_WithOrdersInCreatedOrPendingStatus_ReturnsSuccessWithEmptyListResponse() Returns Task GetAllOrdersByUserIdQueryHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task GetAllOrdersByUserIdQueryHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task GetOrderAfterSuccessfulCheckoutQueryHandler_WhenUpdateFails_ReturnsFailedResponse() [Test] public Task GetOrderAfterSuccessfulCheckoutQueryHandler_WhenUpdateFails_ReturnsFailedResponse() Returns Task GetOrderAfterSuccessfulCheckoutQueryHandler_WithInvalidOrderId_ReturnsFailedResponse() [Test] public Task GetOrderAfterSuccessfulCheckoutQueryHandler_WithInvalidOrderId_ReturnsFailedResponse() Returns Task GetOrderAfterSuccessfulCheckoutQueryHandler_WithOrderAlreadyProcessed_ReturnsFailedResponse() [Test] public Task GetOrderAfterSuccessfulCheckoutQueryHandler_WithOrderAlreadyProcessed_ReturnsFailedResponse() Returns Task GetOrderAfterSuccessfulCheckoutQueryHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task GetOrderAfterSuccessfulCheckoutQueryHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task GetOrderByIdQueryHandler_WhenOrderItemsAreNotFound_ReturnsFailedResponse() [Test] public Task GetOrderByIdQueryHandler_WhenOrderItemsAreNotFound_ReturnsFailedResponse() Returns Task GetOrderByIdQueryHandler_WithInvalidOrderId_ReturnsFailedResponse() [Test] public Task GetOrderByIdQueryHandler_WithInvalidOrderId_ReturnsFailedResponse() Returns Task GetOrderByIdQueryHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task GetOrderByIdQueryHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task Setup() [SetUp] public void Setup() UpdateOrderCommandHandler_WhenOrderStatusIsNotInEnum_ReturnsFailedResponse() [Test] public Task UpdateOrderCommandHandler_WhenOrderStatusIsNotInEnum_ReturnsFailedResponse() Returns Task UpdateOrderCommandHandler_WhenOrderTotalIsNotGeaterThanZero_ReturnsFailedResponse() [Test] public Task UpdateOrderCommandHandler_WhenOrderTotalIsNotGeaterThanZero_ReturnsFailedResponse() Returns Task UpdateOrderCommandHandler_WhenUpdateFails_ReturnsFailedResponse() [Test] public Task UpdateOrderCommandHandler_WhenUpdateFails_ReturnsFailedResponse() Returns Task UpdateOrderCommandHandler_WithEmptyUserName_ReturnsFailedResponse() [Test] public Task UpdateOrderCommandHandler_WithEmptyUserName_ReturnsFailedResponse() Returns Task UpdateOrderCommandHandler_WithNullOrder_ReturnsFailedResponse() [Test] public Task UpdateOrderCommandHandler_WithNullOrder_ReturnsFailedResponse() Returns Task UpdateOrderCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task UpdateOrderCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task"
  },
  "api/Ecommerce.UnitTests.ApplicationTests.PayPalTests.html": {
    "href": "api/Ecommerce.UnitTests.ApplicationTests.PayPalTests.html",
    "title": "Class PayPalTests",
    "keywords": "Class PayPalTests Namespace Ecommerce.UnitTests.ApplicationTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class PayPalTests Inheritance object PayPalTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CancelPayPalOrderCommandHandler_WhenOrderDeleteFails_ReturnsFalse() [Test] public Task CancelPayPalOrderCommandHandler_WhenOrderDeleteFails_ReturnsFalse() Returns Task CancelPayPalOrderCommandHandler_WhenOrderDoesNotExist_ReturnsFalse() [Test] public Task CancelPayPalOrderCommandHandler_WhenOrderDoesNotExist_ReturnsFalse() Returns Task CancelPayPalOrderCommandHandler_WhenOrderExistsAndWithoutErrors_ReturnsTrue() [Test] public Task CancelPayPalOrderCommandHandler_WhenOrderExistsAndWithoutErrors_ReturnsTrue() Returns Task CancelPayPalOrderCommandHandler_WhenReturnKeyDeleteFails_ReturnsFalse() [Test] public Task CancelPayPalOrderCommandHandler_WhenReturnKeyDeleteFails_ReturnsFalse() Returns Task CreatePayPalOrderCommandHandler_WhenOrderHasNoItems_ReturnsFailedResponse() [Test] public Task CreatePayPalOrderCommandHandler_WhenOrderHasNoItems_ReturnsFailedResponse() Returns Task CreatePayPalOrderCommandHandler_WhenPayPalOrderCreationFails_ReturnsFailedResponse() [Test] public Task CreatePayPalOrderCommandHandler_WhenPayPalOrderCreationFails_ReturnsFailedResponse() Returns Task CreatePayPalOrderCommandHandler_WhenReturnKeyCreationFails_ReturnsFailedResponse() [Test] public Task CreatePayPalOrderCommandHandler_WhenReturnKeyCreationFails_ReturnsFailedResponse() Returns Task CreatePayPalOrderCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task CreatePayPalOrderCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task CreatePayPalReturnKeyCommandHandler_WhenOrderDoesNotExist_ReturnsNull() [Test] public Task CreatePayPalReturnKeyCommandHandler_WhenOrderDoesNotExist_ReturnsNull() Returns Task CreatePayPalReturnKeyCommandHandler_WhenOrderExistsAndWithoutErrors_ReturnsReturnKey() [Test] public Task CreatePayPalReturnKeyCommandHandler_WhenOrderExistsAndWithoutErrors_ReturnsReturnKey() Returns Task CreatePayPalReturnKeyCommandHandler_WhenOrderKeyCreationFails_ReturnsNull() [Test] public Task CreatePayPalReturnKeyCommandHandler_WhenOrderKeyCreationFails_ReturnsNull() Returns Task DeletePayPalReturnKeyCommandHandler_WhenOrderKeyDeleteFails_ReturnsFalse() [Test] public Task DeletePayPalReturnKeyCommandHandler_WhenOrderKeyDeleteFails_ReturnsFalse() Returns Task DeletePayPalReturnKeyCommandHandler_WhenOrderKeyDoesNotExist_ReturnsFalse() [Test] public Task DeletePayPalReturnKeyCommandHandler_WhenOrderKeyDoesNotExist_ReturnsFalse() Returns Task DeletePayPalReturnKeyCommandHandler_WhenOrderKeyExistsAndWithoutErrors_ReturnsTrue() [Test] public Task DeletePayPalReturnKeyCommandHandler_WhenOrderKeyExistsAndWithoutErrors_ReturnsTrue() Returns Task GetOrderByReturnKeyQueryHandler_WhenOrderKeyDoesNotExist_ReturnsNull() [Test] public Task GetOrderByReturnKeyQueryHandler_WhenOrderKeyDoesNotExist_ReturnsNull() Returns Task GetOrderByReturnKeyQueryHandler_WhenOrderKeyExistsAndWithoutErrors_ReturnsOrder() [Test] public Task GetOrderByReturnKeyQueryHandler_WhenOrderKeyExistsAndWithoutErrors_ReturnsOrder() Returns Task GetOrderByReturnKeyQueryHandler_WhenOrderLookupFails_ReturnsNull() [Test] public Task GetOrderByReturnKeyQueryHandler_WhenOrderLookupFails_ReturnsNull() Returns Task GetOrderByReturnKeyQueryHandler_WhenReturnKeyIsEmpty_ReturnsNull() [Test] public Task GetOrderByReturnKeyQueryHandler_WhenReturnKeyIsEmpty_ReturnsNull() Returns Task GetOrderByReturnKeyQueryHandler_WhenReturnKeyIsNull_ReturnsNull() [Test] public Task GetOrderByReturnKeyQueryHandler_WhenReturnKeyIsNull_ReturnsNull() Returns Task HandlePayPalSuccessCommandHandler_WhenCartEmptyFails_ReturnsFalse() [Test] public Task HandlePayPalSuccessCommandHandler_WhenCartEmptyFails_ReturnsFalse() Returns Task HandlePayPalSuccessCommandHandler_WhenOrderDoesNotExist_ReturnsFalse() [Test] public Task HandlePayPalSuccessCommandHandler_WhenOrderDoesNotExist_ReturnsFalse() Returns Task HandlePayPalSuccessCommandHandler_WhenOrderUpdateFails_ReturnsFalse() [Test] public Task HandlePayPalSuccessCommandHandler_WhenOrderUpdateFails_ReturnsFalse() Returns Task HandlePayPalSuccessCommandHandler_WhenReturnKeyIsEmpty_ReturnsFalse() [Test] public Task HandlePayPalSuccessCommandHandler_WhenReturnKeyIsEmpty_ReturnsFalse() Returns Task HandlePayPalSuccessCommandHandler_WhenReturnKeyIsNull_ReturnsFalse() [Test] public Task HandlePayPalSuccessCommandHandler_WhenReturnKeyIsNull_ReturnsFalse() Returns Task HandlePayPalSuccessCommandHandler_WithValidRequestAndWithoutErrors_ReturnsTrue() [Test] public Task HandlePayPalSuccessCommandHandler_WithValidRequestAndWithoutErrors_ReturnsTrue() Returns Task Setup() [SetUp] public void Setup()"
  },
  "api/Ecommerce.UnitTests.ApplicationTests.ProductTests.html": {
    "href": "api/Ecommerce.UnitTests.ApplicationTests.ProductTests.html",
    "title": "Class ProductTests",
    "keywords": "Class ProductTests Namespace Ecommerce.UnitTests.ApplicationTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class ProductTests Inheritance object ProductTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateProductCommandHandler_WhenAverageRatingIsLessThanZero_ReturnsFailedResponse() [Test] public Task CreateProductCommandHandler_WhenAverageRatingIsLessThanZero_ReturnsFailedResponse() Returns Task CreateProductCommandHandler_WhenCategoryDoesNotExist_ReturnsFailedResponse() [Test] public Task CreateProductCommandHandler_WhenCategoryDoesNotExist_ReturnsFailedResponse() Returns Task CreateProductCommandHandler_WhenDescriptionExceedsMaxLength_ReturnsFailedResponse() [Test] public Task CreateProductCommandHandler_WhenDescriptionExceedsMaxLength_ReturnsFailedResponse() Returns Task CreateProductCommandHandler_WhenDescriptionIsEmpty_ReturnsFailedResponse() [Test] public Task CreateProductCommandHandler_WhenDescriptionIsEmpty_ReturnsFailedResponse() Returns Task CreateProductCommandHandler_WhenDescriptionIsNull_ReturnsFailedResponse() [Test] public Task CreateProductCommandHandler_WhenDescriptionIsNull_ReturnsFailedResponse() Returns Task CreateProductCommandHandler_WhenNameExceedsMaxLength_ReturnsFailedResponse() [Test] public Task CreateProductCommandHandler_WhenNameExceedsMaxLength_ReturnsFailedResponse() Returns Task CreateProductCommandHandler_WhenNameIsEmpty_ReturnsFailedResponse() [Test] public Task CreateProductCommandHandler_WhenNameIsEmpty_ReturnsFailedResponse() Returns Task CreateProductCommandHandler_WhenNameIsNotUnique_ReturnsFailedResponse() [Test] public Task CreateProductCommandHandler_WhenNameIsNotUnique_ReturnsFailedResponse() Returns Task CreateProductCommandHandler_WhenNameIsNull_ReturnsFailedResponse() [Test] public Task CreateProductCommandHandler_WhenNameIsNull_ReturnsFailedResponse() Returns Task CreateProductCommandHandler_WhenQuantityAvailableIsLessThanZero_ReturnsFailedResponse() [Test] public Task CreateProductCommandHandler_WhenQuantityAvailableIsLessThanZero_ReturnsFailedResponse() Returns Task CreateProductCommandHandler_WhenSqlOperationFails_ReturnsFailedResponse() [Test] public Task CreateProductCommandHandler_WhenSqlOperationFails_ReturnsFailedResponse() Returns Task CreateProductCommandHandler_WithEmptyUserName_ReturnsFailedResponse() [Test] public Task CreateProductCommandHandler_WithEmptyUserName_ReturnsFailedResponse() Returns Task CreateProductCommandHandler_WithNullProduct_ReturnsFailedResponse() [Test] public Task CreateProductCommandHandler_WithNullProduct_ReturnsFailedResponse() Returns Task CreateProductCommandHandler_WithNullUserName_ReturnsFailedResponse() [Test] public Task CreateProductCommandHandler_WithNullUserName_ReturnsFailedResponse() Returns Task CreateProductCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task CreateProductCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task DeleteProductCommandHandler_WhenSqlOperationFails_ReturnsFailedResponse() [Test] public Task DeleteProductCommandHandler_WhenSqlOperationFails_ReturnsFailedResponse() Returns Task DeleteProductCommandHandler_WithNullProduct_ReturnsFailedResponse() [Test] public Task DeleteProductCommandHandler_WithNullProduct_ReturnsFailedResponse() Returns Task DeleteProductCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task DeleteProductCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task GetAllProductsByCategoryIdQueryHandler_WhenNoProductsFound_ReturnsFailedResponse() [Test] public Task GetAllProductsByCategoryIdQueryHandler_WhenNoProductsFound_ReturnsFailedResponse() Returns Task GetAllProductsByCategoryIdQueryHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task GetAllProductsByCategoryIdQueryHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task GetProductByIdQueryHandler_WhenProductDoesNotExist_ReturnsFailedResponse() [Test] public Task GetProductByIdQueryHandler_WhenProductDoesNotExist_ReturnsFailedResponse() Returns Task GetProductByIdQueryHandler_WhenRetrievingReviewsFails_ReturnsSuccessWithoutReviews() [Test] public Task GetProductByIdQueryHandler_WhenRetrievingReviewsFails_ReturnsSuccessWithoutReviews() Returns Task GetProductByIdQueryHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task GetProductByIdQueryHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task Setup() [SetUp] public void Setup() UpdateProductCommandHandler_WhenAverageRatingIsLessThanZero_ReturnsFailedResponse() [Test] public Task UpdateProductCommandHandler_WhenAverageRatingIsLessThanZero_ReturnsFailedResponse() Returns Task UpdateProductCommandHandler_WhenCategoryDoesNotExist_ReturnsFailedResponse() [Test] public Task UpdateProductCommandHandler_WhenCategoryDoesNotExist_ReturnsFailedResponse() Returns Task UpdateProductCommandHandler_WhenDescriptionExceedsMaxLength_ReturnsFailedResponse() [Test] public Task UpdateProductCommandHandler_WhenDescriptionExceedsMaxLength_ReturnsFailedResponse() Returns Task UpdateProductCommandHandler_WhenDescriptionIsEmpty_ReturnsFailedResponse() [Test] public Task UpdateProductCommandHandler_WhenDescriptionIsEmpty_ReturnsFailedResponse() Returns Task UpdateProductCommandHandler_WhenDescriptionIsNull_ReturnsFailedResponse() [Test] public Task UpdateProductCommandHandler_WhenDescriptionIsNull_ReturnsFailedResponse() Returns Task UpdateProductCommandHandler_WhenNameExceedsMaxLength_ReturnsFailedResponse() [Test] public Task UpdateProductCommandHandler_WhenNameExceedsMaxLength_ReturnsFailedResponse() Returns Task UpdateProductCommandHandler_WhenNameIsEmpty_ReturnsFailedResponse() [Test] public Task UpdateProductCommandHandler_WhenNameIsEmpty_ReturnsFailedResponse() Returns Task UpdateProductCommandHandler_WhenNameIsNotUnique_ReturnsFailedResponse() [Test] public Task UpdateProductCommandHandler_WhenNameIsNotUnique_ReturnsFailedResponse() Returns Task UpdateProductCommandHandler_WhenNameIsNull_ReturnsFailedResponse() [Test] public Task UpdateProductCommandHandler_WhenNameIsNull_ReturnsFailedResponse() Returns Task UpdateProductCommandHandler_WhenQuantityAvailableIsLessThanZero_ReturnsFailedResponse() [Test] public Task UpdateProductCommandHandler_WhenQuantityAvailableIsLessThanZero_ReturnsFailedResponse() Returns Task UpdateProductCommandHandler_WhenSqlOperationFails_ReturnsFailedResponse() [Test] public Task UpdateProductCommandHandler_WhenSqlOperationFails_ReturnsFailedResponse() Returns Task UpdateProductCommandHandler_WithEmptyUserName_ReturnsFailedResponse() [Test] public Task UpdateProductCommandHandler_WithEmptyUserName_ReturnsFailedResponse() Returns Task UpdateProductCommandHandler_WithNullProduct_ReturnsFailedResponse() [Test] public Task UpdateProductCommandHandler_WithNullProduct_ReturnsFailedResponse() Returns Task UpdateProductCommandHandler_WithNullUserName_ReturnsFailedResponse() [Test] public Task UpdateProductCommandHandler_WithNullUserName_ReturnsFailedResponse() Returns Task UpdateProductCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task UpdateProductCommandHandler_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task"
  },
  "api/Ecommerce.UnitTests.ApplicationTests.ReviewTests.html": {
    "href": "api/Ecommerce.UnitTests.ApplicationTests.ReviewTests.html",
    "title": "Class ReviewTests",
    "keywords": "Class ReviewTests Namespace Ecommerce.UnitTests.ApplicationTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class ReviewTests Inheritance object ReviewTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateReviewCommandHandler_WhenCommentsExceeds500Characters_ReturnsFailedResponse() [Test] public Task CreateReviewCommandHandler_WhenCommentsExceeds500Characters_ReturnsFailedResponse() Returns Task CreateReviewCommandHandler_WhenCreateFails_ReturnsFailedResponse() [Test] public Task CreateReviewCommandHandler_WhenCreateFails_ReturnsFailedResponse() Returns Task CreateReviewCommandHandler_WhenProductDoesNotExist_ReturnsFailedResponse() [Test] public Task CreateReviewCommandHandler_WhenProductDoesNotExist_ReturnsFailedResponse() Returns Task CreateReviewCommandHandler_WhenReviewExists_ReturnsFailedResponse() [Test] public Task CreateReviewCommandHandler_WhenReviewExists_ReturnsFailedResponse() Returns Task CreateReviewCommandHandler_WhenStarsIsLessThanZero_ReturnsFailedResponse() [Test] public Task CreateReviewCommandHandler_WhenStarsIsLessThanZero_ReturnsFailedResponse() Returns Task CreateReviewCommandHandler_WithEmptyUserName_ReturnsFailedResponse() [Test] public Task CreateReviewCommandHandler_WithEmptyUserName_ReturnsFailedResponse() Returns Task CreateReviewCommandHandler_WithNoReview_ReturnsFailedResponse() [Test] public Task CreateReviewCommandHandler_WithNoReview_ReturnsFailedResponse() Returns Task CreateReviewCommandHandler_WithNullUserName_ReturnsFailedResponse() [Test] public Task CreateReviewCommandHandler_WithNullUserName_ReturnsFailedResponse() Returns Task CreateReviewCommandHandler_WithValidRequestAndNoErrors_ReturnsSuccess() [Test] public Task CreateReviewCommandHandler_WithValidRequestAndNoErrors_ReturnsSuccess() Returns Task DeleteReviewCommandHandler_WhenDeleteFails_ReturnsFailedResponse() [Test] public Task DeleteReviewCommandHandler_WhenDeleteFails_ReturnsFailedResponse() Returns Task DeleteReviewCommandHandler_WithNoReview_ReturnsFailedResponse() [Test] public Task DeleteReviewCommandHandler_WithNoReview_ReturnsFailedResponse() Returns Task DeleteReviewCommandHandler_WithValidRequestAndNoErrors_ReturnsSuccess() [Test] public Task DeleteReviewCommandHandler_WithValidRequestAndNoErrors_ReturnsSuccess() Returns Task GetReviewsForProductQueryHandler_WhenNoReviewsExist_ReturnsFailedResponse() [Test] public Task GetReviewsForProductQueryHandler_WhenNoReviewsExist_ReturnsFailedResponse() Returns Task GetReviewsForProductQueryHandler_WhenSqlReturnsNull_ReturnsFailedResponse() [Test] public Task GetReviewsForProductQueryHandler_WhenSqlReturnsNull_ReturnsFailedResponse() Returns Task GetReviewsForProductQueryHandler_WithValidRequestAndNoErrors_ReturnsSuccess() [Test] public Task GetReviewsForProductQueryHandler_WithValidRequestAndNoErrors_ReturnsSuccess() Returns Task GetUserReviewForProductQueryHandler_WhenSqlReturnsNull_ReturnsFailedResponse() [Test] public Task GetUserReviewForProductQueryHandler_WhenSqlReturnsNull_ReturnsFailedResponse() Returns Task GetUserReviewForProductQueryHandler_WithEmptyUserName_ReturnsFailedResponse() [Test] public Task GetUserReviewForProductQueryHandler_WithEmptyUserName_ReturnsFailedResponse() Returns Task GetUserReviewForProductQueryHandler_WithNoReview_ReturnsSuccessWithNullReviewResponse() [Test] public Task GetUserReviewForProductQueryHandler_WithNoReview_ReturnsSuccessWithNullReviewResponse() Returns Task GetUserReviewForProductQueryHandler_WithNullUserName_ReturnsFailedResponse() [Test] public Task GetUserReviewForProductQueryHandler_WithNullUserName_ReturnsFailedResponse() Returns Task GetUserReviewForProductQueryHandler_WithValidRequestAndNoErrors_ReturnsSuccess() [Test] public Task GetUserReviewForProductQueryHandler_WithValidRequestAndNoErrors_ReturnsSuccess() Returns Task Setup() [SetUp] public void Setup() UpdateReviewCommandHandler_WhenCommentsExceeds500Characters_ReturnsFailedResponse() [Test] public Task UpdateReviewCommandHandler_WhenCommentsExceeds500Characters_ReturnsFailedResponse() Returns Task UpdateReviewCommandHandler_WhenProductDoesNotExist_ReturnsFailedResponse() [Test] public Task UpdateReviewCommandHandler_WhenProductDoesNotExist_ReturnsFailedResponse() Returns Task UpdateReviewCommandHandler_WhenReviewDoesNotExist_ReturnsFailedResponse() [Test] public Task UpdateReviewCommandHandler_WhenReviewDoesNotExist_ReturnsFailedResponse() Returns Task UpdateReviewCommandHandler_WhenStarsIsLessThanZero_ReturnsFailedResponse() [Test] public Task UpdateReviewCommandHandler_WhenStarsIsLessThanZero_ReturnsFailedResponse() Returns Task UpdateReviewCommandHandler_WhenUpdateFails_ReturnsFailedResponse() [Test] public Task UpdateReviewCommandHandler_WhenUpdateFails_ReturnsFailedResponse() Returns Task UpdateReviewCommandHandler_WithEmptyUserName_ReturnsFailedResponse() [Test] public Task UpdateReviewCommandHandler_WithEmptyUserName_ReturnsFailedResponse() Returns Task UpdateReviewCommandHandler_WithNoReview_ReturnsFailedResponse() [Test] public Task UpdateReviewCommandHandler_WithNoReview_ReturnsFailedResponse() Returns Task UpdateReviewCommandHandler_WithNullUserName_ReturnsFailedResponse() [Test] public Task UpdateReviewCommandHandler_WithNullUserName_ReturnsFailedResponse() Returns Task UpdateReviewCommandHandler_WithValidRequestAndNoErrors_ReturnsSuccess() [Test] public Task UpdateReviewCommandHandler_WithValidRequestAndNoErrors_ReturnsSuccess() Returns Task"
  },
  "api/Ecommerce.UnitTests.ApplicationTests.html": {
    "href": "api/Ecommerce.UnitTests.ApplicationTests.html",
    "title": "Namespace Ecommerce.UnitTests.ApplicationTests",
    "keywords": "Namespace Ecommerce.UnitTests.ApplicationTests Classes CartItemTests CategoryTests EcommerceUserTests OrderItemTests OrderTests PayPalTests ProductTests ReviewTests"
  },
  "api/Ecommerce.UnitTests.EmailTests.EmailServiceTests.html": {
    "href": "api/Ecommerce.UnitTests.EmailTests.EmailServiceTests.html",
    "title": "Class EmailServiceTests",
    "keywords": "Class EmailServiceTests Namespace Ecommerce.UnitTests.EmailTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class EmailServiceTests Inheritance object EmailServiceTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SendEmailAsync_WhenEmailSendsSuccessfully_LogSuccess() [Test] public Task SendEmailAsync_WhenEmailSendsSuccessfully_LogSuccess() Returns Task SendEmailAsync_WhenExceptionOnSendAsyncIsThrown_LogError() [Test] public void SendEmailAsync_WhenExceptionOnSendAsyncIsThrown_LogError() SendEmailAsync_WhenExceptionOnSubjectIsThrown_LogError() [Test] public void SendEmailAsync_WhenExceptionOnSubjectIsThrown_LogError() SendEmailAsync_WhenExceptionOnTemplateIsThrown_LogError() [Test] public void SendEmailAsync_WhenExceptionOnTemplateIsThrown_LogError() SendEmailAsync_WhenExceptionOnToIsThrown_LogError() [Test] public void SendEmailAsync_WhenExceptionOnToIsThrown_LogError() Setup() [SetUp] public void Setup()"
  },
  "api/Ecommerce.UnitTests.EmailTests.html": {
    "href": "api/Ecommerce.UnitTests.EmailTests.html",
    "title": "Namespace Ecommerce.UnitTests.EmailTests",
    "keywords": "Namespace Ecommerce.UnitTests.EmailTests Classes EmailServiceTests"
  },
  "api/Ecommerce.UnitTests.FastEndpointTests.CartItemEndpointTests.html": {
    "href": "api/Ecommerce.UnitTests.FastEndpointTests.CartItemEndpointTests.html",
    "title": "Class CartItemEndpointTests",
    "keywords": "Class CartItemEndpointTests Namespace Ecommerce.UnitTests.FastEndpointTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class CartItemEndpointTests Inheritance object CartItemEndpointTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateCartItemEndpoint_WithException_ReturnsInternalServerError() [Test] public Task CreateCartItemEndpoint_WithException_ReturnsInternalServerError() Returns Task CreateCartItemEndpoint_WithInvalidToken_ReturnsUnauthorized() [Test] public Task CreateCartItemEndpoint_WithInvalidToken_ReturnsUnauthorized() Returns Task CreateCartItemEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task CreateCartItemEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task DeleteCartItemEndpoint_WithException_ReturnsInternalServerError() [Test] public Task DeleteCartItemEndpoint_WithException_ReturnsInternalServerError() Returns Task DeleteCartItemEndpoint_WithInvalidToken_ReturnsUnauthorized() [Test] public Task DeleteCartItemEndpoint_WithInvalidToken_ReturnsUnauthorized() Returns Task DeleteCartItemEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task DeleteCartItemEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task DeleteUserCartItemsEndpoint_WithException_ReturnsInternalServerError() [Test] public Task DeleteUserCartItemsEndpoint_WithException_ReturnsInternalServerError() Returns Task DeleteUserCartItemsEndpoint_WithInvalidToken_ReturnsUnauthorized() [Test] public Task DeleteUserCartItemsEndpoint_WithInvalidToken_ReturnsUnauthorized() Returns Task DeleteUserCartItemsEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task DeleteUserCartItemsEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task GetUserCartItemsEndpoint_WithException_ReturnsInternalServerError() [Test] public Task GetUserCartItemsEndpoint_WithException_ReturnsInternalServerError() Returns Task GetUserCartItemsEndpoint_WithInvalidToken_ReturnsUnauthorized() [Test] public Task GetUserCartItemsEndpoint_WithInvalidToken_ReturnsUnauthorized() Returns Task GetUserCartItemsEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task GetUserCartItemsEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task Setup() [SetUp] public void Setup() UpdateCartItemEndpoint_WithException_ReturnsInternalServerError() [Test] public Task UpdateCartItemEndpoint_WithException_ReturnsInternalServerError() Returns Task UpdateCartItemEndpoint_WithInvalidToken_ReturnsUnauthorized() [Test] public Task UpdateCartItemEndpoint_WithInvalidToken_ReturnsUnauthorized() Returns Task UpdateCartItemEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task UpdateCartItemEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task"
  },
  "api/Ecommerce.UnitTests.FastEndpointTests.CategoryEndpointTests.html": {
    "href": "api/Ecommerce.UnitTests.FastEndpointTests.CategoryEndpointTests.html",
    "title": "Class CategoryEndpointTests",
    "keywords": "Class CategoryEndpointTests Namespace Ecommerce.UnitTests.FastEndpointTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class CategoryEndpointTests Inheritance object CategoryEndpointTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateCategoryEndpoint_WithException_ReturnsInternalServerError() [Test] public Task CreateCategoryEndpoint_WithException_ReturnsInternalServerError() Returns Task CreateCategoryEndpoint_WithInvalidToken_ReturnsUnauthorized() [Test] public Task CreateCategoryEndpoint_WithInvalidToken_ReturnsUnauthorized() Returns Task CreateCategoryEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task CreateCategoryEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task DeleteCategoryEndpoint_WithException_ReturnsInternalServerError() [Test] public Task DeleteCategoryEndpoint_WithException_ReturnsInternalServerError() Returns Task DeleteCategoryEndpoint_WithInvalidToken_ReturnsUnauthorized() [Test] public Task DeleteCategoryEndpoint_WithInvalidToken_ReturnsUnauthorized() Returns Task DeleteCategoryEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task DeleteCategoryEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task GetAllCategoriesEndpoint_WithException_ReturnsInternalServerError() [Test] public Task GetAllCategoriesEndpoint_WithException_ReturnsInternalServerError() Returns Task GetAllCategoriesEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task GetAllCategoriesEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task Setup() [SetUp] public void Setup() UpdateCategoryEndpoint_WithException_ReturnsInternalServerError() [Test] public Task UpdateCategoryEndpoint_WithException_ReturnsInternalServerError() Returns Task UpdateCategoryEndpoint_WithInvalidToken_ReturnsUnauthorized() [Test] public Task UpdateCategoryEndpoint_WithInvalidToken_ReturnsUnauthorized() Returns Task UpdateCategoryEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task UpdateCategoryEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task"
  },
  "api/Ecommerce.UnitTests.FastEndpointTests.OrderEndpointTests.html": {
    "href": "api/Ecommerce.UnitTests.FastEndpointTests.OrderEndpointTests.html",
    "title": "Class OrderEndpointTests",
    "keywords": "Class OrderEndpointTests Namespace Ecommerce.UnitTests.FastEndpointTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class OrderEndpointTests Inheritance object OrderEndpointTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateOrderEndpoint_InvalidPaymentSource_ReturnsBadRequest() [Test] public Task CreateOrderEndpoint_InvalidPaymentSource_ReturnsBadRequest() Returns Task CreateOrderEndpoint_InvalidToken_ReturnsUnauthorized() [Test] public Task CreateOrderEndpoint_InvalidToken_ReturnsUnauthorized() Returns Task CreateOrderEndpoint_UnexpectedError_ReturnsInternalServerError() [Test] public Task CreateOrderEndpoint_UnexpectedError_ReturnsInternalServerError() Returns Task CreateOrderEndpoint_WhenOrderNotCreated_ReturnsFailedResponse() [Test] public Task CreateOrderEndpoint_WhenOrderNotCreated_ReturnsFailedResponse() Returns Task CreateOrderEndpoint_WhenPayPalOrderNotCreated_ReturnsFailedResponse() [Test] public Task CreateOrderEndpoint_WhenPayPalOrderNotCreated_ReturnsFailedResponse() Returns Task CreateOrderEndpoint_WithValidRequestAndWithoutErrors_ReturnsCreateOrderResponse() [Test] public Task CreateOrderEndpoint_WithValidRequestAndWithoutErrors_ReturnsCreateOrderResponse() Returns Task CreateOrderEndpoint_WithoutCartItems_ReturnsBadRequest() [Test] public Task CreateOrderEndpoint_WithoutCartItems_ReturnsBadRequest() Returns Task GetAllOrdersByUserIdEndpoint_InvalidToken_ReturnsUnauthorized() [Test] public Task GetAllOrdersByUserIdEndpoint_InvalidToken_ReturnsUnauthorized() Returns Task GetAllOrdersByUserIdEndpoint_UnexpectedError_ReturnsInternalServerError() [Test] public Task GetAllOrdersByUserIdEndpoint_UnexpectedError_ReturnsInternalServerError() Returns Task GetAllOrdersByUserIdEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task GetAllOrdersByUserIdEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task GetOrderAfterSuccessfulCheckoutEndpoint_InvalidToken_ReturnsUnauthorized() [Test] public Task GetOrderAfterSuccessfulCheckoutEndpoint_InvalidToken_ReturnsUnauthorized() Returns Task GetOrderAfterSuccessfulCheckoutEndpoint_UnexpectedError_ReturnsInternalServerError() [Test] public Task GetOrderAfterSuccessfulCheckoutEndpoint_UnexpectedError_ReturnsInternalServerError() Returns Task GetOrderAfterSuccessfulCheckoutEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task GetOrderAfterSuccessfulCheckoutEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task GetOrderByIdEndpoint_InvalidToken_ReturnsUnauthorized() [Test] public Task GetOrderByIdEndpoint_InvalidToken_ReturnsUnauthorized() Returns Task GetOrderByIdEndpoint_UnexpectedError_ReturnsInternalServerError() [Test] public Task GetOrderByIdEndpoint_UnexpectedError_ReturnsInternalServerError() Returns Task GetOrderByIdEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task GetOrderByIdEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task Setup() [SetUp] public void Setup() UpdateOrderEndpoint_InvalidToken_ReturnsUnauthorized() [Test] public Task UpdateOrderEndpoint_InvalidToken_ReturnsUnauthorized() Returns Task UpdateOrderEndpoint_UnexpectedError_ReturnsInternalServerError() [Test] public Task UpdateOrderEndpoint_UnexpectedError_ReturnsInternalServerError() Returns Task UpdateOrderEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task UpdateOrderEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task"
  },
  "api/Ecommerce.UnitTests.FastEndpointTests.ProductEndpointTests.html": {
    "href": "api/Ecommerce.UnitTests.FastEndpointTests.ProductEndpointTests.html",
    "title": "Class ProductEndpointTests",
    "keywords": "Class ProductEndpointTests Namespace Ecommerce.UnitTests.FastEndpointTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class ProductEndpointTests Inheritance object ProductEndpointTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateProductEndpoint_WithException_ReturnsError() [Test] public Task CreateProductEndpoint_WithException_ReturnsError() Returns Task CreateProductEndpoint_WithInvalidToken_ReturnsUnauthorized() [Test] public Task CreateProductEndpoint_WithInvalidToken_ReturnsUnauthorized() Returns Task CreateProductEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task CreateProductEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task DeleteProductEndpoint_WithException_ReturnsError() [Test] public Task DeleteProductEndpoint_WithException_ReturnsError() Returns Task DeleteProductEndpoint_WithInvalidToken_ReturnsUnauthorized() [Test] public Task DeleteProductEndpoint_WithInvalidToken_ReturnsUnauthorized() Returns Task DeleteProductEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task DeleteProductEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task GetAllProductsByCategoryIdEndpoint_WithException_ReturnsError() [Test] public Task GetAllProductsByCategoryIdEndpoint_WithException_ReturnsError() Returns Task GetAllProductsByCategoryIdEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task GetAllProductsByCategoryIdEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task GetProductByIdEndpoint_WithException_ReturnsError() [Test] public Task GetProductByIdEndpoint_WithException_ReturnsError() Returns Task GetProductByIdEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task GetProductByIdEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task Setup() [SetUp] public void Setup() UpdateProductEndpoint_WithException_ReturnsError() [Test] public Task UpdateProductEndpoint_WithException_ReturnsError() Returns Task UpdateProductEndpoint_WithInvalidToken_ReturnsUnauthorized() [Test] public Task UpdateProductEndpoint_WithInvalidToken_ReturnsUnauthorized() Returns Task UpdateProductEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task UpdateProductEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task"
  },
  "api/Ecommerce.UnitTests.FastEndpointTests.ReviewEndpointTests.html": {
    "href": "api/Ecommerce.UnitTests.FastEndpointTests.ReviewEndpointTests.html",
    "title": "Class ReviewEndpointTests",
    "keywords": "Class ReviewEndpointTests Namespace Ecommerce.UnitTests.FastEndpointTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class ReviewEndpointTests Inheritance object ReviewEndpointTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateReviewEndpoint_WithException_ReturnsInternalServerError() [Test] public Task CreateReviewEndpoint_WithException_ReturnsInternalServerError() Returns Task CreateReviewEndpoint_WithInvalidToken_ReturnsUnauthorized() [Test] public Task CreateReviewEndpoint_WithInvalidToken_ReturnsUnauthorized() Returns Task CreateReviewEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task CreateReviewEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task DeleteReviewEndpoint_WithException_ReturnsInternalServerError() [Test] public Task DeleteReviewEndpoint_WithException_ReturnsInternalServerError() Returns Task DeleteReviewEndpoint_WithInvalidToken_ReturnsUnauthorized() [Test] public Task DeleteReviewEndpoint_WithInvalidToken_ReturnsUnauthorized() Returns Task DeleteReviewEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task DeleteReviewEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task GetReviewsForProductEndpoint_WithException_ReturnsInternalServerError() [Test] public Task GetReviewsForProductEndpoint_WithException_ReturnsInternalServerError() Returns Task GetReviewsForProductEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task GetReviewsForProductEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task GetUserReviewForProductEndpoint_WithException_ReturnsInternalServerError() [Test] public Task GetUserReviewForProductEndpoint_WithException_ReturnsInternalServerError() Returns Task GetUserReviewForProductEndpoint_WithInvalidToken_ReturnsUnauthorized() [Test] public Task GetUserReviewForProductEndpoint_WithInvalidToken_ReturnsUnauthorized() Returns Task GetUserReviewForProductEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task GetUserReviewForProductEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task Setup() [SetUp] public void Setup() UpdateReviewEndpoint_WithException_ReturnsInternalServerError() [Test] public Task UpdateReviewEndpoint_WithException_ReturnsInternalServerError() Returns Task UpdateReviewEndpoint_WithInvalidToken_ReturnsUnauthorized() [Test] public Task UpdateReviewEndpoint_WithInvalidToken_ReturnsUnauthorized() Returns Task UpdateReviewEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task UpdateReviewEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task"
  },
  "api/Ecommerce.UnitTests.FastEndpointTests.SecurityEndpointTests.html": {
    "href": "api/Ecommerce.UnitTests.FastEndpointTests.SecurityEndpointTests.html",
    "title": "Class SecurityEndpointTests",
    "keywords": "Class SecurityEndpointTests Namespace Ecommerce.UnitTests.FastEndpointTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class SecurityEndpointTests Inheritance object SecurityEndpointTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConfirmEmailEndpoint_WhenExceptionThrown_ReturnsInternalServerError() [Test] public Task ConfirmEmailEndpoint_WhenExceptionThrown_ReturnsInternalServerError() Returns Task ConfirmEmailEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task ConfirmEmailEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task LoginEndpoint_WhenExceptionThrown_ReturnsInternalServerError() [Test] public Task LoginEndpoint_WhenExceptionThrown_ReturnsInternalServerError() Returns Task LoginEndpoint_WithDisallowedAccount_ReturnsUnauthorized() [Test] public Task LoginEndpoint_WithDisallowedAccount_ReturnsUnauthorized() Returns Task LoginEndpoint_WithInvalidCredentials_ReturnsUnauthorized() [Test] public Task LoginEndpoint_WithInvalidCredentials_ReturnsUnauthorized() Returns Task LoginEndpoint_WithLockedAccount_ReturnsUnauthorized() [Test] public Task LoginEndpoint_WithLockedAccount_ReturnsUnauthorized() Returns Task LoginEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task LoginEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task LogoutEndpoint_WhenExceptionThrown_ReturnsInternalServerError() [Test] public Task LogoutEndpoint_WhenExceptionThrown_ReturnsInternalServerError() Returns Task LogoutEndpoint_WithInvalidToken_ReturnsUnauthorized() [Test] public Task LogoutEndpoint_WithInvalidToken_ReturnsUnauthorized() Returns Task LogoutEndpoint_WithNoUserName_ReturnsBadRequest() [Test] public Task LogoutEndpoint_WithNoUserName_ReturnsBadRequest() Returns Task LogoutEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task LogoutEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task RegisterEndpoint_WhenExceptionThrown_ReturnsInternalServerError() [Test] public Task RegisterEndpoint_WhenExceptionThrown_ReturnsInternalServerError() Returns Task RegisterEndpoint_WithNoUIUrl_ReturnsInternalServerError() [Test] public Task RegisterEndpoint_WithNoUIUrl_ReturnsInternalServerError() Returns Task RegisterEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task RegisterEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task Setup() [SetUp] public void Setup() UpdateEcommerceUserEndpoint_WhenExceptionThrown_ReturnsInternalServerError() [Test] public Task UpdateEcommerceUserEndpoint_WhenExceptionThrown_ReturnsInternalServerError() Returns Task UpdateEcommerceUserEndpoint_WhenUserIdNotFound_ReturnsBadRequest() [Test] public Task UpdateEcommerceUserEndpoint_WhenUserIdNotFound_ReturnsBadRequest() Returns Task UpdateEcommerceUserEndpoint_WithInvalidToken_ReturnsUnauthorized() [Test] public Task UpdateEcommerceUserEndpoint_WithInvalidToken_ReturnsUnauthorized() Returns Task UpdateEcommerceUserEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task UpdateEcommerceUserEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task UpdatePasswordEndpoint_WhenExceptionThrown_ReturnsInternalServerError() [Test] public Task UpdatePasswordEndpoint_WhenExceptionThrown_ReturnsInternalServerError() Returns Task UpdatePasswordEndpoint_WithInvalidToken_ReturnsUnauthorized() [Test] public Task UpdatePasswordEndpoint_WithInvalidToken_ReturnsUnauthorized() Returns Task UpdatePasswordEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() [Test] public Task UpdatePasswordEndpoint_WithValidRequestAndWithoutErrors_ReturnsSuccess() Returns Task"
  },
  "api/Ecommerce.UnitTests.FastEndpointTests.html": {
    "href": "api/Ecommerce.UnitTests.FastEndpointTests.html",
    "title": "Namespace Ecommerce.UnitTests.FastEndpointTests",
    "keywords": "Namespace Ecommerce.UnitTests.FastEndpointTests Classes CartItemEndpointTests CategoryEndpointTests OrderEndpointTests ProductEndpointTests ReviewEndpointTests SecurityEndpointTests"
  },
  "api/Ecommerce.UnitTests.PayPalTests.PaypalClientServiceTests.html": {
    "href": "api/Ecommerce.UnitTests.PayPalTests.PaypalClientServiceTests.html",
    "title": "Class PaypalClientServiceTests",
    "keywords": "Class PaypalClientServiceTests Namespace Ecommerce.UnitTests.PayPalTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class PaypalClientServiceTests Inheritance object PaypalClientServiceTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateOrder_WhenOrderCreatesSuccessfully_ReturnsCreatePayPalOrderResponse() [Test] public Task CreateOrder_WhenOrderCreatesSuccessfully_ReturnsCreatePayPalOrderResponse() Returns Task CreateOrder_WhenOrderIsEmpty_ReturnsFailResponseWithMessage() [Test] public Task CreateOrder_WhenOrderIsEmpty_ReturnsFailResponseWithMessage() Returns Task CreateOrder_WhenPayPalReturnsUnAuthorized_ReturnsFailResponseWithMessage() [Test] public Task CreateOrder_WhenPayPalReturnsUnAuthorized_ReturnsFailResponseWithMessage() Returns Task CreateOrder_WhenReturnBaseUrlIsNotSet_ReturnsFailResponseWithMessage() [Test] public Task CreateOrder_WhenReturnBaseUrlIsNotSet_ReturnsFailResponseWithMessage() Returns Task Setup() [SetUp] public void Setup()"
  },
  "api/Ecommerce.UnitTests.PayPalTests.html": {
    "href": "api/Ecommerce.UnitTests.PayPalTests.html",
    "title": "Namespace Ecommerce.UnitTests.PayPalTests",
    "keywords": "Namespace Ecommerce.UnitTests.PayPalTests Classes PaypalClientServiceTests"
  },
  "api/Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html": {
    "href": "api/Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html",
    "title": "Class CartItemRepositoryTests",
    "keywords": "Class CartItemRepositoryTests Namespace Ecommerce.UnitTests.PersistenceTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class CartItemRepositoryTests Inheritance object CartItemRepositoryTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAsync_WhenExceptionThrown_ShouldReturnMinusOne() [Test] public Task AddAsync_WhenExceptionThrown_ShouldReturnMinusOne() Returns Task AddAsync_WithExistingCartItem_ShouldReturnMinusOne() [Test] public Task AddAsync_WithExistingCartItem_ShouldReturnMinusOne() Returns Task AddAsync_WithNewCartItem_ShouldReturnId() [Test] public Task AddAsync_WithNewCartItem_ShouldReturnId() Returns Task CartItemExistsForUser_WhenCartItemExists_ShouldReturnTrue() [Test] public Task CartItemExistsForUser_WhenCartItemExists_ShouldReturnTrue() Returns Task CartItemExistsForUser_WhenExceptionThrown_ShouldReturnFalse() [Test] public Task CartItemExistsForUser_WhenExceptionThrown_ShouldReturnFalse() Returns Task CartItemExistsForUser_WhenNoCartItemExists_ShouldReturnFalse() [Test] public Task CartItemExistsForUser_WhenNoCartItemExists_ShouldReturnFalse() Returns Task DeleteAsync_WhenCartItemDoesNotExist_ShouldReturnFalse() [Test] public Task DeleteAsync_WhenCartItemDoesNotExist_ShouldReturnFalse() Returns Task DeleteAsync_WhenCartItemExists_ShouldReturnTrue() [Test] public Task DeleteAsync_WhenCartItemExists_ShouldReturnTrue() Returns Task DeleteAsync_WhenExceptionThrown_ShouldReturnFalse() [Test] public Task DeleteAsync_WhenExceptionThrown_ShouldReturnFalse() Returns Task GetByIdAsync_WhenCartItemDoesNotExist_ShouldReturnNull() [Test] public Task GetByIdAsync_WhenCartItemDoesNotExist_ShouldReturnNull() Returns Task GetByIdAsync_WhenCartItemExists_ShouldReturnCartItem() [Test] public Task GetByIdAsync_WhenCartItemExists_ShouldReturnCartItem() Returns Task GetByIdAsync_WhenExceptionThrown_ShouldReturnNull() [Test] public Task GetByIdAsync_WhenExceptionThrown_ShouldReturnNull() Returns Task ListAllAsync_WhenCartItemsExist_ShouldReturnCartItems() [Test] public Task ListAllAsync_WhenCartItemsExist_ShouldReturnCartItems() Returns Task ListAllAsync_WhenExceptionThrown_ShouldReturnNull() [Test] public Task ListAllAsync_WhenExceptionThrown_ShouldReturnNull() Returns Task ListAllAsync_WhenNoCartItemsExist_ShouldReturnEmptyList() [Test] public Task ListAllAsync_WhenNoCartItemsExist_ShouldReturnEmptyList() Returns Task RemoveUserCartItems_WhenCartItemsExist_ShouldReturnTrue() [Test] public Task RemoveUserCartItems_WhenCartItemsExist_ShouldReturnTrue() Returns Task RemoveUserCartItems_WhenExceptionThrown_ShouldReturnFalse() [Test] public Task RemoveUserCartItems_WhenExceptionThrown_ShouldReturnFalse() Returns Task RemoveUserCartItems_WhenNoCartItemsExist_ShouldReturnFalse() [Test] public Task RemoveUserCartItems_WhenNoCartItemsExist_ShouldReturnFalse() Returns Task Setup() [SetUp] public void Setup() TearDown() [TearDown] public void TearDown() UpdateAsync_WhenCartItemDoesNotExist_ShouldReturnFalse() [Test] public Task UpdateAsync_WhenCartItemDoesNotExist_ShouldReturnFalse() Returns Task UpdateAsync_WhenExceptionThrown_ShouldReturnFalse() [Test] public Task UpdateAsync_WhenExceptionThrown_ShouldReturnFalse() Returns Task UpdateAsync_WithExistingCartItem_ShouldReturnTrue() [Test] public Task UpdateAsync_WithExistingCartItem_ShouldReturnTrue() Returns Task"
  },
  "api/Ecommerce.UnitTests.PersistenceTests.CategoryAsyncRepositoryTests.html": {
    "href": "api/Ecommerce.UnitTests.PersistenceTests.CategoryAsyncRepositoryTests.html",
    "title": "Class CategoryAsyncRepositoryTests",
    "keywords": "Class CategoryAsyncRepositoryTests Namespace Ecommerce.UnitTests.PersistenceTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class CategoryAsyncRepositoryTests Inheritance object CategoryAsyncRepositoryTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAsync_WhenExceptionThrown_ReturnsMinusOne() [Test] public Task AddAsync_WhenExceptionThrown_ReturnsMinusOne() Returns Task AddAsync_WithExistingCategory_ReturnsMinusOne() [Test] public Task AddAsync_WithExistingCategory_ReturnsMinusOne() Returns Task AddAsync_WithNewCategory_ReturnsId() [Test] public Task AddAsync_WithNewCategory_ReturnsId() Returns Task DeleteAsync_WhenCategoryDoesNotExist_ReturnsFalse() [Test] public Task DeleteAsync_WhenCategoryDoesNotExist_ReturnsFalse() Returns Task DeleteAsync_WhenCategoryExists_ReturnsTrue() [Test] public Task DeleteAsync_WhenCategoryExists_ReturnsTrue() Returns Task DeleteAsync_WhenExceptionThrown_ReturnsFalse() [Test] public Task DeleteAsync_WhenExceptionThrown_ReturnsFalse() Returns Task GetByIdAsync_WhenCategoryDoesNotExist_ReturnsNull() [Test] public Task GetByIdAsync_WhenCategoryDoesNotExist_ReturnsNull() Returns Task GetByIdAsync_WhenCategoryExists_ReturnsCategory() [Test] public Task GetByIdAsync_WhenCategoryExists_ReturnsCategory() Returns Task GetByIdAsync_WhenExceptionThrown_ReturnsNull() [Test] public Task GetByIdAsync_WhenExceptionThrown_ReturnsNull() Returns Task IsNameUnique_WithExistingName_ReturnsFalse() [Test] public Task IsNameUnique_WithExistingName_ReturnsFalse() Returns Task IsNameUnique_WithUniqueName_ReturnsTrue() [Test] public Task IsNameUnique_WithUniqueName_ReturnsTrue() Returns Task ListAllAsync_WhenCategoriesExist_ReturnsAllCategories() [Test] public Task ListAllAsync_WhenCategoriesExist_ReturnsAllCategories() Returns Task ListAllAsync_WhenExceptionThrown_ReturnsEmptyList() [Test] public Task ListAllAsync_WhenExceptionThrown_ReturnsEmptyList() Returns Task ListAllAsync_WhenNoCategoriesExist_ReturnsEmptyList() [Test] public Task ListAllAsync_WhenNoCategoriesExist_ReturnsEmptyList() Returns Task Setup() [SetUp] public void Setup() TearDown() [TearDown] public void TearDown() UpdateAsync_WhenCategoryDoesNotExist_ReturnsFalse() [Test] public Task UpdateAsync_WhenCategoryDoesNotExist_ReturnsFalse() Returns Task UpdateAsync_WhenExceptionThrown_ReturnsFalse() [Test] public Task UpdateAsync_WhenExceptionThrown_ReturnsFalse() Returns Task UpdateAsync_WithExistingCategory_ReturnsTrue() [Test] public Task UpdateAsync_WithExistingCategory_ReturnsTrue() Returns Task"
  },
  "api/Ecommerce.UnitTests.PersistenceTests.OrderAsyncRepositoryTests.html": {
    "href": "api/Ecommerce.UnitTests.PersistenceTests.OrderAsyncRepositoryTests.html",
    "title": "Class OrderAsyncRepositoryTests",
    "keywords": "Class OrderAsyncRepositoryTests Namespace Ecommerce.UnitTests.PersistenceTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class OrderAsyncRepositoryTests Inheritance object OrderAsyncRepositoryTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAsync_WhenExceptionThrown_ReturnsMinusOne() [Test] public Task AddAsync_WhenExceptionThrown_ReturnsMinusOne() Returns Task AddAsync_WithExistingOrder_ReturnsMinusOne() [Test] public Task AddAsync_WithExistingOrder_ReturnsMinusOne() Returns Task AddAsync_WithNewOrder_ReturnsId() [Test] public Task AddAsync_WithNewOrder_ReturnsId() Returns Task DeleteAsync_WhenExceptionThrown_ReturnsFalse() [Test] public Task DeleteAsync_WhenExceptionThrown_ReturnsFalse() Returns Task DeleteAsync_WhenOrderExists_ReturnsTrue() [Test] public Task DeleteAsync_WhenOrderExists_ReturnsTrue() Returns Task DeleteAsync_WithOrderDoesNotExist_ReturnsFalse() [Test] public Task DeleteAsync_WithOrderDoesNotExist_ReturnsFalse() Returns Task GetByIdAsync_WhenExceptionThrown_ReturnsNull() [Test] public Task GetByIdAsync_WhenExceptionThrown_ReturnsNull() Returns Task GetByIdAsync_WhenOrderDoesNotExist_ReturnsNull() [Test] public Task GetByIdAsync_WhenOrderDoesNotExist_ReturnsNull() Returns Task GetByIdAsync_WhenOrderExists_ReturnsOrder() [Test] public Task GetByIdAsync_WhenOrderExists_ReturnsOrder() Returns Task ListAllAsync_WhenExceptionThrown_ReturnsEmpty() [Test] public Task ListAllAsync_WhenExceptionThrown_ReturnsEmpty() Returns Task ListAllAsync_WhenNoOrdersExist_ReturnsEmpty() [Test] public Task ListAllAsync_WhenNoOrdersExist_ReturnsEmpty() Returns Task ListAllAsync_WhenOrdersExist_ReturnsOrders() [Test] public Task ListAllAsync_WhenOrdersExist_ReturnsOrders() Returns Task Setup() [SetUp] public void Setup() TearDown() [TearDown] public void TearDown() UpdateAsync_WhenExceptionThrown_ReturnsFalse() [Test] public Task UpdateAsync_WhenExceptionThrown_ReturnsFalse() Returns Task UpdateAsync_WithExistingOrder_ReturnsTrue() [Test] public Task UpdateAsync_WithExistingOrder_ReturnsTrue() Returns Task UpdateAsync_WithOrderNonExistentOrder_ReturnsFalse() [Test] public Task UpdateAsync_WithOrderNonExistentOrder_ReturnsFalse() Returns Task"
  },
  "api/Ecommerce.UnitTests.PersistenceTests.OrderItemAsyncRepositoryTests.html": {
    "href": "api/Ecommerce.UnitTests.PersistenceTests.OrderItemAsyncRepositoryTests.html",
    "title": "Class OrderItemAsyncRepositoryTests",
    "keywords": "Class OrderItemAsyncRepositoryTests Namespace Ecommerce.UnitTests.PersistenceTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class OrderItemAsyncRepositoryTests Inheritance object OrderItemAsyncRepositoryTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAsync_WhenExceptionThrown_ReturnsMinusOne() [Test] public Task AddAsync_WhenExceptionThrown_ReturnsMinusOne() Returns Task AddAsync_WithExistingOrderItem_ReturnsMinusOne() [Test] public Task AddAsync_WithExistingOrderItem_ReturnsMinusOne() Returns Task AddAsync_WithNewOrderItem_ReturnsId() [Test] public Task AddAsync_WithNewOrderItem_ReturnsId() Returns Task DeleteAsync_WhenExceptionThrown_ReturnsFalse() [Test] public Task DeleteAsync_WhenExceptionThrown_ReturnsFalse() Returns Task DeleteAsync_WhenOrderItemDoesNotExist_ReturnsFalse() [Test] public Task DeleteAsync_WhenOrderItemDoesNotExist_ReturnsFalse() Returns Task DeleteAsync_WhenOrderItemExists_ReturnsTrue() [Test] public Task DeleteAsync_WhenOrderItemExists_ReturnsTrue() Returns Task GetByIdAsync_WhenExceptionThrown_ReturnsNull() [Test] public Task GetByIdAsync_WhenExceptionThrown_ReturnsNull() Returns Task GetByIdAsync_WhenOrderItemDoesNotExist_ReturnsNull() [Test] public Task GetByIdAsync_WhenOrderItemDoesNotExist_ReturnsNull() Returns Task GetByIdAsync_WhenOrderItemExists_ReturnsOrderItem() [Test] public Task GetByIdAsync_WhenOrderItemExists_ReturnsOrderItem() Returns Task ListAllAsync_WhenExceptionThrown_ReturnsEmpty() [Test] public Task ListAllAsync_WhenExceptionThrown_ReturnsEmpty() Returns Task ListAllAsync_WhenNoOrderItemsExist_ReturnsEmpty() [Test] public Task ListAllAsync_WhenNoOrderItemsExist_ReturnsEmpty() Returns Task ListAllAsync_WhenOrderItemsExist_ReturnsOrderItems() [Test] public Task ListAllAsync_WhenOrderItemsExist_ReturnsOrderItems() Returns Task Setup() [SetUp] public void Setup() TearDown() [TearDown] public void TearDown() UpdateAsync_WhenExceptionThrown_ReturnsFalse() [Test] public Task UpdateAsync_WhenExceptionThrown_ReturnsFalse() Returns Task UpdateAsync_WhenOrderItemDoesNotExist_ReturnsFalse() [Test] public Task UpdateAsync_WhenOrderItemDoesNotExist_ReturnsFalse() Returns Task UpdateAsync_WithExistingOrderItem_ReturnsTrue() [Test] public Task UpdateAsync_WithExistingOrderItem_ReturnsTrue() Returns Task"
  },
  "api/Ecommerce.UnitTests.PersistenceTests.OrderKeyRepositoryTests.html": {
    "href": "api/Ecommerce.UnitTests.PersistenceTests.OrderKeyRepositoryTests.html",
    "title": "Class OrderKeyRepositoryTests",
    "keywords": "Class OrderKeyRepositoryTests Namespace Ecommerce.UnitTests.PersistenceTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class OrderKeyRepositoryTests Inheritance object OrderKeyRepositoryTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAsync_WhenExceptionThrown_ReturnsMinusOne() [Test] public Task AddAsync_WhenExceptionThrown_ReturnsMinusOne() Returns Task AddAsync_WithExistingOrderKey_ReturnsMinusOne() [Test] public Task AddAsync_WithExistingOrderKey_ReturnsMinusOne() Returns Task AddAsync_WithNewOrderKey_ReturnsId() [Test] public Task AddAsync_WithNewOrderKey_ReturnsId() Returns Task DeleteAsync_WhenExceptionThrown_ReturnsFalse() [Test] public Task DeleteAsync_WhenExceptionThrown_ReturnsFalse() Returns Task DeleteAsync_WhenOrderKeyDoesNotExist_ReturnsFalse() [Test] public Task DeleteAsync_WhenOrderKeyDoesNotExist_ReturnsFalse() Returns Task DeleteAsync_WhenOrderKeyExists_ReturnsTrue() [Test] public Task DeleteAsync_WhenOrderKeyExists_ReturnsTrue() Returns Task GetByOrderIdAsync_WhenExceptionThrown_ReturnsNull() [Test] public Task GetByOrderIdAsync_WhenExceptionThrown_ReturnsNull() Returns Task GetByOrderIdAsync_WhenOrderKeyDoesNotExist_ReturnsNull() [Test] public Task GetByOrderIdAsync_WhenOrderKeyDoesNotExist_ReturnsNull() Returns Task GetByOrderIdAsync_WhenOrderKeyExists_ReturnsOrderKey() [Test] public Task GetByOrderIdAsync_WhenOrderKeyExists_ReturnsOrderKey() Returns Task GetByReturnKeyAsync_WhenExceptionThrown_ReturnsNull() [Test] public Task GetByReturnKeyAsync_WhenExceptionThrown_ReturnsNull() Returns Task GetByReturnKeyAsync_WhenOrderKeyDoesNotExist_ReturnsNull() [Test] public Task GetByReturnKeyAsync_WhenOrderKeyDoesNotExist_ReturnsNull() Returns Task GetByReturnKeyAsync_WhenOrderKeyExists_ReturnsOrderKey() [Test] public Task GetByReturnKeyAsync_WhenOrderKeyExists_ReturnsOrderKey() Returns Task Setup() [SetUp] public void Setup() TearDown() [TearDown] public void TearDown()"
  },
  "api/Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.html": {
    "href": "api/Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.html",
    "title": "Class ProductAsyncRepositoryTests",
    "keywords": "Class ProductAsyncRepositoryTests Namespace Ecommerce.UnitTests.PersistenceTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class ProductAsyncRepositoryTests Inheritance object ProductAsyncRepositoryTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAsync_WhenExceptionThrown_ReturnsMinusOne() [Test] public Task AddAsync_WhenExceptionThrown_ReturnsMinusOne() Returns Task AddAsync_WithExistingProduct_ReturnsMinusOne() [Test] public Task AddAsync_WithExistingProduct_ReturnsMinusOne() Returns Task AddAsync_WithNewProduct_ReturnsIdOfNewProduct() [Test] public Task AddAsync_WithNewProduct_ReturnsIdOfNewProduct() Returns Task DeleteAsync_WhenExceptionThrown_ReturnsFalse() [Test] public Task DeleteAsync_WhenExceptionThrown_ReturnsFalse() Returns Task DeleteAsync_WhenProductDoesNotExist_ReturnsFalse() [Test] public Task DeleteAsync_WhenProductDoesNotExist_ReturnsFalse() Returns Task DeleteAsync_WhenProductExists_ReturnsTrue() [Test] public Task DeleteAsync_WhenProductExists_ReturnsTrue() Returns Task GetByIdAsync_WhenExceptionThrown_ReturnsNull() [Test] public Task GetByIdAsync_WhenExceptionThrown_ReturnsNull() Returns Task GetByIdAsync_WhenProductDoesNotExist_ReturnsNull() [Test] public Task GetByIdAsync_WhenProductDoesNotExist_ReturnsNull() Returns Task GetByIdAsync_WhenProductExists_ReturnsProduct() [Test] public Task GetByIdAsync_WhenProductExists_ReturnsProduct() Returns Task ListAllAsync_WhenExceptionThrown_ReturnsEmptyList() [Test] public Task ListAllAsync_WhenExceptionThrown_ReturnsEmptyList() Returns Task ListAllAsync_WhenNoProductsExist_ReturnsEmptyList() [Test] public Task ListAllAsync_WhenNoProductsExist_ReturnsEmptyList() Returns Task ListAllAsync_WhenProductsExist_ReturnsProducts() [Test] public Task ListAllAsync_WhenProductsExist_ReturnsProducts() Returns Task Setup() [SetUp] public void Setup() TearDown() [TearDown] public void TearDown() UpdateAsync_WhenExceptionThrown_ReturnsFalse() [Test] public Task UpdateAsync_WhenExceptionThrown_ReturnsFalse() Returns Task UpdateAsync_WhenProductDoesNotExist_ReturnsFalse() [Test] public Task UpdateAsync_WhenProductDoesNotExist_ReturnsFalse() Returns Task UpdateAsync_WhenProductExists_ReturnsTrue() [Test] public Task UpdateAsync_WhenProductExists_ReturnsTrue() Returns Task"
  },
  "api/Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html": {
    "href": "api/Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html",
    "title": "Class ReviewAsyncRepositoryTests",
    "keywords": "Class ReviewAsyncRepositoryTests Namespace Ecommerce.UnitTests.PersistenceTests Assembly Ecommerce.UnitTests.dll [TestFixture] public class ReviewAsyncRepositoryTests Inheritance object ReviewAsyncRepositoryTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAsync_WhenExceptionThrown_ReturnsMinusOne() [Test] public Task AddAsync_WhenExceptionThrown_ReturnsMinusOne() Returns Task AddAsync_WithExistingReview_ReturnsMinusOne() [Test] public Task AddAsync_WithExistingReview_ReturnsMinusOne() Returns Task AddAsync_WithNewReview_ReturnsId() [Test] public Task AddAsync_WithNewReview_ReturnsId() Returns Task DeleteAsync_WhenExceptionThrown_ReturnsFalse() [Test] public Task DeleteAsync_WhenExceptionThrown_ReturnsFalse() Returns Task DeleteAsync_WhenReviewDoesNotExist_ReturnsFalse() [Test] public Task DeleteAsync_WhenReviewDoesNotExist_ReturnsFalse() Returns Task DeleteAsync_WhenReviewExists_ReturnsTrue() [Test] public Task DeleteAsync_WhenReviewExists_ReturnsTrue() Returns Task GetAverageRatingForProduct_WhenExceptionThrown_ReturnsZero() [Test] public Task GetAverageRatingForProduct_WhenExceptionThrown_ReturnsZero() Returns Task GetAverageRatingForProduct_WhenNoReviewsExist_ReturnsZero() [Test] public Task GetAverageRatingForProduct_WhenNoReviewsExist_ReturnsZero() Returns Task GetAverageRatingForProduct_WhenReviewsExist_ReturnsAverage() [Test] public Task GetAverageRatingForProduct_WhenReviewsExist_ReturnsAverage() Returns Task GetByIdAsync_WhenExceptionThrown_ReturnsNull() [Test] public Task GetByIdAsync_WhenExceptionThrown_ReturnsNull() Returns Task GetByIdAsync_WhenReviewDoesNotExist_ReturnsNull() [Test] public Task GetByIdAsync_WhenReviewDoesNotExist_ReturnsNull() Returns Task GetByIdAsync_WhenReviewExists_ReturnsReview() [Test] public Task GetByIdAsync_WhenReviewExists_ReturnsReview() Returns Task GetUserReviewForProduct_WhenExceptionThrown_ReturnsNull() [Test] public Task GetUserReviewForProduct_WhenExceptionThrown_ReturnsNull() Returns Task GetUserReviewForProduct_WhenReviewDoesNotExist_ReturnsReviewWithNegativeOneId() [Test] public Task GetUserReviewForProduct_WhenReviewDoesNotExist_ReturnsReviewWithNegativeOneId() Returns Task GetUserReviewForProduct_WhenReviewExists_ReturnsReview() [Test] public Task GetUserReviewForProduct_WhenReviewExists_ReturnsReview() Returns Task ListAllAsync_WhenExceptionThrown_ReturnsNull() [Test] public Task ListAllAsync_WhenExceptionThrown_ReturnsNull() Returns Task ListAllAsync_WhenNoReviewsExist_ReturnsEmpty() [Test] public Task ListAllAsync_WhenNoReviewsExist_ReturnsEmpty() Returns Task ListAllAsync_WhenReviewsExist_ReturnsReviews() [Test] public Task ListAllAsync_WhenReviewsExist_ReturnsReviews() Returns Task Setup() [SetUp] public void Setup() TearDown() [TearDown] public void TearDown() UpdateAsync_WhenExceptionThrown_ReturnsFalse() [Test] public Task UpdateAsync_WhenExceptionThrown_ReturnsFalse() Returns Task UpdateAsync_WhenReviewDoesNotExist_ReturnsFalse() [Test] public Task UpdateAsync_WhenReviewDoesNotExist_ReturnsFalse() Returns Task UpdateAsync_WithExistingReview_ReturnsTrue() [Test] public Task UpdateAsync_WithExistingReview_ReturnsTrue() Returns Task"
  },
  "api/Ecommerce.UnitTests.PersistenceTests.html": {
    "href": "api/Ecommerce.UnitTests.PersistenceTests.html",
    "title": "Namespace Ecommerce.UnitTests.PersistenceTests",
    "keywords": "Namespace Ecommerce.UnitTests.PersistenceTests Classes CartItemRepositoryTests CategoryAsyncRepositoryTests OrderAsyncRepositoryTests OrderItemAsyncRepositoryTests OrderKeyRepositoryTests ProductAsyncRepositoryTests ReviewAsyncRepositoryTests"
  },
  "api/Ecommerce.Worker.Consumers.EcommerceUser.SendEmailConfirmationConsumer.html": {
    "href": "api/Ecommerce.Worker.Consumers.EcommerceUser.SendEmailConfirmationConsumer.html",
    "title": "Class SendEmailConfirmationConsumer",
    "keywords": "Class SendEmailConfirmationConsumer Namespace Ecommerce.Worker.Consumers.EcommerceUser Assembly Ecommerce.Worker.dll Consumer to send an email confirmation public class SendEmailConfirmationConsumer : IConsumer<SendEmailConfirmationMessage>, IConsumer Inheritance object SendEmailConfirmationConsumer Implements IConsumer<SendEmailConfirmationMessage> IConsumer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SendEmailConfirmationConsumer(ILogger<SendEmailConfirmationConsumer>, IEmailService) Initializes a new instance of the SendEmailConfirmationConsumer class. public SendEmailConfirmationConsumer(ILogger<SendEmailConfirmationConsumer> logger, IEmailService emailService) Parameters logger ILogger<SendEmailConfirmationConsumer> The ILogger instance used for logging. emailService IEmailService The IEmailService instance used for sending an email Methods Consume(ConsumeContext<SendEmailConfirmationMessage>) Consumes the message to send an email confirmation public Task Consume(ConsumeContext<SendEmailConfirmationMessage> context) Parameters context ConsumeContext<SendEmailConfirmationMessage> The message to be handled Returns Task"
  },
  "api/Ecommerce.Worker.Consumers.EcommerceUser.html": {
    "href": "api/Ecommerce.Worker.Consumers.EcommerceUser.html",
    "title": "Namespace Ecommerce.Worker.Consumers.EcommerceUser",
    "keywords": "Namespace Ecommerce.Worker.Consumers.EcommerceUser Classes SendEmailConfirmationConsumer Consumer to send an email confirmation"
  },
  "api/Ecommerce.Worker.Consumers.Order.SendOrderConfirmationConsumer.html": {
    "href": "api/Ecommerce.Worker.Consumers.Order.SendOrderConfirmationConsumer.html",
    "title": "Class SendOrderConfirmationConsumer",
    "keywords": "Class SendOrderConfirmationConsumer Namespace Ecommerce.Worker.Consumers.Order Assembly Ecommerce.Worker.dll Consumer to send an order confirmation public class SendOrderConfirmationConsumer : IConsumer<SendOrderConfirmationMessage>, IConsumer Inheritance object SendOrderConfirmationConsumer Implements IConsumer<SendOrderConfirmationMessage> IConsumer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SendOrderConfirmationConsumer(ILogger<SendOrderConfirmationConsumer>, IEmailService) Initializes a new instance of the SendOrderConfirmationConsumer class. public SendOrderConfirmationConsumer(ILogger<SendOrderConfirmationConsumer> logger, IEmailService emailService) Parameters logger ILogger<SendOrderConfirmationConsumer> The ILogger instance used for logging. emailService IEmailService The IEmailService instance used for sending an email Methods Consume(ConsumeContext<SendOrderConfirmationMessage>) public Task Consume(ConsumeContext<SendOrderConfirmationMessage> context) Parameters context ConsumeContext<SendOrderConfirmationMessage> Returns Task"
  },
  "api/Ecommerce.Worker.Consumers.Order.html": {
    "href": "api/Ecommerce.Worker.Consumers.Order.html",
    "title": "Namespace Ecommerce.Worker.Consumers.Order",
    "keywords": "Namespace Ecommerce.Worker.Consumers.Order Classes SendOrderConfirmationConsumer Consumer to send an order confirmation"
  },
  "api/Ecommerce.Worker.EcommerceLogTextFormatter.html": {
    "href": "api/Ecommerce.Worker.EcommerceLogTextFormatter.html",
    "title": "Class EcommerceLogTextFormatter",
    "keywords": "Class EcommerceLogTextFormatter Namespace Ecommerce.Worker Assembly Ecommerce.Worker.dll public class EcommerceLogTextFormatter : LokiJsonTextFormatter, ITextFormatter Inheritance object LokiJsonTextFormatter EcommerceLogTextFormatter Implements ITextFormatter Inherited Members LokiJsonTextFormatter.RenamingStrategy LokiJsonTextFormatter.ValueFormatter LokiJsonTextFormatter.GetSanitizedPropertyName(string) LokiJsonTextFormatter.SerializeException(TextWriter, Exception, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Format(LogEvent, TextWriter) Format the log event into the output. public override void Format(LogEvent logEvent, TextWriter output) Parameters logEvent LogEvent The event to format. output TextWriter The output."
  },
  "api/Ecommerce.Worker.html": {
    "href": "api/Ecommerce.Worker.html",
    "title": "Namespace Ecommerce.Worker",
    "keywords": "Namespace Ecommerce.Worker Classes EcommerceLogTextFormatter"
  },
  "getting-started.html": {
    "href": "getting-started.html",
    "title": "Getting Started",
    "keywords": "Getting Started To setup and run the project locally you will need to first install the prequisite software on your machine and then follow the instructions below Software Requirements: .Net 8 SDK Docker Optionally if you would like to have your containers hosted on a separate machine Portainer would be a good option to setup and manage the stack for this application. Setup Steps Open Powershell and move into the Persistence project directory Your shell path should look similar to C:\\EcommerceApp\\Infrastructure\\Ecommerce.Persistence> on windows For superior Linux users it should look more like this ~/GitRepos/EcommerceAppEcommerce.Persistence$ Run the following command to set up a MySQL Docker Container docker run -d --name ecommerce-mailhog -p 1025:1025 -p 8025:8025 mailhog/mailhog docker run -d --name ecommerce-rabbit -e RABBITMQ_DEFAULT_USER=user -e RABBITMQ_DEFAULT_PASS=password -p 15672:15672 -p 5672:5672 rabbitmq:3-management docker run --name ecommerce-mysql -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=ecommerce -e MYSQL_USER=applicationuser -e MYSQL_PASSWORD=password mysql:latest Run the following command to install the dotnet tools needed for this repo dotnet tool restore Update your appsettings.Development.json file in the API project to have the following connection string (You SHOULD change the values to match your MySQL container setup) \"ConnectionStrings\": { \"DefaultConnection\": \"server=localhost;port=3306;database=ecommerce;user=applicationuser;password=password\" } You will need to use a program of your choice or bash into the container to access your MySql database to run the following snippet as a user with admin privileges SET GLOBAL event_scheduler = ON; Add a secrets.json file to the API project and add paste the following into it and then update the value to a random key of your choosing (can be any value you want) { \"JwtSettings\": { \"Key\": \"PUTSOMETHINGHERE\" } } Run the UI and API project together in an IDE of your choice Post Setup Instructions You can now run the application, but you will need to go to the register page, you can either append the UI path with /Register or click login in the top right and click Register here To add more Products with pictures you will need to set up your own S3 bucket and use the urls from that to show product pictures"
  },
  "index.html": {
    "href": "index.html",
    "title": "Ecommerce Docs",
    "keywords": "Ecommerce Docs Welcome to the docs for the Ecommerce App. Project Purpose: The original purpose of this project was to provide a full stack web application for learning purposes. Most tutorials that are available online allow you to test with a greenfield project but never really show how you would implement the tool/framework you are learning into an existing project. Additionally other things like auth tutorials would always avoid following best practices for the sake of keeping the demo within the scope of the topic being covered. Wanting to get away from these problems and also have a tool that I can work to practice maintaining as well as test out new frameworks and tools on I have created the Ecommerce App. A simple but fairly decently sized application that operates as a web store for tech items such as laptops and phones simulating most of what you would expect in a very minimal online store. After a few months of development it became apparent to me via conversations with others that this tool could be useful for others wanting to learn how to build a full stack application from scratch. Not only just the application, but the devops process, following security standards, being able to reproduce the same result on a fairly minimal budget, etc. Instructions For instructions on how to get the project up and running locally click here If you are interested in forking the project to try running it in your own environment a guide will be posted soon on how to do that. Project Description The following documentation has been designed for those looking to get more in depth with the skills they have, while I have tried to make it fairly beginner friendly some of what you will find in this project may not be beginner friendly and I strongly encourage those who want to use this tool for learning to make sure they have foundational knowledge in the areas they wish to explore further. The tech stack for this project is mainly .Net with Blazor as the frontend and .Net API using fast-endpoints as a backend. Additionally there is a console project that acts as a worker to handle messages put on a queue by the API, currently that is limited to sending emails out. From a devops perspective the apps all get containerized via the docker files and are pushed to a dockerhub repo. I chose to use DigitalOcean for hosting my cloud environment given my previous history with them as well as the better pricing for hosting a sql server and a k8s environment. Terraform was used to setup most of the cloud resources but some manual work is needed, such as setting up DNS and ssl certificates, etc. For more details please follow a link to the Introduction page."
  },
  "introduction.html": {
    "href": "introduction.html",
    "title": "Introduction",
    "keywords": "Introduction This is the first sentance in the preview"
  }
}