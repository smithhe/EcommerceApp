### YamlMime:ManagedReference
items:
- uid: Ecommerce.Application.Validators.Category.CreateCategoryValidator
  commentId: T:Ecommerce.Application.Validators.Category.CreateCategoryValidator
  id: CreateCategoryValidator
  parent: Ecommerce.Application.Validators.Category
  children:
  - Ecommerce.Application.Validators.Category.CreateCategoryValidator.#ctor(Ecommerce.Persistence.Contracts.ICategoryAsyncRepository)
  langs:
  - csharp
  - vb
  name: CreateCategoryValidator
  nameWithType: CreateCategoryValidator
  fullName: Ecommerce.Application.Validators.Category.CreateCategoryValidator
  type: Class
  source:
    remote:
      path: Core/Ecommerce.Application/Validators/Category/CreateCategoryValidator.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: CreateCategoryValidator
    path: ../../Core/Ecommerce.Application/Validators/Category/CreateCategoryValidator.cs
    startLine: 8
  assemblies:
  - Ecommerce.Application
  namespace: Ecommerce.Application.Validators.Category
  syntax:
    content: 'public class CreateCategoryValidator : AbstractValidator<CreateCategoryCommand>, IValidator<CreateCategoryCommand>, IValidator, IEnumerable<IValidationRule>, IEnumerable'
    content.vb: Public Class CreateCategoryValidator Inherits AbstractValidator(Of CreateCategoryCommand) Implements IValidator(Of CreateCategoryCommand), IValidator, IEnumerable(Of IValidationRule), IEnumerable
  inheritance:
  - System.Object
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  implements:
  - FluentValidation.IValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  - FluentValidation.IValidator
  - System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}
  - System.Collections.IEnumerable
  inheritedMembers:
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Validate(Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand)
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.ValidateAsync(Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Threading.CancellationToken)
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Validate(FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand})
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.ValidateAsync(FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Threading.CancellationToken)
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.CreateDescriptor
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,{TProperty}}})
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Transform``2(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,{TProperty}}},System.Func{{TProperty},{TTransformed}})
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Transform``2(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,{TProperty}}},System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,{TProperty},{TTransformed}})
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Collections.Generic.IEnumerable{{TElement}}}})
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Collections.Generic.IEnumerable{{TElement}}}},System.Func{{TElement},{TTransformed}})
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Collections.Generic.IEnumerable{{TElement}}}},System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,{TElement},{TTransformed}})
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RuleSet(System.String,System.Action)
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.When(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Boolean},System.Action)
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.When(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Boolean},System.Action)
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Unless(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Boolean},System.Action)
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Unless(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Boolean},System.Action)
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.WhenAsync(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.WhenAsync(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.UnlessAsync(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.UnlessAsync(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Include(FluentValidation.IValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand})
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Include``1(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,{TValidator}})
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.GetEnumerator
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.EnsureInstanceNotNull(System.Object)
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.PreValidate(FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},FluentValidation.Results.ValidationResult)
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RaiseValidationException(FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},FluentValidation.Results.ValidationResult)
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.OnRuleAdded(FluentValidation.IValidationRule{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand})
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.CascadeMode
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.ClassLevelCascadeMode
  - FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RuleLevelCascadeMode
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Ecommerce.Application.Validators.Category.CreateCategoryValidator.#ctor(Ecommerce.Persistence.Contracts.ICategoryAsyncRepository)
  commentId: M:Ecommerce.Application.Validators.Category.CreateCategoryValidator.#ctor(Ecommerce.Persistence.Contracts.ICategoryAsyncRepository)
  id: '#ctor(Ecommerce.Persistence.Contracts.ICategoryAsyncRepository)'
  parent: Ecommerce.Application.Validators.Category.CreateCategoryValidator
  langs:
  - csharp
  - vb
  name: CreateCategoryValidator(ICategoryAsyncRepository)
  nameWithType: CreateCategoryValidator.CreateCategoryValidator(ICategoryAsyncRepository)
  fullName: Ecommerce.Application.Validators.Category.CreateCategoryValidator.CreateCategoryValidator(Ecommerce.Persistence.Contracts.ICategoryAsyncRepository)
  type: Constructor
  source:
    remote:
      path: Core/Ecommerce.Application/Validators/Category/CreateCategoryValidator.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: .ctor
    path: ../../Core/Ecommerce.Application/Validators/Category/CreateCategoryValidator.cs
    startLine: 12
  assemblies:
  - Ecommerce.Application
  namespace: Ecommerce.Application.Validators.Category
  syntax:
    content: public CreateCategoryValidator(ICategoryAsyncRepository categoryAsyncRepository)
    parameters:
    - id: categoryAsyncRepository
      type: Ecommerce.Persistence.Contracts.ICategoryAsyncRepository
    content.vb: Public Sub New(categoryAsyncRepository As ICategoryAsyncRepository)
  overload: Ecommerce.Application.Validators.Category.CreateCategoryValidator.#ctor*
  nameWithType.vb: CreateCategoryValidator.New(ICategoryAsyncRepository)
  fullName.vb: Ecommerce.Application.Validators.Category.CreateCategoryValidator.New(Ecommerce.Persistence.Contracts.ICategoryAsyncRepository)
  name.vb: New(ICategoryAsyncRepository)
references:
- uid: Ecommerce.Application.Validators.Category
  commentId: N:Ecommerce.Application.Validators.Category
  href: Ecommerce.html
  name: Ecommerce.Application.Validators.Category
  nameWithType: Ecommerce.Application.Validators.Category
  fullName: Ecommerce.Application.Validators.Category
  spec.csharp:
  - uid: Ecommerce
    name: Ecommerce
    href: Ecommerce.html
  - name: .
  - uid: Ecommerce.Application
    name: Application
    href: Ecommerce.Application.html
  - name: .
  - uid: Ecommerce.Application.Validators
    name: Validators
    href: Ecommerce.Application.Validators.html
  - name: .
  - uid: Ecommerce.Application.Validators.Category
    name: Category
    href: Ecommerce.Application.Validators.Category.html
  spec.vb:
  - uid: Ecommerce
    name: Ecommerce
    href: Ecommerce.html
  - name: .
  - uid: Ecommerce.Application
    name: Application
    href: Ecommerce.Application.html
  - name: .
  - uid: Ecommerce.Application.Validators
    name: Validators
    href: Ecommerce.Application.Validators.html
  - name: .
  - uid: Ecommerce.Application.Validators.Category
    name: Category
    href: Ecommerce.Application.Validators.Category.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  commentId: T:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  parent: FluentValidation
  definition: FluentValidation.AbstractValidator`1
  href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  name: AbstractValidator<CreateCategoryCommand>
  nameWithType: AbstractValidator<CreateCategoryCommand>
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand)
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand)
  name.vb: AbstractValidator(Of CreateCategoryCommand)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1
    name: AbstractValidator
    isExternal: true
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: '>'
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1
    name: AbstractValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: )
- uid: FluentValidation.IValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  commentId: T:FluentValidation.IValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  parent: FluentValidation
  definition: FluentValidation.IValidator`1
  href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  name: IValidator<CreateCategoryCommand>
  nameWithType: IValidator<CreateCategoryCommand>
  fullName: FluentValidation.IValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>
  nameWithType.vb: IValidator(Of CreateCategoryCommand)
  fullName.vb: FluentValidation.IValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand)
  name.vb: IValidator(Of CreateCategoryCommand)
  spec.csharp:
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: '>'
  spec.vb:
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: )
- uid: FluentValidation.IValidator
  commentId: T:FluentValidation.IValidator
  parent: FluentValidation
  isExternal: true
  name: IValidator
  nameWithType: IValidator
  fullName: FluentValidation.IValidator
- uid: System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}
  commentId: T:System.Collections.Generic.IEnumerable{FluentValidation.IValidationRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IValidationRule>
  nameWithType: IEnumerable<IValidationRule>
  fullName: System.Collections.Generic.IEnumerable<FluentValidation.IValidationRule>
  nameWithType.vb: IEnumerable(Of IValidationRule)
  fullName.vb: System.Collections.Generic.IEnumerable(Of FluentValidation.IValidationRule)
  name.vb: IEnumerable(Of IValidationRule)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: FluentValidation.IValidationRule
    name: IValidationRule
    isExternal: true
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Validate(Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand)
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Validate(Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand)
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.Validate(`0)
  href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  name: Validate(CreateCategoryCommand)
  nameWithType: AbstractValidator<CreateCategoryCommand>.Validate(CreateCategoryCommand)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.Validate(Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).Validate(CreateCategoryCommand)
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).Validate(Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Validate(Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand)
    name: Validate
    isExternal: true
  - name: (
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Validate(Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand)
    name: Validate
    isExternal: true
  - name: (
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.ValidateAsync(Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Threading.CancellationToken)
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.ValidateAsync(Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Threading.CancellationToken)
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
  href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  name: ValidateAsync(CreateCategoryCommand, CancellationToken)
  nameWithType: AbstractValidator<CreateCategoryCommand>.ValidateAsync(CreateCategoryCommand, CancellationToken)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.ValidateAsync(Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).ValidateAsync(CreateCategoryCommand, CancellationToken)
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).ValidateAsync(Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.ValidateAsync(Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.ValidateAsync(Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Validate(FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand})
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Validate(FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand})
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
  href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  name: Validate(ValidationContext<CreateCategoryCommand>)
  nameWithType: AbstractValidator<CreateCategoryCommand>.Validate(ValidationContext<CreateCategoryCommand>)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.Validate(FluentValidation.ValidationContext<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).Validate(ValidationContext(Of CreateCategoryCommand))
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).Validate(FluentValidation.ValidationContext(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand))
  name.vb: Validate(ValidationContext(Of CreateCategoryCommand))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Validate(FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand})
    name: Validate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Validate(FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand})
    name: Validate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.ValidateAsync(FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Threading.CancellationToken)
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.ValidateAsync(FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Threading.CancellationToken)
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
  href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  name: ValidateAsync(ValidationContext<CreateCategoryCommand>, CancellationToken)
  nameWithType: AbstractValidator<CreateCategoryCommand>.ValidateAsync(ValidationContext<CreateCategoryCommand>, CancellationToken)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.ValidateAsync(FluentValidation.ValidationContext<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).ValidateAsync(ValidationContext(Of CreateCategoryCommand), CancellationToken)
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).ValidateAsync(FluentValidation.ValidationContext(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand), System.Threading.CancellationToken)
  name.vb: ValidateAsync(ValidationContext(Of CreateCategoryCommand), CancellationToken)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.ValidateAsync(FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.ValidateAsync(FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.CreateDescriptor
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.CreateDescriptor
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.CreateDescriptor
  name: CreateDescriptor()
  nameWithType: AbstractValidator<CreateCategoryCommand>.CreateDescriptor()
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.CreateDescriptor()
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).CreateDescriptor()
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).CreateDescriptor()
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.CreateDescriptor
    name: CreateDescriptor
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.CreateDescriptor
    name: CreateDescriptor
    isExternal: true
  - name: (
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,{TProperty}}})
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,``0}})
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: RuleFor<TProperty>(Expression<Func<CreateCategoryCommand, TProperty>>)
  nameWithType: AbstractValidator<CreateCategoryCommand>.RuleFor<TProperty>(Expression<Func<CreateCategoryCommand, TProperty>>)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.RuleFor<TProperty>(System.Linq.Expressions.Expression<System.Func<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, TProperty>>)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).RuleFor(Of TProperty)(Expression(Of Func(Of CreateCategoryCommand, TProperty)))
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).RuleFor(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, TProperty)))
  name.vb: RuleFor(Of TProperty)(Expression(Of Func(Of CreateCategoryCommand, TProperty)))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,``0}})
    name: RuleFor
    isExternal: true
  - name: <
  - name: TProperty
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,``0}})
    name: RuleFor
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Transform``2(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,{TProperty}}},System.Func{{TProperty},{TTransformed}})
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Transform``2(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,``0}},System.Func{``0,``1})
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Transform<TProperty, TTransformed>(Expression<Func<CreateCategoryCommand, TProperty>>, Func<TProperty, TTransformed>)
  nameWithType: AbstractValidator<CreateCategoryCommand>.Transform<TProperty, TTransformed>(Expression<Func<CreateCategoryCommand, TProperty>>, Func<TProperty, TTransformed>)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, TProperty>>, System.Func<TProperty, TTransformed>)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).Transform(Of TProperty, TTransformed)(Expression(Of Func(Of CreateCategoryCommand, TProperty)), Func(Of TProperty, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).Transform(Of TProperty, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, TProperty)), System.Func(Of TProperty, TTransformed))
  name.vb: Transform(Of TProperty, TTransformed)(Expression(Of Func(Of CreateCategoryCommand, TProperty)), Func(Of TProperty, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Transform``2(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,``0}},System.Func{``0,``1})
    name: Transform
    isExternal: true
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Transform``2(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,``0}},System.Func{``0,``1})
    name: Transform
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Transform``2(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,{TProperty}}},System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,{TProperty},{TTransformed}})
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Transform``2(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,``0}},System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,``0,``1})
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Transform<TProperty, TTransformed>(Expression<Func<CreateCategoryCommand, TProperty>>, Func<CreateCategoryCommand, TProperty, TTransformed>)
  nameWithType: AbstractValidator<CreateCategoryCommand>.Transform<TProperty, TTransformed>(Expression<Func<CreateCategoryCommand, TProperty>>, Func<CreateCategoryCommand, TProperty, TTransformed>)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, TProperty>>, System.Func<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, TProperty, TTransformed>)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).Transform(Of TProperty, TTransformed)(Expression(Of Func(Of CreateCategoryCommand, TProperty)), Func(Of CreateCategoryCommand, TProperty, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).Transform(Of TProperty, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, TProperty)), System.Func(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, TProperty, TTransformed))
  name.vb: Transform(Of TProperty, TTransformed)(Expression(Of Func(Of CreateCategoryCommand, TProperty)), Func(Of CreateCategoryCommand, TProperty, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Transform``2(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,``0}},System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,``0,``1})
    name: Transform
    isExternal: true
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Transform``2(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,``0}},System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,``0,``1})
    name: Transform
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Collections.Generic.IEnumerable{{TElement}}}})
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Collections.Generic.IEnumerable{``0}}})
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: RuleForEach<TElement>(Expression<Func<CreateCategoryCommand, IEnumerable<TElement>>>)
  nameWithType: AbstractValidator<CreateCategoryCommand>.RuleForEach<TElement>(Expression<Func<CreateCategoryCommand, IEnumerable<TElement>>>)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.RuleForEach<TElement>(System.Linq.Expressions.Expression<System.Func<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, System.Collections.Generic.IEnumerable<TElement>>>)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).RuleForEach(Of TElement)(Expression(Of Func(Of CreateCategoryCommand, IEnumerable(Of TElement))))
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).RuleForEach(Of TElement)(System.Linq.Expressions.Expression(Of System.Func(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, System.Collections.Generic.IEnumerable(Of TElement))))
  name.vb: RuleForEach(Of TElement)(Expression(Of Func(Of CreateCategoryCommand, IEnumerable(Of TElement))))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Collections.Generic.IEnumerable{{TElement}}}},System.Func{{TElement},{TTransformed}})
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: TransformForEach<TElement, TTransformed>(Expression<Func<CreateCategoryCommand, IEnumerable<TElement>>>, Func<TElement, TTransformed>)
  nameWithType: AbstractValidator<CreateCategoryCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateCategoryCommand, IEnumerable<TElement>>>, Func<TElement, TTransformed>)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<TElement, TTransformed>)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of CreateCategoryCommand, IEnumerable(Of TElement))), Func(Of TElement, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).TransformForEach(Of TElement, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, System.Collections.Generic.IEnumerable(Of TElement))), System.Func(Of TElement, TTransformed))
  name.vb: TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of CreateCategoryCommand, IEnumerable(Of TElement))), Func(Of TElement, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
    name: TransformForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
    name: TransformForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Collections.Generic.IEnumerable{{TElement}}}},System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,{TElement},{TTransformed}})
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Collections.Generic.IEnumerable{``0}}},System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,``0,``1})
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: TransformForEach<TElement, TTransformed>(Expression<Func<CreateCategoryCommand, IEnumerable<TElement>>>, Func<CreateCategoryCommand, TElement, TTransformed>)
  nameWithType: AbstractValidator<CreateCategoryCommand>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateCategoryCommand, IEnumerable<TElement>>>, Func<CreateCategoryCommand, TElement, TTransformed>)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, TElement, TTransformed>)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of CreateCategoryCommand, IEnumerable(Of TElement))), Func(Of CreateCategoryCommand, TElement, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).TransformForEach(Of TElement, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, System.Collections.Generic.IEnumerable(Of TElement))), System.Func(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, TElement, TTransformed))
  name.vb: TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of CreateCategoryCommand, IEnumerable(Of TElement))), Func(Of CreateCategoryCommand, TElement, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Collections.Generic.IEnumerable{``0}}},System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,``0,``1})
    name: TransformForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Collections.Generic.IEnumerable{``0}}},System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,``0,``1})
    name: TransformForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RuleSet(System.String,System.Action)
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RuleSet(System.String,System.Action)
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RuleSet(string, Action)
  nameWithType: AbstractValidator<CreateCategoryCommand>.RuleSet(string, Action)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.RuleSet(string, System.Action)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).RuleSet(String, Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).RuleSet(String, System.Action)
  name.vb: RuleSet(String, Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RuleSet(System.String,System.Action)
    name: RuleSet
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RuleSet(System.String,System.Action)
    name: RuleSet
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.When(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.When(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Boolean},System.Action)
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: When(Func<CreateCategoryCommand, bool>, Action)
  nameWithType: AbstractValidator<CreateCategoryCommand>.When(Func<CreateCategoryCommand, bool>, Action)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.When(System.Func<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).When(Func(Of CreateCategoryCommand, Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).When(System.Func(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, Boolean), System.Action)
  name.vb: When(Func(Of CreateCategoryCommand, Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.When(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.When(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.When(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.When(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Boolean},System.Action)
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: When(Func<CreateCategoryCommand, ValidationContext<CreateCategoryCommand>, bool>, Action)
  nameWithType: AbstractValidator<CreateCategoryCommand>.When(Func<CreateCategoryCommand, ValidationContext<CreateCategoryCommand>, bool>, Action)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.When(System.Func<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, FluentValidation.ValidationContext<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).When(Func(Of CreateCategoryCommand, ValidationContext(Of CreateCategoryCommand), Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).When(System.Func(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, FluentValidation.ValidationContext(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand), Boolean), System.Action)
  name.vb: When(Func(Of CreateCategoryCommand, ValidationContext(Of CreateCategoryCommand), Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.When(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.When(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Unless(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Unless(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Boolean},System.Action)
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Unless(Func<CreateCategoryCommand, bool>, Action)
  nameWithType: AbstractValidator<CreateCategoryCommand>.Unless(Func<CreateCategoryCommand, bool>, Action)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.Unless(System.Func<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).Unless(Func(Of CreateCategoryCommand, Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).Unless(System.Func(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, Boolean), System.Action)
  name.vb: Unless(Func(Of CreateCategoryCommand, Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Unless(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Unless(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Unless(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Unless(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Boolean},System.Action)
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Unless(Func<CreateCategoryCommand, ValidationContext<CreateCategoryCommand>, bool>, Action)
  nameWithType: AbstractValidator<CreateCategoryCommand>.Unless(Func<CreateCategoryCommand, ValidationContext<CreateCategoryCommand>, bool>, Action)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.Unless(System.Func<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, FluentValidation.ValidationContext<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).Unless(Func(Of CreateCategoryCommand, ValidationContext(Of CreateCategoryCommand), Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).Unless(System.Func(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, FluentValidation.ValidationContext(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand), Boolean), System.Action)
  name.vb: Unless(Func(Of CreateCategoryCommand, ValidationContext(Of CreateCategoryCommand), Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Unless(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Unless(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.WhenAsync(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.WhenAsync(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: WhenAsync(Func<CreateCategoryCommand, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<CreateCategoryCommand>.WhenAsync(Func<CreateCategoryCommand, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.WhenAsync(System.Func<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).WhenAsync(Func(Of CreateCategoryCommand, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).WhenAsync(System.Func(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of CreateCategoryCommand, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.WhenAsync(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.WhenAsync(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.WhenAsync(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.WhenAsync(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: WhenAsync(Func<CreateCategoryCommand, ValidationContext<CreateCategoryCommand>, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<CreateCategoryCommand>.WhenAsync(Func<CreateCategoryCommand, ValidationContext<CreateCategoryCommand>, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.WhenAsync(System.Func<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, FluentValidation.ValidationContext<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).WhenAsync(Func(Of CreateCategoryCommand, ValidationContext(Of CreateCategoryCommand), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).WhenAsync(System.Func(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, FluentValidation.ValidationContext(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of CreateCategoryCommand, ValidationContext(Of CreateCategoryCommand), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.WhenAsync(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.WhenAsync(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.UnlessAsync(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.UnlessAsync(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: UnlessAsync(Func<CreateCategoryCommand, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<CreateCategoryCommand>.UnlessAsync(Func<CreateCategoryCommand, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.UnlessAsync(System.Func<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).UnlessAsync(Func(Of CreateCategoryCommand, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).UnlessAsync(System.Func(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of CreateCategoryCommand, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.UnlessAsync(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.UnlessAsync(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.UnlessAsync(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.UnlessAsync(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: UnlessAsync(Func<CreateCategoryCommand, ValidationContext<CreateCategoryCommand>, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<CreateCategoryCommand>.UnlessAsync(Func<CreateCategoryCommand, ValidationContext<CreateCategoryCommand>, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.UnlessAsync(System.Func<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, FluentValidation.ValidationContext<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).UnlessAsync(Func(Of CreateCategoryCommand, ValidationContext(Of CreateCategoryCommand), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).UnlessAsync(System.Func(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, FluentValidation.ValidationContext(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of CreateCategoryCommand, ValidationContext(Of CreateCategoryCommand), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.UnlessAsync(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.UnlessAsync(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Include(FluentValidation.IValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand})
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Include(FluentValidation.IValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand})
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
  href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  name: Include(IValidator<CreateCategoryCommand>)
  nameWithType: AbstractValidator<CreateCategoryCommand>.Include(IValidator<CreateCategoryCommand>)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.Include(FluentValidation.IValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).Include(IValidator(Of CreateCategoryCommand))
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).Include(FluentValidation.IValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand))
  name.vb: Include(IValidator(Of CreateCategoryCommand))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Include(FluentValidation.IValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand})
    name: Include
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Include(FluentValidation.IValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand})
    name: Include
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Include``1(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,{TValidator}})
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Include``1(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,``0})
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Include<TValidator>(Func<CreateCategoryCommand, TValidator>)
  nameWithType: AbstractValidator<CreateCategoryCommand>.Include<TValidator>(Func<CreateCategoryCommand, TValidator>)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.Include<TValidator>(System.Func<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, TValidator>)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).Include(Of TValidator)(Func(Of CreateCategoryCommand, TValidator))
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).Include(Of TValidator)(System.Func(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand, TValidator))
  name.vb: Include(Of TValidator)(Func(Of CreateCategoryCommand, TValidator))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Include``1(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,``0})
    name: Include
    isExternal: true
  - name: <
  - name: TValidator
  - name: '>'
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - name: TValidator
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.Include``1(System.Func{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand,``0})
    name: Include
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValidator
  - name: )
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: ','
  - name: " "
  - name: TValidator
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.GetEnumerator
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.GetEnumerator
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: AbstractValidator<CreateCategoryCommand>.GetEnumerator()
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.GetEnumerator()
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).GetEnumerator()
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).GetEnumerator()
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.EnsureInstanceNotNull(System.Object)
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.EnsureInstanceNotNull(System.Object)
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: EnsureInstanceNotNull(object)
  nameWithType: AbstractValidator<CreateCategoryCommand>.EnsureInstanceNotNull(object)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.EnsureInstanceNotNull(object)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).EnsureInstanceNotNull(Object)
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).EnsureInstanceNotNull(Object)
  name.vb: EnsureInstanceNotNull(Object)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.EnsureInstanceNotNull(System.Object)
    name: EnsureInstanceNotNull
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.EnsureInstanceNotNull(System.Object)
    name: EnsureInstanceNotNull
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.PreValidate(FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},FluentValidation.Results.ValidationResult)
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.PreValidate(FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},FluentValidation.Results.ValidationResult)
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  name: PreValidate(ValidationContext<CreateCategoryCommand>, ValidationResult)
  nameWithType: AbstractValidator<CreateCategoryCommand>.PreValidate(ValidationContext<CreateCategoryCommand>, ValidationResult)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.PreValidate(FluentValidation.ValidationContext<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>, FluentValidation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).PreValidate(ValidationContext(Of CreateCategoryCommand), ValidationResult)
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).PreValidate(FluentValidation.ValidationContext(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand), FluentValidation.Results.ValidationResult)
  name.vb: PreValidate(ValidationContext(Of CreateCategoryCommand), ValidationResult)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.PreValidate(FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},FluentValidation.Results.ValidationResult)
    name: PreValidate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.PreValidate(FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},FluentValidation.Results.ValidationResult)
    name: PreValidate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RaiseValidationException(FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},FluentValidation.Results.ValidationResult)
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RaiseValidationException(FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},FluentValidation.Results.ValidationResult)
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  name: RaiseValidationException(ValidationContext<CreateCategoryCommand>, ValidationResult)
  nameWithType: AbstractValidator<CreateCategoryCommand>.RaiseValidationException(ValidationContext<CreateCategoryCommand>, ValidationResult)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.RaiseValidationException(FluentValidation.ValidationContext<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>, FluentValidation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).RaiseValidationException(ValidationContext(Of CreateCategoryCommand), ValidationResult)
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).RaiseValidationException(FluentValidation.ValidationContext(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand), FluentValidation.Results.ValidationResult)
  name.vb: RaiseValidationException(ValidationContext(Of CreateCategoryCommand), ValidationResult)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RaiseValidationException(FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},FluentValidation.Results.ValidationResult)
    name: RaiseValidationException
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RaiseValidationException(FluentValidation.ValidationContext{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand},FluentValidation.Results.ValidationResult)
    name: RaiseValidationException
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: )
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.OnRuleAdded(FluentValidation.IValidationRule{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand})
  commentId: M:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.OnRuleAdded(FluentValidation.IValidationRule{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand})
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
  href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  name: OnRuleAdded(IValidationRule<CreateCategoryCommand>)
  nameWithType: AbstractValidator<CreateCategoryCommand>.OnRuleAdded(IValidationRule<CreateCategoryCommand>)
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.OnRuleAdded(FluentValidation.IValidationRule<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>)
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).OnRuleAdded(IValidationRule(Of CreateCategoryCommand))
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).OnRuleAdded(FluentValidation.IValidationRule(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand))
  name.vb: OnRuleAdded(IValidationRule(Of CreateCategoryCommand))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.OnRuleAdded(FluentValidation.IValidationRule{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand})
    name: OnRuleAdded
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidationRule`1
    name: IValidationRule
    isExternal: true
  - name: <
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.OnRuleAdded(FluentValidation.IValidationRule{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand})
    name: OnRuleAdded
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidationRule`1
    name: IValidationRule
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand
    name: CreateCategoryCommand
    href: Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand.html
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.CascadeMode
  commentId: P:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.CascadeMode
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.CascadeMode
  name: CascadeMode
  nameWithType: AbstractValidator<CreateCategoryCommand>.CascadeMode
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.CascadeMode
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).CascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).CascadeMode
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.ClassLevelCascadeMode
  commentId: P:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.ClassLevelCascadeMode
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.ClassLevelCascadeMode
  name: ClassLevelCascadeMode
  nameWithType: AbstractValidator<CreateCategoryCommand>.ClassLevelCascadeMode
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.ClassLevelCascadeMode
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).ClassLevelCascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).ClassLevelCascadeMode
- uid: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RuleLevelCascadeMode
  commentId: P:FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}.RuleLevelCascadeMode
  parent: FluentValidation.AbstractValidator{Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand}
  definition: FluentValidation.AbstractValidator`1.RuleLevelCascadeMode
  name: RuleLevelCascadeMode
  nameWithType: AbstractValidator<CreateCategoryCommand>.RuleLevelCascadeMode
  fullName: FluentValidation.AbstractValidator<Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand>.RuleLevelCascadeMode
  nameWithType.vb: AbstractValidator(Of CreateCategoryCommand).RuleLevelCascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of Ecommerce.Application.Features.Category.Commands.CreateCategory.CreateCategoryCommand).RuleLevelCascadeMode
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: FluentValidation.AbstractValidator`1
  commentId: T:FluentValidation.AbstractValidator`1
  isExternal: true
  name: AbstractValidator<T>
  nameWithType: AbstractValidator<T>
  fullName: FluentValidation.AbstractValidator<T>
  nameWithType.vb: AbstractValidator(Of T)
  fullName.vb: FluentValidation.AbstractValidator(Of T)
  name.vb: AbstractValidator(Of T)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1
    name: AbstractValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1
    name: AbstractValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: FluentValidation
  commentId: N:FluentValidation
  isExternal: true
  name: FluentValidation
  nameWithType: FluentValidation
  fullName: FluentValidation
- uid: FluentValidation.IValidator`1
  commentId: T:FluentValidation.IValidator`1
  isExternal: true
  name: IValidator<T>
  nameWithType: IValidator<T>
  fullName: FluentValidation.IValidator<T>
  nameWithType.vb: IValidator(Of T)
  fullName.vb: FluentValidation.IValidator(Of T)
  name.vb: IValidator(Of T)
  spec.csharp:
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: FluentValidation.AbstractValidator`1.Validate(`0)
  commentId: M:FluentValidation.AbstractValidator`1.Validate(`0)
  isExternal: true
  name: Validate(T)
  nameWithType: AbstractValidator<T>.Validate(T)
  fullName: FluentValidation.AbstractValidator<T>.Validate(T)
  nameWithType.vb: AbstractValidator(Of T).Validate(T)
  fullName.vb: FluentValidation.AbstractValidator(Of T).Validate(T)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Validate(`0)
    name: Validate
    isExternal: true
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Validate(`0)
    name: Validate
    isExternal: true
  - name: (
  - name: T
  - name: )
- uid: FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
  commentId: M:FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: ValidateAsync(T, CancellationToken)
  nameWithType: AbstractValidator<T>.ValidateAsync(T, CancellationToken)
  fullName: FluentValidation.AbstractValidator<T>.ValidateAsync(T, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of T).ValidateAsync(T, CancellationToken)
  fullName.vb: FluentValidation.AbstractValidator(Of T).ValidateAsync(T, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
  commentId: M:FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
  isExternal: true
  name: Validate(ValidationContext<T>)
  nameWithType: AbstractValidator<T>.Validate(ValidationContext<T>)
  fullName: FluentValidation.AbstractValidator<T>.Validate(FluentValidation.ValidationContext<T>)
  nameWithType.vb: AbstractValidator(Of T).Validate(ValidationContext(Of T))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Validate(FluentValidation.ValidationContext(Of T))
  name.vb: Validate(ValidationContext(Of T))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
    name: Validate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Validate(FluentValidation.ValidationContext{`0})
    name: Validate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
  commentId: M:FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: ValidateAsync(ValidationContext<T>, CancellationToken)
  nameWithType: AbstractValidator<T>.ValidateAsync(ValidationContext<T>, CancellationToken)
  fullName: FluentValidation.AbstractValidator<T>.ValidateAsync(FluentValidation.ValidationContext<T>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of T).ValidateAsync(ValidationContext(Of T), CancellationToken)
  fullName.vb: FluentValidation.AbstractValidator(Of T).ValidateAsync(FluentValidation.ValidationContext(Of T), System.Threading.CancellationToken)
  name.vb: ValidateAsync(ValidationContext(Of T), CancellationToken)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.ValidateAsync(FluentValidation.ValidationContext{`0},System.Threading.CancellationToken)
    name: ValidateAsync
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: FluentValidation.AbstractValidator`1.CreateDescriptor
  commentId: M:FluentValidation.AbstractValidator`1.CreateDescriptor
  isExternal: true
  name: CreateDescriptor()
  nameWithType: AbstractValidator<T>.CreateDescriptor()
  fullName: FluentValidation.AbstractValidator<T>.CreateDescriptor()
  nameWithType.vb: AbstractValidator(Of T).CreateDescriptor()
  fullName.vb: FluentValidation.AbstractValidator(Of T).CreateDescriptor()
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.CreateDescriptor
    name: CreateDescriptor
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.CreateDescriptor
    name: CreateDescriptor
    isExternal: true
  - name: (
  - name: )
- uid: FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  commentId: M:FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: RuleFor<TProperty>(Expression<Func<T, TProperty>>)
  nameWithType: AbstractValidator<T>.RuleFor<TProperty>(Expression<Func<T, TProperty>>)
  fullName: FluentValidation.AbstractValidator<T>.RuleFor<TProperty>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>)
  nameWithType.vb: AbstractValidator(Of T).RuleFor(Of TProperty)(Expression(Of Func(Of T, TProperty)))
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleFor(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)))
  name.vb: RuleFor(Of TProperty)(Expression(Of Func(Of T, TProperty)))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
    name: RuleFor
    isExternal: true
  - name: <
  - name: TProperty
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
    name: RuleFor
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
  commentId: M:FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>)
  nameWithType: AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>)
  fullName: FluentValidation.AbstractValidator<T>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>, System.Func<TProperty, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of TProperty, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)), System.Func(Of TProperty, TTransformed))
  name.vb: Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of TProperty, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
    name: Transform
    isExternal: true
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
    name: Transform
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
  commentId: M:FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>)
  nameWithType: AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>)
  fullName: FluentValidation.AbstractValidator<T>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>, System.Func<T, TProperty, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of T, TProperty, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)), System.Func(Of T, TProperty, TTransformed))
  name.vb: Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of T, TProperty, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
    name: Transform
    isExternal: true
  - name: <
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
    name: Transform
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TProperty
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  commentId: M:FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>)
  nameWithType: AbstractValidator<T>.RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>)
  fullName: FluentValidation.AbstractValidator<T>.RuleForEach<TElement>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TElement>>>)
  nameWithType.vb: AbstractValidator(Of T).RuleForEach(Of TElement)(Expression(Of Func(Of T, IEnumerable(Of TElement))))
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleForEach(Of TElement)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TElement))))
  name.vb: RuleForEach(Of TElement)(Expression(Of Func(Of T, IEnumerable(Of TElement))))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
  commentId: M:FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>)
  nameWithType: AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>)
  fullName: FluentValidation.AbstractValidator<T>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<TElement, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of TElement, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TElement))), System.Func(Of TElement, TTransformed))
  name.vb: TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of TElement, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
    name: TransformForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
    name: TransformForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
  commentId: M:FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>)
  nameWithType: AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>)
  fullName: FluentValidation.AbstractValidator<T>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<T, TElement, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of T, TElement, TTransformed))
  fullName.vb: FluentValidation.AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TElement))), System.Func(Of T, TElement, TTransformed))
  name.vb: TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of T, TElement, TTransformed))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
    name: TransformForEach
    isExternal: true
  - name: <
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TElement
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
    name: TransformForEach
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TElement
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TElement
  - name: ','
  - name: " "
  - name: TTransformed
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RuleSet(string, Action)
  nameWithType: AbstractValidator<T>.RuleSet(string, Action)
  fullName: FluentValidation.AbstractValidator<T>.RuleSet(string, System.Action)
  nameWithType.vb: AbstractValidator(Of T).RuleSet(String, Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleSet(String, System.Action)
  name.vb: RuleSet(String, Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
    name: RuleSet
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.RuleSet(System.String,System.Action)
    name: RuleSet
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: When(Func<T, bool>, Action)
  nameWithType: AbstractValidator<T>.When(Func<T, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.When(System.Func<T, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).When(Func(Of T, Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).When(System.Func(Of T, Boolean), System.Action)
  name.vb: When(Func(Of T, Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: When(Func<T, ValidationContext<T>, bool>, Action)
  nameWithType: AbstractValidator<T>.When(Func<T, ValidationContext<T>, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.When(System.Func<T, FluentValidation.ValidationContext<T>, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).When(Func(Of T, ValidationContext(Of T), Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).When(System.Func(Of T, FluentValidation.ValidationContext(Of T), Boolean), System.Action)
  name.vb: When(Func(Of T, ValidationContext(Of T), Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.When(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: When
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Unless(Func<T, bool>, Action)
  nameWithType: AbstractValidator<T>.Unless(Func<T, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.Unless(System.Func<T, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).Unless(Func(Of T, Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).Unless(System.Func(Of T, Boolean), System.Action)
  name.vb: Unless(Func(Of T, Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Unless(Func<T, ValidationContext<T>, bool>, Action)
  nameWithType: AbstractValidator<T>.Unless(Func<T, ValidationContext<T>, bool>, Action)
  fullName: FluentValidation.AbstractValidator<T>.Unless(System.Func<T, FluentValidation.ValidationContext<T>, bool>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).Unless(Func(Of T, ValidationContext(Of T), Boolean), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).Unless(System.Func(Of T, FluentValidation.ValidationContext(Of T), Boolean), System.Action)
  name.vb: Unless(Func(Of T, ValidationContext(Of T), Boolean), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Unless(System.Func{`0,FluentValidation.ValidationContext{`0},System.Boolean},System.Action)
    name: Unless
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: WhenAsync(Func<T, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.WhenAsync(Func<T, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.WhenAsync(System.Func<T, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).WhenAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).WhenAsync(System.Func(Of T, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.WhenAsync(System.Func<T, FluentValidation.ValidationContext<T>, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).WhenAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).WhenAsync(System.Func(Of T, FluentValidation.ValidationContext(Of T), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.WhenAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.UnlessAsync(System.Func<T, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).UnlessAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).UnlessAsync(System.Func(Of T, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  nameWithType: AbstractValidator<T>.UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action)
  fullName: FluentValidation.AbstractValidator<T>.UnlessAsync(System.Func<T, FluentValidation.ValidationContext<T>, System.Threading.CancellationToken, System.Threading.Tasks.Task<bool>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).UnlessAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FluentValidation.AbstractValidator(Of T).UnlessAsync(System.Func(Of T, FluentValidation.ValidationContext(Of T), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.UnlessAsync(System.Func{`0,FluentValidation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    isExternal: true
  - name: (
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
  commentId: M:FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
  isExternal: true
  name: Include(IValidator<T>)
  nameWithType: AbstractValidator<T>.Include(IValidator<T>)
  fullName: FluentValidation.AbstractValidator<T>.Include(FluentValidation.IValidator<T>)
  nameWithType.vb: AbstractValidator(Of T).Include(IValidator(Of T))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Include(FluentValidation.IValidator(Of T))
  name.vb: Include(IValidator(Of T))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
    name: Include
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Include(FluentValidation.IValidator{`0})
    name: Include
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidator`1
    name: IValidator
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
  commentId: M:FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Include<TValidator>(Func<T, TValidator>)
  nameWithType: AbstractValidator<T>.Include<TValidator>(Func<T, TValidator>)
  fullName: FluentValidation.AbstractValidator<T>.Include<TValidator>(System.Func<T, TValidator>)
  nameWithType.vb: AbstractValidator(Of T).Include(Of TValidator)(Func(Of T, TValidator))
  fullName.vb: FluentValidation.AbstractValidator(Of T).Include(Of TValidator)(System.Func(Of T, TValidator))
  name.vb: Include(Of TValidator)(Func(Of T, TValidator))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
    name: Include
    isExternal: true
  - name: <
  - name: TValidator
  - name: '>'
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TValidator
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.Include``1(System.Func{`0,``0})
    name: Include
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValidator
  - name: )
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TValidator
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.GetEnumerator
  commentId: M:FluentValidation.AbstractValidator`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: AbstractValidator<T>.GetEnumerator()
  fullName: FluentValidation.AbstractValidator<T>.GetEnumerator()
  nameWithType.vb: AbstractValidator(Of T).GetEnumerator()
  fullName.vb: FluentValidation.AbstractValidator(Of T).GetEnumerator()
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
  - name: (
  - name: )
- uid: FluentValidation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
  commentId: M:FluentValidation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: EnsureInstanceNotNull(object)
  nameWithType: AbstractValidator<T>.EnsureInstanceNotNull(object)
  fullName: FluentValidation.AbstractValidator<T>.EnsureInstanceNotNull(object)
  nameWithType.vb: AbstractValidator(Of T).EnsureInstanceNotNull(Object)
  fullName.vb: FluentValidation.AbstractValidator(Of T).EnsureInstanceNotNull(Object)
  name.vb: EnsureInstanceNotNull(Object)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
    name: EnsureInstanceNotNull
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
    name: EnsureInstanceNotNull
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  commentId: M:FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  isExternal: true
  name: PreValidate(ValidationContext<T>, ValidationResult)
  nameWithType: AbstractValidator<T>.PreValidate(ValidationContext<T>, ValidationResult)
  fullName: FluentValidation.AbstractValidator<T>.PreValidate(FluentValidation.ValidationContext<T>, FluentValidation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of T).PreValidate(ValidationContext(Of T), ValidationResult)
  fullName.vb: FluentValidation.AbstractValidator(Of T).PreValidate(FluentValidation.ValidationContext(Of T), FluentValidation.Results.ValidationResult)
  name.vb: PreValidate(ValidationContext(Of T), ValidationResult)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: PreValidate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.PreValidate(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: PreValidate
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  commentId: M:FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
  isExternal: true
  name: RaiseValidationException(ValidationContext<T>, ValidationResult)
  nameWithType: AbstractValidator<T>.RaiseValidationException(ValidationContext<T>, ValidationResult)
  fullName: FluentValidation.AbstractValidator<T>.RaiseValidationException(FluentValidation.ValidationContext<T>, FluentValidation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of T).RaiseValidationException(ValidationContext(Of T), ValidationResult)
  fullName.vb: FluentValidation.AbstractValidator(Of T).RaiseValidationException(FluentValidation.ValidationContext(Of T), FluentValidation.Results.ValidationResult)
  name.vb: RaiseValidationException(ValidationContext(Of T), ValidationResult)
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: RaiseValidationException
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.RaiseValidationException(FluentValidation.ValidationContext{`0},FluentValidation.Results.ValidationResult)
    name: RaiseValidationException
    isExternal: true
  - name: (
  - uid: FluentValidation.ValidationContext`1
    name: ValidationContext
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: FluentValidation.Results.ValidationResult
    name: ValidationResult
    isExternal: true
  - name: )
- uid: FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
  commentId: M:FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
  isExternal: true
  name: OnRuleAdded(IValidationRule<T>)
  nameWithType: AbstractValidator<T>.OnRuleAdded(IValidationRule<T>)
  fullName: FluentValidation.AbstractValidator<T>.OnRuleAdded(FluentValidation.IValidationRule<T>)
  nameWithType.vb: AbstractValidator(Of T).OnRuleAdded(IValidationRule(Of T))
  fullName.vb: FluentValidation.AbstractValidator(Of T).OnRuleAdded(FluentValidation.IValidationRule(Of T))
  name.vb: OnRuleAdded(IValidationRule(Of T))
  spec.csharp:
  - uid: FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
    name: OnRuleAdded
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidationRule`1
    name: IValidationRule
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: FluentValidation.AbstractValidator`1.OnRuleAdded(FluentValidation.IValidationRule{`0})
    name: OnRuleAdded
    isExternal: true
  - name: (
  - uid: FluentValidation.IValidationRule`1
    name: IValidationRule
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: FluentValidation.AbstractValidator`1.CascadeMode
  commentId: P:FluentValidation.AbstractValidator`1.CascadeMode
  isExternal: true
  name: CascadeMode
  nameWithType: AbstractValidator<T>.CascadeMode
  fullName: FluentValidation.AbstractValidator<T>.CascadeMode
  nameWithType.vb: AbstractValidator(Of T).CascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of T).CascadeMode
- uid: FluentValidation.AbstractValidator`1.ClassLevelCascadeMode
  commentId: P:FluentValidation.AbstractValidator`1.ClassLevelCascadeMode
  isExternal: true
  name: ClassLevelCascadeMode
  nameWithType: AbstractValidator<T>.ClassLevelCascadeMode
  fullName: FluentValidation.AbstractValidator<T>.ClassLevelCascadeMode
  nameWithType.vb: AbstractValidator(Of T).ClassLevelCascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of T).ClassLevelCascadeMode
- uid: FluentValidation.AbstractValidator`1.RuleLevelCascadeMode
  commentId: P:FluentValidation.AbstractValidator`1.RuleLevelCascadeMode
  isExternal: true
  name: RuleLevelCascadeMode
  nameWithType: AbstractValidator<T>.RuleLevelCascadeMode
  fullName: FluentValidation.AbstractValidator<T>.RuleLevelCascadeMode
  nameWithType.vb: AbstractValidator(Of T).RuleLevelCascadeMode
  fullName.vb: FluentValidation.AbstractValidator(Of T).RuleLevelCascadeMode
- uid: Ecommerce.Application.Validators.Category.CreateCategoryValidator.#ctor*
  commentId: Overload:Ecommerce.Application.Validators.Category.CreateCategoryValidator.#ctor
  href: Ecommerce.Application.Validators.Category.CreateCategoryValidator.html#Ecommerce_Application_Validators_Category_CreateCategoryValidator__ctor_Ecommerce_Persistence_Contracts_ICategoryAsyncRepository_
  name: CreateCategoryValidator
  nameWithType: CreateCategoryValidator.CreateCategoryValidator
  fullName: Ecommerce.Application.Validators.Category.CreateCategoryValidator.CreateCategoryValidator
  nameWithType.vb: CreateCategoryValidator.New
  fullName.vb: Ecommerce.Application.Validators.Category.CreateCategoryValidator.New
  name.vb: New
- uid: Ecommerce.Persistence.Contracts.ICategoryAsyncRepository
  commentId: T:Ecommerce.Persistence.Contracts.ICategoryAsyncRepository
  parent: Ecommerce.Persistence.Contracts
  href: Ecommerce.Persistence.Contracts.ICategoryAsyncRepository.html
  name: ICategoryAsyncRepository
  nameWithType: ICategoryAsyncRepository
  fullName: Ecommerce.Persistence.Contracts.ICategoryAsyncRepository
- uid: Ecommerce.Persistence.Contracts
  commentId: N:Ecommerce.Persistence.Contracts
  href: Ecommerce.html
  name: Ecommerce.Persistence.Contracts
  nameWithType: Ecommerce.Persistence.Contracts
  fullName: Ecommerce.Persistence.Contracts
  spec.csharp:
  - uid: Ecommerce
    name: Ecommerce
    href: Ecommerce.html
  - name: .
  - uid: Ecommerce.Persistence
    name: Persistence
    href: Ecommerce.Persistence.html
  - name: .
  - uid: Ecommerce.Persistence.Contracts
    name: Contracts
    href: Ecommerce.Persistence.Contracts.html
  spec.vb:
  - uid: Ecommerce
    name: Ecommerce
    href: Ecommerce.html
  - name: .
  - uid: Ecommerce.Persistence
    name: Persistence
    href: Ecommerce.Persistence.html
  - name: .
  - uid: Ecommerce.Persistence.Contracts
    name: Contracts
    href: Ecommerce.Persistence.Contracts.html
