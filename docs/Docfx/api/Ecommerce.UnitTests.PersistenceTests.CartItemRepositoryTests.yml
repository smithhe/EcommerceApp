### YamlMime:ManagedReference
items:
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  commentId: T:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  id: CartItemRepositoryTests
  parent: Ecommerce.UnitTests.PersistenceTests
  children:
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WhenExceptionThrown_ShouldReturnMinusOne
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WithExistingCartItem_ShouldReturnMinusOne
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WithNewCartItem_ShouldReturnId
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenCartItemExists_ShouldReturnTrue
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenExceptionThrown_ShouldReturnFalse
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenNoCartItemExists_ShouldReturnFalse
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenCartItemDoesNotExist_ShouldReturnFalse
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenCartItemExists_ShouldReturnTrue
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenExceptionThrown_ShouldReturnFalse
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenCartItemDoesNotExist_ShouldReturnNull
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenCartItemExists_ShouldReturnCartItem
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenExceptionThrown_ShouldReturnNull
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenCartItemsExist_ShouldReturnCartItems
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenExceptionThrown_ShouldReturnNull
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenNoCartItemsExist_ShouldReturnEmptyList
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenCartItemsExist_ShouldReturnTrue
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenExceptionThrown_ShouldReturnFalse
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenNoCartItemsExist_ShouldReturnFalse
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.Setup
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.TearDown
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WhenCartItemDoesNotExist_ShouldReturnFalse
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WhenExceptionThrown_ShouldReturnFalse
  - Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WithExistingCartItem_ShouldReturnTrue
  langs:
  - csharp
  - vb
  name: CartItemRepositoryTests
  nameWithType: CartItemRepositoryTests
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  type: Class
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: CartItemRepositoryTests
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 18
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [TestFixture]

      public class CartItemRepositoryTests
    content.vb: >-
      <TestFixture>

      Public Class CartItemRepositoryTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: NUnit.Framework.TestFixtureAttribute
    ctor: NUnit.Framework.TestFixtureAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.Setup
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.Setup
  id: Setup
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: Setup()
  nameWithType: CartItemRepositoryTests.Setup()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.Setup()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: Setup
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 56
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [SetUp]

      public void Setup()
    content.vb: >-
      <SetUp>

      Public Sub Setup()
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.Setup*
  attributes:
  - type: NUnit.Framework.SetUpAttribute
    ctor: NUnit.Framework.SetUpAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.TearDown
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.TearDown
  id: TearDown
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: TearDown()
  nameWithType: CartItemRepositoryTests.TearDown()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.TearDown()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: TearDown
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 75
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [TearDown]

      public void TearDown()
    content.vb: >-
      <TearDown>

      Public Sub TearDown()
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.TearDown*
  attributes:
  - type: NUnit.Framework.TearDownAttribute
    ctor: NUnit.Framework.TearDownAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenCartItemExists_ShouldReturnCartItem
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenCartItemExists_ShouldReturnCartItem
  id: GetByIdAsync_WhenCartItemExists_ShouldReturnCartItem
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: GetByIdAsync_WhenCartItemExists_ShouldReturnCartItem()
  nameWithType: CartItemRepositoryTests.GetByIdAsync_WhenCartItemExists_ShouldReturnCartItem()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenCartItemExists_ShouldReturnCartItem()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: GetByIdAsync_WhenCartItemExists_ShouldReturnCartItem
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 84
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task GetByIdAsync_WhenCartItemExists_ShouldReturnCartItem()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function GetByIdAsync_WhenCartItemExists_ShouldReturnCartItem() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenCartItemExists_ShouldReturnCartItem*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenCartItemDoesNotExist_ShouldReturnNull
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenCartItemDoesNotExist_ShouldReturnNull
  id: GetByIdAsync_WhenCartItemDoesNotExist_ShouldReturnNull
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: GetByIdAsync_WhenCartItemDoesNotExist_ShouldReturnNull()
  nameWithType: CartItemRepositoryTests.GetByIdAsync_WhenCartItemDoesNotExist_ShouldReturnNull()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenCartItemDoesNotExist_ShouldReturnNull()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: GetByIdAsync_WhenCartItemDoesNotExist_ShouldReturnNull
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 108
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task GetByIdAsync_WhenCartItemDoesNotExist_ShouldReturnNull()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function GetByIdAsync_WhenCartItemDoesNotExist_ShouldReturnNull() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenCartItemDoesNotExist_ShouldReturnNull*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenExceptionThrown_ShouldReturnNull
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenExceptionThrown_ShouldReturnNull
  id: GetByIdAsync_WhenExceptionThrown_ShouldReturnNull
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: GetByIdAsync_WhenExceptionThrown_ShouldReturnNull()
  nameWithType: CartItemRepositoryTests.GetByIdAsync_WhenExceptionThrown_ShouldReturnNull()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenExceptionThrown_ShouldReturnNull()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: GetByIdAsync_WhenExceptionThrown_ShouldReturnNull
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 121
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task GetByIdAsync_WhenExceptionThrown_ShouldReturnNull()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function GetByIdAsync_WhenExceptionThrown_ShouldReturnNull() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenExceptionThrown_ShouldReturnNull*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WithNewCartItem_ShouldReturnId
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WithNewCartItem_ShouldReturnId
  id: AddAsync_WithNewCartItem_ShouldReturnId
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: AddAsync_WithNewCartItem_ShouldReturnId()
  nameWithType: CartItemRepositoryTests.AddAsync_WithNewCartItem_ShouldReturnId()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WithNewCartItem_ShouldReturnId()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: AddAsync_WithNewCartItem_ShouldReturnId
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 150
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task AddAsync_WithNewCartItem_ShouldReturnId()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function AddAsync_WithNewCartItem_ShouldReturnId() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WithNewCartItem_ShouldReturnId*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WithExistingCartItem_ShouldReturnMinusOne
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WithExistingCartItem_ShouldReturnMinusOne
  id: AddAsync_WithExistingCartItem_ShouldReturnMinusOne
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: AddAsync_WithExistingCartItem_ShouldReturnMinusOne()
  nameWithType: CartItemRepositoryTests.AddAsync_WithExistingCartItem_ShouldReturnMinusOne()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WithExistingCartItem_ShouldReturnMinusOne()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: AddAsync_WithExistingCartItem_ShouldReturnMinusOne
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 172
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task AddAsync_WithExistingCartItem_ShouldReturnMinusOne()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function AddAsync_WithExistingCartItem_ShouldReturnMinusOne() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WithExistingCartItem_ShouldReturnMinusOne*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WhenExceptionThrown_ShouldReturnMinusOne
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WhenExceptionThrown_ShouldReturnMinusOne
  id: AddAsync_WhenExceptionThrown_ShouldReturnMinusOne
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: AddAsync_WhenExceptionThrown_ShouldReturnMinusOne()
  nameWithType: CartItemRepositoryTests.AddAsync_WhenExceptionThrown_ShouldReturnMinusOne()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WhenExceptionThrown_ShouldReturnMinusOne()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: AddAsync_WhenExceptionThrown_ShouldReturnMinusOne
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 185
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task AddAsync_WhenExceptionThrown_ShouldReturnMinusOne()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function AddAsync_WhenExceptionThrown_ShouldReturnMinusOne() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WhenExceptionThrown_ShouldReturnMinusOne*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WithExistingCartItem_ShouldReturnTrue
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WithExistingCartItem_ShouldReturnTrue
  id: UpdateAsync_WithExistingCartItem_ShouldReturnTrue
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: UpdateAsync_WithExistingCartItem_ShouldReturnTrue()
  nameWithType: CartItemRepositoryTests.UpdateAsync_WithExistingCartItem_ShouldReturnTrue()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WithExistingCartItem_ShouldReturnTrue()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: UpdateAsync_WithExistingCartItem_ShouldReturnTrue
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 220
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task UpdateAsync_WithExistingCartItem_ShouldReturnTrue()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function UpdateAsync_WithExistingCartItem_ShouldReturnTrue() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WithExistingCartItem_ShouldReturnTrue*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WhenCartItemDoesNotExist_ShouldReturnFalse
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WhenCartItemDoesNotExist_ShouldReturnFalse
  id: UpdateAsync_WhenCartItemDoesNotExist_ShouldReturnFalse
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: UpdateAsync_WhenCartItemDoesNotExist_ShouldReturnFalse()
  nameWithType: CartItemRepositoryTests.UpdateAsync_WhenCartItemDoesNotExist_ShouldReturnFalse()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WhenCartItemDoesNotExist_ShouldReturnFalse()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: UpdateAsync_WhenCartItemDoesNotExist_ShouldReturnFalse
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 234
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task UpdateAsync_WhenCartItemDoesNotExist_ShouldReturnFalse()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function UpdateAsync_WhenCartItemDoesNotExist_ShouldReturnFalse() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WhenCartItemDoesNotExist_ShouldReturnFalse*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WhenExceptionThrown_ShouldReturnFalse
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WhenExceptionThrown_ShouldReturnFalse
  id: UpdateAsync_WhenExceptionThrown_ShouldReturnFalse
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: UpdateAsync_WhenExceptionThrown_ShouldReturnFalse()
  nameWithType: CartItemRepositoryTests.UpdateAsync_WhenExceptionThrown_ShouldReturnFalse()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WhenExceptionThrown_ShouldReturnFalse()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: UpdateAsync_WhenExceptionThrown_ShouldReturnFalse
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 247
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task UpdateAsync_WhenExceptionThrown_ShouldReturnFalse()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function UpdateAsync_WhenExceptionThrown_ShouldReturnFalse() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WhenExceptionThrown_ShouldReturnFalse*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenCartItemExists_ShouldReturnTrue
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenCartItemExists_ShouldReturnTrue
  id: DeleteAsync_WhenCartItemExists_ShouldReturnTrue
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: DeleteAsync_WhenCartItemExists_ShouldReturnTrue()
  nameWithType: CartItemRepositoryTests.DeleteAsync_WhenCartItemExists_ShouldReturnTrue()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenCartItemExists_ShouldReturnTrue()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: DeleteAsync_WhenCartItemExists_ShouldReturnTrue
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 280
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task DeleteAsync_WhenCartItemExists_ShouldReturnTrue()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function DeleteAsync_WhenCartItemExists_ShouldReturnTrue() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenCartItemExists_ShouldReturnTrue*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenCartItemDoesNotExist_ShouldReturnFalse
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenCartItemDoesNotExist_ShouldReturnFalse
  id: DeleteAsync_WhenCartItemDoesNotExist_ShouldReturnFalse
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: DeleteAsync_WhenCartItemDoesNotExist_ShouldReturnFalse()
  nameWithType: CartItemRepositoryTests.DeleteAsync_WhenCartItemDoesNotExist_ShouldReturnFalse()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenCartItemDoesNotExist_ShouldReturnFalse()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: DeleteAsync_WhenCartItemDoesNotExist_ShouldReturnFalse
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 293
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task DeleteAsync_WhenCartItemDoesNotExist_ShouldReturnFalse()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function DeleteAsync_WhenCartItemDoesNotExist_ShouldReturnFalse() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenCartItemDoesNotExist_ShouldReturnFalse*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenExceptionThrown_ShouldReturnFalse
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenExceptionThrown_ShouldReturnFalse
  id: DeleteAsync_WhenExceptionThrown_ShouldReturnFalse
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: DeleteAsync_WhenExceptionThrown_ShouldReturnFalse()
  nameWithType: CartItemRepositoryTests.DeleteAsync_WhenExceptionThrown_ShouldReturnFalse()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenExceptionThrown_ShouldReturnFalse()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: DeleteAsync_WhenExceptionThrown_ShouldReturnFalse
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 306
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task DeleteAsync_WhenExceptionThrown_ShouldReturnFalse()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function DeleteAsync_WhenExceptionThrown_ShouldReturnFalse() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenExceptionThrown_ShouldReturnFalse*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenCartItemsExist_ShouldReturnCartItems
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenCartItemsExist_ShouldReturnCartItems
  id: ListAllAsync_WhenCartItemsExist_ShouldReturnCartItems
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: ListAllAsync_WhenCartItemsExist_ShouldReturnCartItems()
  nameWithType: CartItemRepositoryTests.ListAllAsync_WhenCartItemsExist_ShouldReturnCartItems()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenCartItemsExist_ShouldReturnCartItems()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: ListAllAsync_WhenCartItemsExist_ShouldReturnCartItems
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 341
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task ListAllAsync_WhenCartItemsExist_ShouldReturnCartItems()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function ListAllAsync_WhenCartItemsExist_ShouldReturnCartItems() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenCartItemsExist_ShouldReturnCartItems*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenNoCartItemsExist_ShouldReturnEmptyList
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenNoCartItemsExist_ShouldReturnEmptyList
  id: ListAllAsync_WhenNoCartItemsExist_ShouldReturnEmptyList
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: ListAllAsync_WhenNoCartItemsExist_ShouldReturnEmptyList()
  nameWithType: CartItemRepositoryTests.ListAllAsync_WhenNoCartItemsExist_ShouldReturnEmptyList()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenNoCartItemsExist_ShouldReturnEmptyList()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: ListAllAsync_WhenNoCartItemsExist_ShouldReturnEmptyList
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 355
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task ListAllAsync_WhenNoCartItemsExist_ShouldReturnEmptyList()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function ListAllAsync_WhenNoCartItemsExist_ShouldReturnEmptyList() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenNoCartItemsExist_ShouldReturnEmptyList*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenExceptionThrown_ShouldReturnNull
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenExceptionThrown_ShouldReturnNull
  id: ListAllAsync_WhenExceptionThrown_ShouldReturnNull
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: ListAllAsync_WhenExceptionThrown_ShouldReturnNull()
  nameWithType: CartItemRepositoryTests.ListAllAsync_WhenExceptionThrown_ShouldReturnNull()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenExceptionThrown_ShouldReturnNull()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: ListAllAsync_WhenExceptionThrown_ShouldReturnNull
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 371
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task ListAllAsync_WhenExceptionThrown_ShouldReturnNull()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function ListAllAsync_WhenExceptionThrown_ShouldReturnNull() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenExceptionThrown_ShouldReturnNull*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenCartItemsExist_ShouldReturnTrue
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenCartItemsExist_ShouldReturnTrue
  id: RemoveUserCartItems_WhenCartItemsExist_ShouldReturnTrue
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: RemoveUserCartItems_WhenCartItemsExist_ShouldReturnTrue()
  nameWithType: CartItemRepositoryTests.RemoveUserCartItems_WhenCartItemsExist_ShouldReturnTrue()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenCartItemsExist_ShouldReturnTrue()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: RemoveUserCartItems_WhenCartItemsExist_ShouldReturnTrue
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 399
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task RemoveUserCartItems_WhenCartItemsExist_ShouldReturnTrue()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function RemoveUserCartItems_WhenCartItemsExist_ShouldReturnTrue() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenCartItemsExist_ShouldReturnTrue*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenNoCartItemsExist_ShouldReturnFalse
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenNoCartItemsExist_ShouldReturnFalse
  id: RemoveUserCartItems_WhenNoCartItemsExist_ShouldReturnFalse
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: RemoveUserCartItems_WhenNoCartItemsExist_ShouldReturnFalse()
  nameWithType: CartItemRepositoryTests.RemoveUserCartItems_WhenNoCartItemsExist_ShouldReturnFalse()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenNoCartItemsExist_ShouldReturnFalse()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: RemoveUserCartItems_WhenNoCartItemsExist_ShouldReturnFalse
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 412
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task RemoveUserCartItems_WhenNoCartItemsExist_ShouldReturnFalse()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function RemoveUserCartItems_WhenNoCartItemsExist_ShouldReturnFalse() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenNoCartItemsExist_ShouldReturnFalse*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenExceptionThrown_ShouldReturnFalse
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenExceptionThrown_ShouldReturnFalse
  id: RemoveUserCartItems_WhenExceptionThrown_ShouldReturnFalse
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: RemoveUserCartItems_WhenExceptionThrown_ShouldReturnFalse()
  nameWithType: CartItemRepositoryTests.RemoveUserCartItems_WhenExceptionThrown_ShouldReturnFalse()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenExceptionThrown_ShouldReturnFalse()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: RemoveUserCartItems_WhenExceptionThrown_ShouldReturnFalse
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 425
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task RemoveUserCartItems_WhenExceptionThrown_ShouldReturnFalse()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function RemoveUserCartItems_WhenExceptionThrown_ShouldReturnFalse() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenExceptionThrown_ShouldReturnFalse*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenCartItemExists_ShouldReturnTrue
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenCartItemExists_ShouldReturnTrue
  id: CartItemExistsForUser_WhenCartItemExists_ShouldReturnTrue
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: CartItemExistsForUser_WhenCartItemExists_ShouldReturnTrue()
  nameWithType: CartItemRepositoryTests.CartItemExistsForUser_WhenCartItemExists_ShouldReturnTrue()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenCartItemExists_ShouldReturnTrue()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: CartItemExistsForUser_WhenCartItemExists_ShouldReturnTrue
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 460
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task CartItemExistsForUser_WhenCartItemExists_ShouldReturnTrue()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function CartItemExistsForUser_WhenCartItemExists_ShouldReturnTrue() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenCartItemExists_ShouldReturnTrue*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenNoCartItemExists_ShouldReturnFalse
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenNoCartItemExists_ShouldReturnFalse
  id: CartItemExistsForUser_WhenNoCartItemExists_ShouldReturnFalse
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: CartItemExistsForUser_WhenNoCartItemExists_ShouldReturnFalse()
  nameWithType: CartItemRepositoryTests.CartItemExistsForUser_WhenNoCartItemExists_ShouldReturnFalse()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenNoCartItemExists_ShouldReturnFalse()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: CartItemExistsForUser_WhenNoCartItemExists_ShouldReturnFalse
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 473
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task CartItemExistsForUser_WhenNoCartItemExists_ShouldReturnFalse()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function CartItemExistsForUser_WhenNoCartItemExists_ShouldReturnFalse() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenNoCartItemExists_ShouldReturnFalse*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenExceptionThrown_ShouldReturnFalse
  commentId: M:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenExceptionThrown_ShouldReturnFalse
  id: CartItemExistsForUser_WhenExceptionThrown_ShouldReturnFalse
  parent: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests
  langs:
  - csharp
  - vb
  name: CartItemExistsForUser_WhenExceptionThrown_ShouldReturnFalse()
  nameWithType: CartItemRepositoryTests.CartItemExistsForUser_WhenExceptionThrown_ShouldReturnFalse()
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenExceptionThrown_ShouldReturnFalse()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: CartItemExistsForUser_WhenExceptionThrown_ShouldReturnFalse
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/CartItemRepositoryTests.cs
    startLine: 486
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task CartItemExistsForUser_WhenExceptionThrown_ShouldReturnFalse()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function CartItemExistsForUser_WhenExceptionThrown_ShouldReturnFalse() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenExceptionThrown_ShouldReturnFalse*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
references:
- uid: Ecommerce.UnitTests.PersistenceTests
  commentId: N:Ecommerce.UnitTests.PersistenceTests
  href: Ecommerce.html
  name: Ecommerce.UnitTests.PersistenceTests
  nameWithType: Ecommerce.UnitTests.PersistenceTests
  fullName: Ecommerce.UnitTests.PersistenceTests
  spec.csharp:
  - uid: Ecommerce
    name: Ecommerce
    href: Ecommerce.html
  - name: .
  - uid: Ecommerce.UnitTests
    name: UnitTests
    href: Ecommerce.UnitTests.html
  - name: .
  - uid: Ecommerce.UnitTests.PersistenceTests
    name: PersistenceTests
    href: Ecommerce.UnitTests.PersistenceTests.html
  spec.vb:
  - uid: Ecommerce
    name: Ecommerce
    href: Ecommerce.html
  - name: .
  - uid: Ecommerce.UnitTests
    name: UnitTests
    href: Ecommerce.UnitTests.html
  - name: .
  - uid: Ecommerce.UnitTests.PersistenceTests
    name: PersistenceTests
    href: Ecommerce.UnitTests.PersistenceTests.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.Setup*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.Setup
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_Setup
  name: Setup
  nameWithType: CartItemRepositoryTests.Setup
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.Setup
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.TearDown*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.TearDown
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_TearDown
  name: TearDown
  nameWithType: CartItemRepositoryTests.TearDown
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.TearDown
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenCartItemExists_ShouldReturnCartItem*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenCartItemExists_ShouldReturnCartItem
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_GetByIdAsync_WhenCartItemExists_ShouldReturnCartItem
  name: GetByIdAsync_WhenCartItemExists_ShouldReturnCartItem
  nameWithType: CartItemRepositoryTests.GetByIdAsync_WhenCartItemExists_ShouldReturnCartItem
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenCartItemExists_ShouldReturnCartItem
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenCartItemDoesNotExist_ShouldReturnNull*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenCartItemDoesNotExist_ShouldReturnNull
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_GetByIdAsync_WhenCartItemDoesNotExist_ShouldReturnNull
  name: GetByIdAsync_WhenCartItemDoesNotExist_ShouldReturnNull
  nameWithType: CartItemRepositoryTests.GetByIdAsync_WhenCartItemDoesNotExist_ShouldReturnNull
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenCartItemDoesNotExist_ShouldReturnNull
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenExceptionThrown_ShouldReturnNull*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenExceptionThrown_ShouldReturnNull
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_GetByIdAsync_WhenExceptionThrown_ShouldReturnNull
  name: GetByIdAsync_WhenExceptionThrown_ShouldReturnNull
  nameWithType: CartItemRepositoryTests.GetByIdAsync_WhenExceptionThrown_ShouldReturnNull
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.GetByIdAsync_WhenExceptionThrown_ShouldReturnNull
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WithNewCartItem_ShouldReturnId*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WithNewCartItem_ShouldReturnId
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_AddAsync_WithNewCartItem_ShouldReturnId
  name: AddAsync_WithNewCartItem_ShouldReturnId
  nameWithType: CartItemRepositoryTests.AddAsync_WithNewCartItem_ShouldReturnId
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WithNewCartItem_ShouldReturnId
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WithExistingCartItem_ShouldReturnMinusOne*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WithExistingCartItem_ShouldReturnMinusOne
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_AddAsync_WithExistingCartItem_ShouldReturnMinusOne
  name: AddAsync_WithExistingCartItem_ShouldReturnMinusOne
  nameWithType: CartItemRepositoryTests.AddAsync_WithExistingCartItem_ShouldReturnMinusOne
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WithExistingCartItem_ShouldReturnMinusOne
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WhenExceptionThrown_ShouldReturnMinusOne*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WhenExceptionThrown_ShouldReturnMinusOne
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_AddAsync_WhenExceptionThrown_ShouldReturnMinusOne
  name: AddAsync_WhenExceptionThrown_ShouldReturnMinusOne
  nameWithType: CartItemRepositoryTests.AddAsync_WhenExceptionThrown_ShouldReturnMinusOne
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.AddAsync_WhenExceptionThrown_ShouldReturnMinusOne
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WithExistingCartItem_ShouldReturnTrue*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WithExistingCartItem_ShouldReturnTrue
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_UpdateAsync_WithExistingCartItem_ShouldReturnTrue
  name: UpdateAsync_WithExistingCartItem_ShouldReturnTrue
  nameWithType: CartItemRepositoryTests.UpdateAsync_WithExistingCartItem_ShouldReturnTrue
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WithExistingCartItem_ShouldReturnTrue
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WhenCartItemDoesNotExist_ShouldReturnFalse*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WhenCartItemDoesNotExist_ShouldReturnFalse
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_UpdateAsync_WhenCartItemDoesNotExist_ShouldReturnFalse
  name: UpdateAsync_WhenCartItemDoesNotExist_ShouldReturnFalse
  nameWithType: CartItemRepositoryTests.UpdateAsync_WhenCartItemDoesNotExist_ShouldReturnFalse
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WhenCartItemDoesNotExist_ShouldReturnFalse
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WhenExceptionThrown_ShouldReturnFalse*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WhenExceptionThrown_ShouldReturnFalse
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_UpdateAsync_WhenExceptionThrown_ShouldReturnFalse
  name: UpdateAsync_WhenExceptionThrown_ShouldReturnFalse
  nameWithType: CartItemRepositoryTests.UpdateAsync_WhenExceptionThrown_ShouldReturnFalse
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.UpdateAsync_WhenExceptionThrown_ShouldReturnFalse
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenCartItemExists_ShouldReturnTrue*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenCartItemExists_ShouldReturnTrue
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_DeleteAsync_WhenCartItemExists_ShouldReturnTrue
  name: DeleteAsync_WhenCartItemExists_ShouldReturnTrue
  nameWithType: CartItemRepositoryTests.DeleteAsync_WhenCartItemExists_ShouldReturnTrue
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenCartItemExists_ShouldReturnTrue
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenCartItemDoesNotExist_ShouldReturnFalse*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenCartItemDoesNotExist_ShouldReturnFalse
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_DeleteAsync_WhenCartItemDoesNotExist_ShouldReturnFalse
  name: DeleteAsync_WhenCartItemDoesNotExist_ShouldReturnFalse
  nameWithType: CartItemRepositoryTests.DeleteAsync_WhenCartItemDoesNotExist_ShouldReturnFalse
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenCartItemDoesNotExist_ShouldReturnFalse
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenExceptionThrown_ShouldReturnFalse*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenExceptionThrown_ShouldReturnFalse
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_DeleteAsync_WhenExceptionThrown_ShouldReturnFalse
  name: DeleteAsync_WhenExceptionThrown_ShouldReturnFalse
  nameWithType: CartItemRepositoryTests.DeleteAsync_WhenExceptionThrown_ShouldReturnFalse
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.DeleteAsync_WhenExceptionThrown_ShouldReturnFalse
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenCartItemsExist_ShouldReturnCartItems*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenCartItemsExist_ShouldReturnCartItems
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_ListAllAsync_WhenCartItemsExist_ShouldReturnCartItems
  name: ListAllAsync_WhenCartItemsExist_ShouldReturnCartItems
  nameWithType: CartItemRepositoryTests.ListAllAsync_WhenCartItemsExist_ShouldReturnCartItems
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenCartItemsExist_ShouldReturnCartItems
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenNoCartItemsExist_ShouldReturnEmptyList*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenNoCartItemsExist_ShouldReturnEmptyList
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_ListAllAsync_WhenNoCartItemsExist_ShouldReturnEmptyList
  name: ListAllAsync_WhenNoCartItemsExist_ShouldReturnEmptyList
  nameWithType: CartItemRepositoryTests.ListAllAsync_WhenNoCartItemsExist_ShouldReturnEmptyList
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenNoCartItemsExist_ShouldReturnEmptyList
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenExceptionThrown_ShouldReturnNull*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenExceptionThrown_ShouldReturnNull
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_ListAllAsync_WhenExceptionThrown_ShouldReturnNull
  name: ListAllAsync_WhenExceptionThrown_ShouldReturnNull
  nameWithType: CartItemRepositoryTests.ListAllAsync_WhenExceptionThrown_ShouldReturnNull
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.ListAllAsync_WhenExceptionThrown_ShouldReturnNull
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenCartItemsExist_ShouldReturnTrue*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenCartItemsExist_ShouldReturnTrue
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_RemoveUserCartItems_WhenCartItemsExist_ShouldReturnTrue
  name: RemoveUserCartItems_WhenCartItemsExist_ShouldReturnTrue
  nameWithType: CartItemRepositoryTests.RemoveUserCartItems_WhenCartItemsExist_ShouldReturnTrue
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenCartItemsExist_ShouldReturnTrue
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenNoCartItemsExist_ShouldReturnFalse*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenNoCartItemsExist_ShouldReturnFalse
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_RemoveUserCartItems_WhenNoCartItemsExist_ShouldReturnFalse
  name: RemoveUserCartItems_WhenNoCartItemsExist_ShouldReturnFalse
  nameWithType: CartItemRepositoryTests.RemoveUserCartItems_WhenNoCartItemsExist_ShouldReturnFalse
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenNoCartItemsExist_ShouldReturnFalse
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenExceptionThrown_ShouldReturnFalse*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenExceptionThrown_ShouldReturnFalse
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_RemoveUserCartItems_WhenExceptionThrown_ShouldReturnFalse
  name: RemoveUserCartItems_WhenExceptionThrown_ShouldReturnFalse
  nameWithType: CartItemRepositoryTests.RemoveUserCartItems_WhenExceptionThrown_ShouldReturnFalse
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.RemoveUserCartItems_WhenExceptionThrown_ShouldReturnFalse
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenCartItemExists_ShouldReturnTrue*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenCartItemExists_ShouldReturnTrue
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_CartItemExistsForUser_WhenCartItemExists_ShouldReturnTrue
  name: CartItemExistsForUser_WhenCartItemExists_ShouldReturnTrue
  nameWithType: CartItemRepositoryTests.CartItemExistsForUser_WhenCartItemExists_ShouldReturnTrue
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenCartItemExists_ShouldReturnTrue
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenNoCartItemExists_ShouldReturnFalse*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenNoCartItemExists_ShouldReturnFalse
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_CartItemExistsForUser_WhenNoCartItemExists_ShouldReturnFalse
  name: CartItemExistsForUser_WhenNoCartItemExists_ShouldReturnFalse
  nameWithType: CartItemRepositoryTests.CartItemExistsForUser_WhenNoCartItemExists_ShouldReturnFalse
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenNoCartItemExists_ShouldReturnFalse
- uid: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenExceptionThrown_ShouldReturnFalse*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenExceptionThrown_ShouldReturnFalse
  href: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_CartItemRepositoryTests_CartItemExistsForUser_WhenExceptionThrown_ShouldReturnFalse
  name: CartItemExistsForUser_WhenExceptionThrown_ShouldReturnFalse
  nameWithType: CartItemRepositoryTests.CartItemExistsForUser_WhenExceptionThrown_ShouldReturnFalse
  fullName: Ecommerce.UnitTests.PersistenceTests.CartItemRepositoryTests.CartItemExistsForUser_WhenExceptionThrown_ShouldReturnFalse
