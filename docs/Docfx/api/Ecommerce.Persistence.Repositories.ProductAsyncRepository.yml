### YamlMime:ManagedReference
items:
- uid: Ecommerce.Persistence.Repositories.ProductAsyncRepository
  commentId: T:Ecommerce.Persistence.Repositories.ProductAsyncRepository
  id: ProductAsyncRepository
  parent: Ecommerce.Persistence.Repositories
  children:
  - Ecommerce.Persistence.Repositories.ProductAsyncRepository.#ctor(Microsoft.Extensions.Logging.ILogger{Ecommerce.Persistence.Repositories.ProductAsyncRepository},Ecommerce.Persistence.EcommercePersistenceDbContext)
  - Ecommerce.Persistence.Repositories.ProductAsyncRepository.AddAsync(Ecommerce.Domain.Entities.Product)
  - Ecommerce.Persistence.Repositories.ProductAsyncRepository.DeleteAsync(Ecommerce.Domain.Entities.Product)
  - Ecommerce.Persistence.Repositories.ProductAsyncRepository.GetByIdAsync(System.Int32)
  - Ecommerce.Persistence.Repositories.ProductAsyncRepository.IsNameUnique(System.String)
  - Ecommerce.Persistence.Repositories.ProductAsyncRepository.ListAllAsync(System.Int32)
  - Ecommerce.Persistence.Repositories.ProductAsyncRepository.UpdateAsync(Ecommerce.Domain.Entities.Product)
  langs:
  - csharp
  - vb
  name: ProductAsyncRepository
  nameWithType: ProductAsyncRepository
  fullName: Ecommerce.Persistence.Repositories.ProductAsyncRepository
  type: Class
  source:
    remote:
      path: Infrastructure/Ecommerce.Persistence/Repositories/ProductAsyncRepository.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: ProductAsyncRepository
    path: ../../Infrastructure/Ecommerce.Persistence/Repositories/ProductAsyncRepository.cs
    startLine: 15
  assemblies:
  - Ecommerce.Persistence
  namespace: Ecommerce.Persistence.Repositories
  summary: Represents a implementation of the <xref href="Ecommerce.Persistence.Contracts.IProductAsyncRepository" data-throw-if-not-resolved="false"></xref> interface
  example: []
  syntax:
    content: 'public class ProductAsyncRepository : IProductAsyncRepository, IAsyncRepository<Product>'
    content.vb: Public Class ProductAsyncRepository Implements IProductAsyncRepository, IAsyncRepository(Of Product)
  inheritance:
  - System.Object
  implements:
  - Ecommerce.Persistence.Contracts.IProductAsyncRepository
  - Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Ecommerce.Persistence.Repositories.ProductAsyncRepository.#ctor(Microsoft.Extensions.Logging.ILogger{Ecommerce.Persistence.Repositories.ProductAsyncRepository},Ecommerce.Persistence.EcommercePersistenceDbContext)
  commentId: M:Ecommerce.Persistence.Repositories.ProductAsyncRepository.#ctor(Microsoft.Extensions.Logging.ILogger{Ecommerce.Persistence.Repositories.ProductAsyncRepository},Ecommerce.Persistence.EcommercePersistenceDbContext)
  id: '#ctor(Microsoft.Extensions.Logging.ILogger{Ecommerce.Persistence.Repositories.ProductAsyncRepository},Ecommerce.Persistence.EcommercePersistenceDbContext)'
  parent: Ecommerce.Persistence.Repositories.ProductAsyncRepository
  langs:
  - csharp
  - vb
  name: ProductAsyncRepository(ILogger<ProductAsyncRepository>, EcommercePersistenceDbContext)
  nameWithType: ProductAsyncRepository.ProductAsyncRepository(ILogger<ProductAsyncRepository>, EcommercePersistenceDbContext)
  fullName: Ecommerce.Persistence.Repositories.ProductAsyncRepository.ProductAsyncRepository(Microsoft.Extensions.Logging.ILogger<Ecommerce.Persistence.Repositories.ProductAsyncRepository>, Ecommerce.Persistence.EcommercePersistenceDbContext)
  type: Constructor
  source:
    remote:
      path: Infrastructure/Ecommerce.Persistence/Repositories/ProductAsyncRepository.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: .ctor
    path: ../../Infrastructure/Ecommerce.Persistence/Repositories/ProductAsyncRepository.cs
    startLine: 25
  assemblies:
  - Ecommerce.Persistence
  namespace: Ecommerce.Persistence.Repositories
  summary: Initializes a new instance of the <xref href="Ecommerce.Persistence.Repositories.ProductAsyncRepository" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public ProductAsyncRepository(ILogger<ProductAsyncRepository> logger, EcommercePersistenceDbContext dbContext)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{Ecommerce.Persistence.Repositories.ProductAsyncRepository}
      description: The <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> instance used for logging.
    - id: dbContext
      type: Ecommerce.Persistence.EcommercePersistenceDbContext
      description: The <xref href="Ecommerce.Persistence.EcommercePersistenceDbContext" data-throw-if-not-resolved="false"></xref> instance for database access
    content.vb: Public Sub New(logger As ILogger(Of ProductAsyncRepository), dbContext As EcommercePersistenceDbContext)
  overload: Ecommerce.Persistence.Repositories.ProductAsyncRepository.#ctor*
  nameWithType.vb: ProductAsyncRepository.New(ILogger(Of ProductAsyncRepository), EcommercePersistenceDbContext)
  fullName.vb: Ecommerce.Persistence.Repositories.ProductAsyncRepository.New(Microsoft.Extensions.Logging.ILogger(Of Ecommerce.Persistence.Repositories.ProductAsyncRepository), Ecommerce.Persistence.EcommercePersistenceDbContext)
  name.vb: New(ILogger(Of ProductAsyncRepository), EcommercePersistenceDbContext)
- uid: Ecommerce.Persistence.Repositories.ProductAsyncRepository.GetByIdAsync(System.Int32)
  commentId: M:Ecommerce.Persistence.Repositories.ProductAsyncRepository.GetByIdAsync(System.Int32)
  id: GetByIdAsync(System.Int32)
  parent: Ecommerce.Persistence.Repositories.ProductAsyncRepository
  langs:
  - csharp
  - vb
  name: GetByIdAsync(int)
  nameWithType: ProductAsyncRepository.GetByIdAsync(int)
  fullName: Ecommerce.Persistence.Repositories.ProductAsyncRepository.GetByIdAsync(int)
  type: Method
  source:
    remote:
      path: Infrastructure/Ecommerce.Persistence/Repositories/ProductAsyncRepository.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: GetByIdAsync
    path: ../../Infrastructure/Ecommerce.Persistence/Repositories/ProductAsyncRepository.cs
    startLine: 39
  assemblies:
  - Ecommerce.Persistence
  namespace: Ecommerce.Persistence.Repositories
  summary: Retrieves a <xref href="Ecommerce.Domain.Entities.Product" data-throw-if-not-resolved="false"></xref> from the database with the specified ID.
  example: []
  syntax:
    content: public Task<Product?> GetByIdAsync(int id)
    parameters:
    - id: id
      type: System.Int32
      description: The unique identifier of the <xref href="Ecommerce.Domain.Entities.Product" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Threading.Tasks.Task{Ecommerce.Domain.Entities.Product}
      description: >-
        The <xref href="Ecommerce.Domain.Entities.Product" data-throw-if-not-resolved="false"></xref> if found;

        <code>null</code> if no <xref href="Ecommerce.Domain.Entities.Product" data-throw-if-not-resolved="false"></xref> with the specified ID is found.
    content.vb: Public Function GetByIdAsync(id As Integer) As Task(Of Product)
  overload: Ecommerce.Persistence.Repositories.ProductAsyncRepository.GetByIdAsync*
  implements:
  - Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}.GetByIdAsync(System.Int32)
  nameWithType.vb: ProductAsyncRepository.GetByIdAsync(Integer)
  fullName.vb: Ecommerce.Persistence.Repositories.ProductAsyncRepository.GetByIdAsync(Integer)
  name.vb: GetByIdAsync(Integer)
- uid: Ecommerce.Persistence.Repositories.ProductAsyncRepository.AddAsync(Ecommerce.Domain.Entities.Product)
  commentId: M:Ecommerce.Persistence.Repositories.ProductAsyncRepository.AddAsync(Ecommerce.Domain.Entities.Product)
  id: AddAsync(Ecommerce.Domain.Entities.Product)
  parent: Ecommerce.Persistence.Repositories.ProductAsyncRepository
  langs:
  - csharp
  - vb
  name: AddAsync(Product)
  nameWithType: ProductAsyncRepository.AddAsync(Product)
  fullName: Ecommerce.Persistence.Repositories.ProductAsyncRepository.AddAsync(Ecommerce.Domain.Entities.Product)
  type: Method
  source:
    remote:
      path: Infrastructure/Ecommerce.Persistence/Repositories/ProductAsyncRepository.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: AddAsync
    path: ../../Infrastructure/Ecommerce.Persistence/Repositories/ProductAsyncRepository.cs
    startLine: 63
  assemblies:
  - Ecommerce.Persistence
  namespace: Ecommerce.Persistence.Repositories
  summary: Adds a <xref href="Ecommerce.Domain.Entities.Product" data-throw-if-not-resolved="false"></xref> to the table.
  example: []
  syntax:
    content: public Task<int> AddAsync(Product entity)
    parameters:
    - id: entity
      type: Ecommerce.Domain.Entities.Product
      description: The <xref href="Ecommerce.Domain.Entities.Product" data-throw-if-not-resolved="false"></xref> to add
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: >-
        The ID of the newly added <xref href="Ecommerce.Domain.Entities.Product" data-throw-if-not-resolved="false"></xref> if successful;

        -1 if the INSERT operation fails.
    content.vb: Public Function AddAsync(entity As Product) As Task(Of Integer)
  overload: Ecommerce.Persistence.Repositories.ProductAsyncRepository.AddAsync*
  implements:
  - Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}.AddAsync(Ecommerce.Domain.Entities.Product)
- uid: Ecommerce.Persistence.Repositories.ProductAsyncRepository.UpdateAsync(Ecommerce.Domain.Entities.Product)
  commentId: M:Ecommerce.Persistence.Repositories.ProductAsyncRepository.UpdateAsync(Ecommerce.Domain.Entities.Product)
  id: UpdateAsync(Ecommerce.Domain.Entities.Product)
  parent: Ecommerce.Persistence.Repositories.ProductAsyncRepository
  langs:
  - csharp
  - vb
  name: UpdateAsync(Product)
  nameWithType: ProductAsyncRepository.UpdateAsync(Product)
  fullName: Ecommerce.Persistence.Repositories.ProductAsyncRepository.UpdateAsync(Ecommerce.Domain.Entities.Product)
  type: Method
  source:
    remote:
      path: Infrastructure/Ecommerce.Persistence/Repositories/ProductAsyncRepository.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: UpdateAsync
    path: ../../Infrastructure/Ecommerce.Persistence/Repositories/ProductAsyncRepository.cs
    startLine: 93
  assemblies:
  - Ecommerce.Persistence
  namespace: Ecommerce.Persistence.Repositories
  summary: Updates a row in the database based on the provided <xref href="Ecommerce.Domain.Entities.Product" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Task<bool> UpdateAsync(Product entity)
    parameters:
    - id: entity
      type: Ecommerce.Domain.Entities.Product
      description: The <xref href="Ecommerce.Domain.Entities.Product" data-throw-if-not-resolved="false"></xref> with updated data.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: >-
        <code>true</code> if the UPDATE is successful;

        <code>false</code> if the UPDATE fails or the entity is not found.
    content.vb: Public Function UpdateAsync(entity As Product) As Task(Of Boolean)
  overload: Ecommerce.Persistence.Repositories.ProductAsyncRepository.UpdateAsync*
  implements:
  - Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}.UpdateAsync(Ecommerce.Domain.Entities.Product)
- uid: Ecommerce.Persistence.Repositories.ProductAsyncRepository.DeleteAsync(Ecommerce.Domain.Entities.Product)
  commentId: M:Ecommerce.Persistence.Repositories.ProductAsyncRepository.DeleteAsync(Ecommerce.Domain.Entities.Product)
  id: DeleteAsync(Ecommerce.Domain.Entities.Product)
  parent: Ecommerce.Persistence.Repositories.ProductAsyncRepository
  langs:
  - csharp
  - vb
  name: DeleteAsync(Product)
  nameWithType: ProductAsyncRepository.DeleteAsync(Product)
  fullName: Ecommerce.Persistence.Repositories.ProductAsyncRepository.DeleteAsync(Ecommerce.Domain.Entities.Product)
  type: Method
  source:
    remote:
      path: Infrastructure/Ecommerce.Persistence/Repositories/ProductAsyncRepository.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: DeleteAsync
    path: ../../Infrastructure/Ecommerce.Persistence/Repositories/ProductAsyncRepository.cs
    startLine: 139
  assemblies:
  - Ecommerce.Persistence
  namespace: Ecommerce.Persistence.Repositories
  summary: Deletes a row in the database based on the provided <xref href="Ecommerce.Domain.Entities.Product" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Task<bool> DeleteAsync(Product entity)
    parameters:
    - id: entity
      type: Ecommerce.Domain.Entities.Product
      description: The <xref href="Ecommerce.Domain.Entities.Product" data-throw-if-not-resolved="false"></xref> to delete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: >-
        <code>true</code> if the DELETE is successful;

        <code>false</code> if the DELETE fails or the <xref href="Ecommerce.Domain.Entities.Product" data-throw-if-not-resolved="false"></xref> is not found.
    content.vb: Public Function DeleteAsync(entity As Product) As Task(Of Boolean)
  overload: Ecommerce.Persistence.Repositories.ProductAsyncRepository.DeleteAsync*
  implements:
  - Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}.DeleteAsync(Ecommerce.Domain.Entities.Product)
- uid: Ecommerce.Persistence.Repositories.ProductAsyncRepository.ListAllAsync(System.Int32)
  commentId: M:Ecommerce.Persistence.Repositories.ProductAsyncRepository.ListAllAsync(System.Int32)
  id: ListAllAsync(System.Int32)
  parent: Ecommerce.Persistence.Repositories.ProductAsyncRepository
  langs:
  - csharp
  - vb
  name: ListAllAsync(int)
  nameWithType: ProductAsyncRepository.ListAllAsync(int)
  fullName: Ecommerce.Persistence.Repositories.ProductAsyncRepository.ListAllAsync(int)
  type: Method
  source:
    remote:
      path: Infrastructure/Ecommerce.Persistence/Repositories/ProductAsyncRepository.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: ListAllAsync
    path: ../../Infrastructure/Ecommerce.Persistence/Repositories/ProductAsyncRepository.cs
    startLine: 170
  assemblies:
  - Ecommerce.Persistence
  namespace: Ecommerce.Persistence.Repositories
  summary: Retrieves all <xref href="Ecommerce.Domain.Entities.Product" data-throw-if-not-resolved="false"></xref> entities from the database with the specified <xref href="Ecommerce.Domain.Entities.Category" data-throw-if-not-resolved="false"></xref> ID.
  example: []
  syntax:
    content: public Task<IEnumerable<Product>> ListAllAsync(int categoryId)
    parameters:
    - id: categoryId
      type: System.Int32
      description: The ID of the <xref href="Ecommerce.Domain.Entities.Category" data-throw-if-not-resolved="false"></xref> to find all corresponding <xref href="Ecommerce.Domain.Entities.Product" data-throw-if-not-resolved="false"></xref> entities
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Ecommerce.Domain.Entities.Product}}
      description: >-
        A <code>IEnumerable</code> of all <xref href="Ecommerce.Domain.Entities.Product" data-throw-if-not-resolved="false"></xref> entities found;

        A empty <code>IEnumerable</code> if none are found.
    content.vb: Public Function ListAllAsync(categoryId As Integer) As Task(Of IEnumerable(Of Product))
  overload: Ecommerce.Persistence.Repositories.ProductAsyncRepository.ListAllAsync*
  implements:
  - Ecommerce.Persistence.Contracts.IProductAsyncRepository.ListAllAsync(System.Int32)
  nameWithType.vb: ProductAsyncRepository.ListAllAsync(Integer)
  fullName.vb: Ecommerce.Persistence.Repositories.ProductAsyncRepository.ListAllAsync(Integer)
  name.vb: ListAllAsync(Integer)
- uid: Ecommerce.Persistence.Repositories.ProductAsyncRepository.IsNameUnique(System.String)
  commentId: M:Ecommerce.Persistence.Repositories.ProductAsyncRepository.IsNameUnique(System.String)
  id: IsNameUnique(System.String)
  parent: Ecommerce.Persistence.Repositories.ProductAsyncRepository
  langs:
  - csharp
  - vb
  name: IsNameUnique(string)
  nameWithType: ProductAsyncRepository.IsNameUnique(string)
  fullName: Ecommerce.Persistence.Repositories.ProductAsyncRepository.IsNameUnique(string)
  type: Method
  source:
    remote:
      path: Infrastructure/Ecommerce.Persistence/Repositories/ProductAsyncRepository.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: IsNameUnique
    path: ../../Infrastructure/Ecommerce.Persistence/Repositories/ProductAsyncRepository.cs
    startLine: 194
  assemblies:
  - Ecommerce.Persistence
  namespace: Ecommerce.Persistence.Repositories
  summary: Checks the table to see if the Name of a <xref href="Ecommerce.Domain.Entities.Product" data-throw-if-not-resolved="false"></xref> already exists
  example: []
  syntax:
    content: public Task<bool> IsNameUnique(string name)
    parameters:
    - id: name
      type: System.String
      description: The name to check for
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: >-
        <code>false</code> if found;

        <code>true</code> if not found
    content.vb: Public Function IsNameUnique(name As String) As Task(Of Boolean)
  overload: Ecommerce.Persistence.Repositories.ProductAsyncRepository.IsNameUnique*
  implements:
  - Ecommerce.Persistence.Contracts.IProductAsyncRepository.IsNameUnique(System.String)
  nameWithType.vb: ProductAsyncRepository.IsNameUnique(String)
  fullName.vb: Ecommerce.Persistence.Repositories.ProductAsyncRepository.IsNameUnique(String)
  name.vb: IsNameUnique(String)
references:
- uid: Ecommerce.Persistence.Contracts.IProductAsyncRepository
  commentId: T:Ecommerce.Persistence.Contracts.IProductAsyncRepository
  parent: Ecommerce.Persistence.Contracts
  href: Ecommerce.Persistence.Contracts.IProductAsyncRepository.html
  name: IProductAsyncRepository
  nameWithType: IProductAsyncRepository
  fullName: Ecommerce.Persistence.Contracts.IProductAsyncRepository
- uid: Ecommerce.Persistence.Repositories
  commentId: N:Ecommerce.Persistence.Repositories
  href: Ecommerce.html
  name: Ecommerce.Persistence.Repositories
  nameWithType: Ecommerce.Persistence.Repositories
  fullName: Ecommerce.Persistence.Repositories
  spec.csharp:
  - uid: Ecommerce
    name: Ecommerce
    href: Ecommerce.html
  - name: .
  - uid: Ecommerce.Persistence
    name: Persistence
    href: Ecommerce.Persistence.html
  - name: .
  - uid: Ecommerce.Persistence.Repositories
    name: Repositories
    href: Ecommerce.Persistence.Repositories.html
  spec.vb:
  - uid: Ecommerce
    name: Ecommerce
    href: Ecommerce.html
  - name: .
  - uid: Ecommerce.Persistence
    name: Persistence
    href: Ecommerce.Persistence.html
  - name: .
  - uid: Ecommerce.Persistence.Repositories
    name: Repositories
    href: Ecommerce.Persistence.Repositories.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}
  commentId: T:Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}
  parent: Ecommerce.Persistence.Contracts
  definition: Ecommerce.Persistence.Contracts.IAsyncRepository`1
  href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html
  name: IAsyncRepository<Product>
  nameWithType: IAsyncRepository<Product>
  fullName: Ecommerce.Persistence.Contracts.IAsyncRepository<Ecommerce.Domain.Entities.Product>
  nameWithType.vb: IAsyncRepository(Of Product)
  fullName.vb: Ecommerce.Persistence.Contracts.IAsyncRepository(Of Ecommerce.Domain.Entities.Product)
  name.vb: IAsyncRepository(Of Product)
  spec.csharp:
  - uid: Ecommerce.Persistence.Contracts.IAsyncRepository`1
    name: IAsyncRepository
    href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html
  - name: <
  - uid: Ecommerce.Domain.Entities.Product
    name: Product
    href: https://github.com/smithhe/EcommerceApp/blob/2d02db4bfed44ad43113812b0f7c0bdb0781183e/Core/Ecommerce.Domain/Entities/Product.cs
  - name: '>'
  spec.vb:
  - uid: Ecommerce.Persistence.Contracts.IAsyncRepository`1
    name: IAsyncRepository
    href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Domain.Entities.Product
    name: Product
    href: https://github.com/smithhe/EcommerceApp/blob/2d02db4bfed44ad43113812b0f7c0bdb0781183e/Core/Ecommerce.Domain/Entities/Product.cs
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Ecommerce.Persistence.Contracts
  commentId: N:Ecommerce.Persistence.Contracts
  href: Ecommerce.html
  name: Ecommerce.Persistence.Contracts
  nameWithType: Ecommerce.Persistence.Contracts
  fullName: Ecommerce.Persistence.Contracts
  spec.csharp:
  - uid: Ecommerce
    name: Ecommerce
    href: Ecommerce.html
  - name: .
  - uid: Ecommerce.Persistence
    name: Persistence
    href: Ecommerce.Persistence.html
  - name: .
  - uid: Ecommerce.Persistence.Contracts
    name: Contracts
    href: Ecommerce.Persistence.Contracts.html
  spec.vb:
  - uid: Ecommerce
    name: Ecommerce
    href: Ecommerce.html
  - name: .
  - uid: Ecommerce.Persistence
    name: Persistence
    href: Ecommerce.Persistence.html
  - name: .
  - uid: Ecommerce.Persistence.Contracts
    name: Contracts
    href: Ecommerce.Persistence.Contracts.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ecommerce.Persistence.Contracts.IAsyncRepository`1
  commentId: T:Ecommerce.Persistence.Contracts.IAsyncRepository`1
  href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html
  name: IAsyncRepository<T>
  nameWithType: IAsyncRepository<T>
  fullName: Ecommerce.Persistence.Contracts.IAsyncRepository<T>
  nameWithType.vb: IAsyncRepository(Of T)
  fullName.vb: Ecommerce.Persistence.Contracts.IAsyncRepository(Of T)
  name.vb: IAsyncRepository(Of T)
  spec.csharp:
  - uid: Ecommerce.Persistence.Contracts.IAsyncRepository`1
    name: IAsyncRepository
    href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Ecommerce.Persistence.Contracts.IAsyncRepository`1
    name: IAsyncRepository
    href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Ecommerce.Persistence.Repositories.ProductAsyncRepository
  commentId: T:Ecommerce.Persistence.Repositories.ProductAsyncRepository
  href: Ecommerce.Persistence.Repositories.ProductAsyncRepository.html
  name: ProductAsyncRepository
  nameWithType: ProductAsyncRepository
  fullName: Ecommerce.Persistence.Repositories.ProductAsyncRepository
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Ecommerce.Persistence.EcommercePersistenceDbContext
  commentId: T:Ecommerce.Persistence.EcommercePersistenceDbContext
  parent: Ecommerce.Persistence
  href: Ecommerce.Persistence.EcommercePersistenceDbContext.html
  name: EcommercePersistenceDbContext
  nameWithType: EcommercePersistenceDbContext
  fullName: Ecommerce.Persistence.EcommercePersistenceDbContext
- uid: Ecommerce.Persistence.Repositories.ProductAsyncRepository.#ctor*
  commentId: Overload:Ecommerce.Persistence.Repositories.ProductAsyncRepository.#ctor
  href: Ecommerce.Persistence.Repositories.ProductAsyncRepository.html#Ecommerce_Persistence_Repositories_ProductAsyncRepository__ctor_Microsoft_Extensions_Logging_ILogger_Ecommerce_Persistence_Repositories_ProductAsyncRepository__Ecommerce_Persistence_EcommercePersistenceDbContext_
  name: ProductAsyncRepository
  nameWithType: ProductAsyncRepository.ProductAsyncRepository
  fullName: Ecommerce.Persistence.Repositories.ProductAsyncRepository.ProductAsyncRepository
  nameWithType.vb: ProductAsyncRepository.New
  fullName.vb: Ecommerce.Persistence.Repositories.ProductAsyncRepository.New
  name.vb: New
- uid: Microsoft.Extensions.Logging.ILogger{Ecommerce.Persistence.Repositories.ProductAsyncRepository}
  commentId: T:Microsoft.Extensions.Logging.ILogger{Ecommerce.Persistence.Repositories.ProductAsyncRepository}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<ProductAsyncRepository>
  nameWithType: ILogger<ProductAsyncRepository>
  fullName: Microsoft.Extensions.Logging.ILogger<Ecommerce.Persistence.Repositories.ProductAsyncRepository>
  nameWithType.vb: ILogger(Of ProductAsyncRepository)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of Ecommerce.Persistence.Repositories.ProductAsyncRepository)
  name.vb: ILogger(Of ProductAsyncRepository)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - uid: Ecommerce.Persistence.Repositories.ProductAsyncRepository
    name: ProductAsyncRepository
    href: Ecommerce.Persistence.Repositories.ProductAsyncRepository.html
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Persistence.Repositories.ProductAsyncRepository
    name: ProductAsyncRepository
    href: Ecommerce.Persistence.Repositories.ProductAsyncRepository.html
  - name: )
- uid: Ecommerce.Persistence
  commentId: N:Ecommerce.Persistence
  href: Ecommerce.html
  name: Ecommerce.Persistence
  nameWithType: Ecommerce.Persistence
  fullName: Ecommerce.Persistence
  spec.csharp:
  - uid: Ecommerce
    name: Ecommerce
    href: Ecommerce.html
  - name: .
  - uid: Ecommerce.Persistence
    name: Persistence
    href: Ecommerce.Persistence.html
  spec.vb:
  - uid: Ecommerce
    name: Ecommerce
    href: Ecommerce.html
  - name: .
  - uid: Ecommerce.Persistence
    name: Persistence
    href: Ecommerce.Persistence.html
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: Ecommerce.Domain.Entities.Product
  commentId: T:Ecommerce.Domain.Entities.Product
  parent: Ecommerce.Domain.Entities
  href: Ecommerce.Domain.Entities.Product.html
  name: Product
  nameWithType: Product
  fullName: Ecommerce.Domain.Entities.Product
- uid: Ecommerce.Persistence.Repositories.ProductAsyncRepository.GetByIdAsync*
  commentId: Overload:Ecommerce.Persistence.Repositories.ProductAsyncRepository.GetByIdAsync
  href: Ecommerce.Persistence.Repositories.ProductAsyncRepository.html#Ecommerce_Persistence_Repositories_ProductAsyncRepository_GetByIdAsync_System_Int32_
  name: GetByIdAsync
  nameWithType: ProductAsyncRepository.GetByIdAsync
  fullName: Ecommerce.Persistence.Repositories.ProductAsyncRepository.GetByIdAsync
- uid: Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}.GetByIdAsync(System.Int32)
  commentId: M:Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}.GetByIdAsync(System.Int32)
  parent: Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}
  definition: Ecommerce.Persistence.Contracts.IAsyncRepository`1.GetByIdAsync(System.Int32)
  href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_GetByIdAsync_System_Int32_
  name: GetByIdAsync(int)
  nameWithType: IAsyncRepository<Product>.GetByIdAsync(int)
  fullName: Ecommerce.Persistence.Contracts.IAsyncRepository<Ecommerce.Domain.Entities.Product>.GetByIdAsync(int)
  nameWithType.vb: IAsyncRepository(Of Product).GetByIdAsync(Integer)
  fullName.vb: Ecommerce.Persistence.Contracts.IAsyncRepository(Of Ecommerce.Domain.Entities.Product).GetByIdAsync(Integer)
  name.vb: GetByIdAsync(Integer)
  spec.csharp:
  - uid: Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}.GetByIdAsync(System.Int32)
    name: GetByIdAsync
    href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_GetByIdAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}.GetByIdAsync(System.Int32)
    name: GetByIdAsync
    href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_GetByIdAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{Ecommerce.Domain.Entities.Product}
  commentId: T:System.Threading.Tasks.Task{Ecommerce.Domain.Entities.Product}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Product>
  nameWithType: Task<Product>
  fullName: System.Threading.Tasks.Task<Ecommerce.Domain.Entities.Product>
  nameWithType.vb: Task(Of Product)
  fullName.vb: System.Threading.Tasks.Task(Of Ecommerce.Domain.Entities.Product)
  name.vb: Task(Of Product)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Ecommerce.Domain.Entities.Product
    name: Product
    href: https://github.com/smithhe/EcommerceApp/blob/2d02db4bfed44ad43113812b0f7c0bdb0781183e/Core/Ecommerce.Domain/Entities/Product.cs
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Domain.Entities.Product
    name: Product
    href: https://github.com/smithhe/EcommerceApp/blob/2d02db4bfed44ad43113812b0f7c0bdb0781183e/Core/Ecommerce.Domain/Entities/Product.cs
  - name: )
- uid: Ecommerce.Domain.Entities
  commentId: N:Ecommerce.Domain.Entities
  href: Ecommerce.html
  name: Ecommerce.Domain.Entities
  nameWithType: Ecommerce.Domain.Entities
  fullName: Ecommerce.Domain.Entities
  spec.csharp:
  - uid: Ecommerce
    name: Ecommerce
    href: Ecommerce.html
  - name: .
  - uid: Ecommerce.Domain
    name: Domain
    href: Ecommerce.Domain.html
  - name: .
  - uid: Ecommerce.Domain.Entities
    name: Entities
    href: Ecommerce.Domain.Entities.html
  spec.vb:
  - uid: Ecommerce
    name: Ecommerce
    href: Ecommerce.html
  - name: .
  - uid: Ecommerce.Domain
    name: Domain
    href: Ecommerce.Domain.html
  - name: .
  - uid: Ecommerce.Domain.Entities
    name: Entities
    href: Ecommerce.Domain.Entities.html
- uid: Ecommerce.Persistence.Contracts.IAsyncRepository`1.GetByIdAsync(System.Int32)
  commentId: M:Ecommerce.Persistence.Contracts.IAsyncRepository`1.GetByIdAsync(System.Int32)
  isExternal: true
  href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_GetByIdAsync_System_Int32_
  name: GetByIdAsync(int)
  nameWithType: IAsyncRepository<T>.GetByIdAsync(int)
  fullName: Ecommerce.Persistence.Contracts.IAsyncRepository<T>.GetByIdAsync(int)
  nameWithType.vb: IAsyncRepository(Of T).GetByIdAsync(Integer)
  fullName.vb: Ecommerce.Persistence.Contracts.IAsyncRepository(Of T).GetByIdAsync(Integer)
  name.vb: GetByIdAsync(Integer)
  spec.csharp:
  - uid: Ecommerce.Persistence.Contracts.IAsyncRepository`1.GetByIdAsync(System.Int32)
    name: GetByIdAsync
    href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_GetByIdAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Ecommerce.Persistence.Contracts.IAsyncRepository`1.GetByIdAsync(System.Int32)
    name: GetByIdAsync
    href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_GetByIdAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Ecommerce.Persistence.Repositories.ProductAsyncRepository.AddAsync*
  commentId: Overload:Ecommerce.Persistence.Repositories.ProductAsyncRepository.AddAsync
  href: Ecommerce.Persistence.Repositories.ProductAsyncRepository.html#Ecommerce_Persistence_Repositories_ProductAsyncRepository_AddAsync_Ecommerce_Domain_Entities_Product_
  name: AddAsync
  nameWithType: ProductAsyncRepository.AddAsync
  fullName: Ecommerce.Persistence.Repositories.ProductAsyncRepository.AddAsync
- uid: Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}.AddAsync(Ecommerce.Domain.Entities.Product)
  commentId: M:Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}.AddAsync(Ecommerce.Domain.Entities.Product)
  parent: Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}
  definition: Ecommerce.Persistence.Contracts.IAsyncRepository`1.AddAsync(`0)
  href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_AddAsync__0_
  name: AddAsync(Product)
  nameWithType: IAsyncRepository<Product>.AddAsync(Product)
  fullName: Ecommerce.Persistence.Contracts.IAsyncRepository<Ecommerce.Domain.Entities.Product>.AddAsync(Ecommerce.Domain.Entities.Product)
  nameWithType.vb: IAsyncRepository(Of Product).AddAsync(Product)
  fullName.vb: Ecommerce.Persistence.Contracts.IAsyncRepository(Of Ecommerce.Domain.Entities.Product).AddAsync(Ecommerce.Domain.Entities.Product)
  spec.csharp:
  - uid: Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}.AddAsync(Ecommerce.Domain.Entities.Product)
    name: AddAsync
    href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_AddAsync__0_
  - name: (
  - uid: Ecommerce.Domain.Entities.Product
    name: Product
    href: https://github.com/smithhe/EcommerceApp/blob/2d02db4bfed44ad43113812b0f7c0bdb0781183e/Core/Ecommerce.Domain/Entities/Product.cs
  - name: )
  spec.vb:
  - uid: Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}.AddAsync(Ecommerce.Domain.Entities.Product)
    name: AddAsync
    href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_AddAsync__0_
  - name: (
  - uid: Ecommerce.Domain.Entities.Product
    name: Product
    href: https://github.com/smithhe/EcommerceApp/blob/2d02db4bfed44ad43113812b0f7c0bdb0781183e/Core/Ecommerce.Domain/Entities/Product.cs
  - name: )
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Ecommerce.Persistence.Contracts.IAsyncRepository`1.AddAsync(`0)
  commentId: M:Ecommerce.Persistence.Contracts.IAsyncRepository`1.AddAsync(`0)
  href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_AddAsync__0_
  name: AddAsync(T)
  nameWithType: IAsyncRepository<T>.AddAsync(T)
  fullName: Ecommerce.Persistence.Contracts.IAsyncRepository<T>.AddAsync(T)
  nameWithType.vb: IAsyncRepository(Of T).AddAsync(T)
  fullName.vb: Ecommerce.Persistence.Contracts.IAsyncRepository(Of T).AddAsync(T)
  spec.csharp:
  - uid: Ecommerce.Persistence.Contracts.IAsyncRepository`1.AddAsync(`0)
    name: AddAsync
    href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_AddAsync__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Ecommerce.Persistence.Contracts.IAsyncRepository`1.AddAsync(`0)
    name: AddAsync
    href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_AddAsync__0_
  - name: (
  - name: T
  - name: )
- uid: Ecommerce.Persistence.Repositories.ProductAsyncRepository.UpdateAsync*
  commentId: Overload:Ecommerce.Persistence.Repositories.ProductAsyncRepository.UpdateAsync
  href: Ecommerce.Persistence.Repositories.ProductAsyncRepository.html#Ecommerce_Persistence_Repositories_ProductAsyncRepository_UpdateAsync_Ecommerce_Domain_Entities_Product_
  name: UpdateAsync
  nameWithType: ProductAsyncRepository.UpdateAsync
  fullName: Ecommerce.Persistence.Repositories.ProductAsyncRepository.UpdateAsync
- uid: Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}.UpdateAsync(Ecommerce.Domain.Entities.Product)
  commentId: M:Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}.UpdateAsync(Ecommerce.Domain.Entities.Product)
  parent: Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}
  definition: Ecommerce.Persistence.Contracts.IAsyncRepository`1.UpdateAsync(`0)
  href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_UpdateAsync__0_
  name: UpdateAsync(Product)
  nameWithType: IAsyncRepository<Product>.UpdateAsync(Product)
  fullName: Ecommerce.Persistence.Contracts.IAsyncRepository<Ecommerce.Domain.Entities.Product>.UpdateAsync(Ecommerce.Domain.Entities.Product)
  nameWithType.vb: IAsyncRepository(Of Product).UpdateAsync(Product)
  fullName.vb: Ecommerce.Persistence.Contracts.IAsyncRepository(Of Ecommerce.Domain.Entities.Product).UpdateAsync(Ecommerce.Domain.Entities.Product)
  spec.csharp:
  - uid: Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}.UpdateAsync(Ecommerce.Domain.Entities.Product)
    name: UpdateAsync
    href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_UpdateAsync__0_
  - name: (
  - uid: Ecommerce.Domain.Entities.Product
    name: Product
    href: https://github.com/smithhe/EcommerceApp/blob/2d02db4bfed44ad43113812b0f7c0bdb0781183e/Core/Ecommerce.Domain/Entities/Product.cs
  - name: )
  spec.vb:
  - uid: Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}.UpdateAsync(Ecommerce.Domain.Entities.Product)
    name: UpdateAsync
    href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_UpdateAsync__0_
  - name: (
  - uid: Ecommerce.Domain.Entities.Product
    name: Product
    href: https://github.com/smithhe/EcommerceApp/blob/2d02db4bfed44ad43113812b0f7c0bdb0781183e/Core/Ecommerce.Domain/Entities/Product.cs
  - name: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Ecommerce.Persistence.Contracts.IAsyncRepository`1.UpdateAsync(`0)
  commentId: M:Ecommerce.Persistence.Contracts.IAsyncRepository`1.UpdateAsync(`0)
  href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_UpdateAsync__0_
  name: UpdateAsync(T)
  nameWithType: IAsyncRepository<T>.UpdateAsync(T)
  fullName: Ecommerce.Persistence.Contracts.IAsyncRepository<T>.UpdateAsync(T)
  nameWithType.vb: IAsyncRepository(Of T).UpdateAsync(T)
  fullName.vb: Ecommerce.Persistence.Contracts.IAsyncRepository(Of T).UpdateAsync(T)
  spec.csharp:
  - uid: Ecommerce.Persistence.Contracts.IAsyncRepository`1.UpdateAsync(`0)
    name: UpdateAsync
    href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_UpdateAsync__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Ecommerce.Persistence.Contracts.IAsyncRepository`1.UpdateAsync(`0)
    name: UpdateAsync
    href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_UpdateAsync__0_
  - name: (
  - name: T
  - name: )
- uid: Ecommerce.Persistence.Repositories.ProductAsyncRepository.DeleteAsync*
  commentId: Overload:Ecommerce.Persistence.Repositories.ProductAsyncRepository.DeleteAsync
  href: Ecommerce.Persistence.Repositories.ProductAsyncRepository.html#Ecommerce_Persistence_Repositories_ProductAsyncRepository_DeleteAsync_Ecommerce_Domain_Entities_Product_
  name: DeleteAsync
  nameWithType: ProductAsyncRepository.DeleteAsync
  fullName: Ecommerce.Persistence.Repositories.ProductAsyncRepository.DeleteAsync
- uid: Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}.DeleteAsync(Ecommerce.Domain.Entities.Product)
  commentId: M:Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}.DeleteAsync(Ecommerce.Domain.Entities.Product)
  parent: Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}
  definition: Ecommerce.Persistence.Contracts.IAsyncRepository`1.DeleteAsync(`0)
  href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_DeleteAsync__0_
  name: DeleteAsync(Product)
  nameWithType: IAsyncRepository<Product>.DeleteAsync(Product)
  fullName: Ecommerce.Persistence.Contracts.IAsyncRepository<Ecommerce.Domain.Entities.Product>.DeleteAsync(Ecommerce.Domain.Entities.Product)
  nameWithType.vb: IAsyncRepository(Of Product).DeleteAsync(Product)
  fullName.vb: Ecommerce.Persistence.Contracts.IAsyncRepository(Of Ecommerce.Domain.Entities.Product).DeleteAsync(Ecommerce.Domain.Entities.Product)
  spec.csharp:
  - uid: Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}.DeleteAsync(Ecommerce.Domain.Entities.Product)
    name: DeleteAsync
    href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_DeleteAsync__0_
  - name: (
  - uid: Ecommerce.Domain.Entities.Product
    name: Product
    href: https://github.com/smithhe/EcommerceApp/blob/2d02db4bfed44ad43113812b0f7c0bdb0781183e/Core/Ecommerce.Domain/Entities/Product.cs
  - name: )
  spec.vb:
  - uid: Ecommerce.Persistence.Contracts.IAsyncRepository{Ecommerce.Domain.Entities.Product}.DeleteAsync(Ecommerce.Domain.Entities.Product)
    name: DeleteAsync
    href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_DeleteAsync__0_
  - name: (
  - uid: Ecommerce.Domain.Entities.Product
    name: Product
    href: https://github.com/smithhe/EcommerceApp/blob/2d02db4bfed44ad43113812b0f7c0bdb0781183e/Core/Ecommerce.Domain/Entities/Product.cs
  - name: )
- uid: Ecommerce.Persistence.Contracts.IAsyncRepository`1.DeleteAsync(`0)
  commentId: M:Ecommerce.Persistence.Contracts.IAsyncRepository`1.DeleteAsync(`0)
  href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_DeleteAsync__0_
  name: DeleteAsync(T)
  nameWithType: IAsyncRepository<T>.DeleteAsync(T)
  fullName: Ecommerce.Persistence.Contracts.IAsyncRepository<T>.DeleteAsync(T)
  nameWithType.vb: IAsyncRepository(Of T).DeleteAsync(T)
  fullName.vb: Ecommerce.Persistence.Contracts.IAsyncRepository(Of T).DeleteAsync(T)
  spec.csharp:
  - uid: Ecommerce.Persistence.Contracts.IAsyncRepository`1.DeleteAsync(`0)
    name: DeleteAsync
    href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_DeleteAsync__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Ecommerce.Persistence.Contracts.IAsyncRepository`1.DeleteAsync(`0)
    name: DeleteAsync
    href: Ecommerce.Persistence.Contracts.IAsyncRepository-1.html#Ecommerce_Persistence_Contracts_IAsyncRepository_1_DeleteAsync__0_
  - name: (
  - name: T
  - name: )
- uid: Ecommerce.Domain.Entities.Category
  commentId: T:Ecommerce.Domain.Entities.Category
  parent: Ecommerce.Domain.Entities
  href: Ecommerce.Domain.Entities.Category.html
  name: Category
  nameWithType: Category
  fullName: Ecommerce.Domain.Entities.Category
- uid: Ecommerce.Persistence.Repositories.ProductAsyncRepository.ListAllAsync*
  commentId: Overload:Ecommerce.Persistence.Repositories.ProductAsyncRepository.ListAllAsync
  href: Ecommerce.Persistence.Repositories.ProductAsyncRepository.html#Ecommerce_Persistence_Repositories_ProductAsyncRepository_ListAllAsync_System_Int32_
  name: ListAllAsync
  nameWithType: ProductAsyncRepository.ListAllAsync
  fullName: Ecommerce.Persistence.Repositories.ProductAsyncRepository.ListAllAsync
- uid: Ecommerce.Persistence.Contracts.IProductAsyncRepository.ListAllAsync(System.Int32)
  commentId: M:Ecommerce.Persistence.Contracts.IProductAsyncRepository.ListAllAsync(System.Int32)
  parent: Ecommerce.Persistence.Contracts.IProductAsyncRepository
  isExternal: true
  href: Ecommerce.Persistence.Contracts.IProductAsyncRepository.html#Ecommerce_Persistence_Contracts_IProductAsyncRepository_ListAllAsync_System_Int32_
  name: ListAllAsync(int)
  nameWithType: IProductAsyncRepository.ListAllAsync(int)
  fullName: Ecommerce.Persistence.Contracts.IProductAsyncRepository.ListAllAsync(int)
  nameWithType.vb: IProductAsyncRepository.ListAllAsync(Integer)
  fullName.vb: Ecommerce.Persistence.Contracts.IProductAsyncRepository.ListAllAsync(Integer)
  name.vb: ListAllAsync(Integer)
  spec.csharp:
  - uid: Ecommerce.Persistence.Contracts.IProductAsyncRepository.ListAllAsync(System.Int32)
    name: ListAllAsync
    href: Ecommerce.Persistence.Contracts.IProductAsyncRepository.html#Ecommerce_Persistence_Contracts_IProductAsyncRepository_ListAllAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Ecommerce.Persistence.Contracts.IProductAsyncRepository.ListAllAsync(System.Int32)
    name: ListAllAsync
    href: Ecommerce.Persistence.Contracts.IProductAsyncRepository.html#Ecommerce_Persistence_Contracts_IProductAsyncRepository_ListAllAsync_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Ecommerce.Domain.Entities.Product}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Ecommerce.Domain.Entities.Product}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<Product>>
  nameWithType: Task<IEnumerable<Product>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Ecommerce.Domain.Entities.Product>>
  nameWithType.vb: Task(Of IEnumerable(Of Product))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of Ecommerce.Domain.Entities.Product))
  name.vb: Task(Of IEnumerable(Of Product))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ecommerce.Domain.Entities.Product
    name: Product
    href: https://github.com/smithhe/EcommerceApp/blob/2d02db4bfed44ad43113812b0f7c0bdb0781183e/Core/Ecommerce.Domain/Entities/Product.cs
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ecommerce.Domain.Entities.Product
    name: Product
    href: https://github.com/smithhe/EcommerceApp/blob/2d02db4bfed44ad43113812b0f7c0bdb0781183e/Core/Ecommerce.Domain/Entities/Product.cs
  - name: )
  - name: )
- uid: Ecommerce.Persistence.Repositories.ProductAsyncRepository.IsNameUnique*
  commentId: Overload:Ecommerce.Persistence.Repositories.ProductAsyncRepository.IsNameUnique
  href: Ecommerce.Persistence.Repositories.ProductAsyncRepository.html#Ecommerce_Persistence_Repositories_ProductAsyncRepository_IsNameUnique_System_String_
  name: IsNameUnique
  nameWithType: ProductAsyncRepository.IsNameUnique
  fullName: Ecommerce.Persistence.Repositories.ProductAsyncRepository.IsNameUnique
- uid: Ecommerce.Persistence.Contracts.IProductAsyncRepository.IsNameUnique(System.String)
  commentId: M:Ecommerce.Persistence.Contracts.IProductAsyncRepository.IsNameUnique(System.String)
  parent: Ecommerce.Persistence.Contracts.IProductAsyncRepository
  isExternal: true
  href: Ecommerce.Persistence.Contracts.IProductAsyncRepository.html#Ecommerce_Persistence_Contracts_IProductAsyncRepository_IsNameUnique_System_String_
  name: IsNameUnique(string)
  nameWithType: IProductAsyncRepository.IsNameUnique(string)
  fullName: Ecommerce.Persistence.Contracts.IProductAsyncRepository.IsNameUnique(string)
  nameWithType.vb: IProductAsyncRepository.IsNameUnique(String)
  fullName.vb: Ecommerce.Persistence.Contracts.IProductAsyncRepository.IsNameUnique(String)
  name.vb: IsNameUnique(String)
  spec.csharp:
  - uid: Ecommerce.Persistence.Contracts.IProductAsyncRepository.IsNameUnique(System.String)
    name: IsNameUnique
    href: Ecommerce.Persistence.Contracts.IProductAsyncRepository.html#Ecommerce_Persistence_Contracts_IProductAsyncRepository_IsNameUnique_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ecommerce.Persistence.Contracts.IProductAsyncRepository.IsNameUnique(System.String)
    name: IsNameUnique
    href: Ecommerce.Persistence.Contracts.IProductAsyncRepository.html#Ecommerce_Persistence_Contracts_IProductAsyncRepository_IsNameUnique_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
