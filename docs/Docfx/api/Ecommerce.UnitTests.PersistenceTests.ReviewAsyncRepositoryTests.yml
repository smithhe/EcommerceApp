### YamlMime:ManagedReference
items:
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  commentId: T:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  id: ReviewAsyncRepositoryTests
  parent: Ecommerce.UnitTests.PersistenceTests
  children:
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WhenExceptionThrown_ReturnsMinusOne
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WithExistingReview_ReturnsMinusOne
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WithNewReview_ReturnsId
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenExceptionThrown_ReturnsFalse
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenReviewDoesNotExist_ReturnsFalse
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenReviewExists_ReturnsTrue
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenExceptionThrown_ReturnsZero
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenNoReviewsExist_ReturnsZero
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenReviewsExist_ReturnsAverage
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenExceptionThrown_ReturnsNull
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenReviewDoesNotExist_ReturnsNull
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenReviewExists_ReturnsReview
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenExceptionThrown_ReturnsNull
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenReviewDoesNotExist_ReturnsReviewWithNegativeOneId
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenReviewExists_ReturnsReview
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenExceptionThrown_ReturnsNull
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenNoReviewsExist_ReturnsEmpty
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenReviewsExist_ReturnsReviews
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.Setup
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.TearDown
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WhenExceptionThrown_ReturnsFalse
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WhenReviewDoesNotExist_ReturnsFalse
  - Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WithExistingReview_ReturnsTrue
  langs:
  - csharp
  - vb
  name: ReviewAsyncRepositoryTests
  nameWithType: ReviewAsyncRepositoryTests
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  type: Class
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: ReviewAsyncRepositoryTests
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 17
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [TestFixture]

      public class ReviewAsyncRepositoryTests
    content.vb: >-
      <TestFixture>

      Public Class ReviewAsyncRepositoryTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: NUnit.Framework.TestFixtureAttribute
    ctor: NUnit.Framework.TestFixtureAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.Setup
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.Setup
  id: Setup
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: Setup()
  nameWithType: ReviewAsyncRepositoryTests.Setup()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.Setup()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: Setup
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 56
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [SetUp]

      public void Setup()
    content.vb: >-
      <SetUp>

      Public Sub Setup()
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.Setup*
  attributes:
  - type: NUnit.Framework.SetUpAttribute
    ctor: NUnit.Framework.SetUpAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.TearDown
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.TearDown
  id: TearDown
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: TearDown()
  nameWithType: ReviewAsyncRepositoryTests.TearDown()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.TearDown()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: TearDown
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 75
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [TearDown]

      public void TearDown()
    content.vb: >-
      <TearDown>

      Public Sub TearDown()
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.TearDown*
  attributes:
  - type: NUnit.Framework.TearDownAttribute
    ctor: NUnit.Framework.TearDownAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenReviewExists_ReturnsReview
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenReviewExists_ReturnsReview
  id: GetByIdAsync_WhenReviewExists_ReturnsReview
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: GetByIdAsync_WhenReviewExists_ReturnsReview()
  nameWithType: ReviewAsyncRepositoryTests.GetByIdAsync_WhenReviewExists_ReturnsReview()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenReviewExists_ReturnsReview()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: GetByIdAsync_WhenReviewExists_ReturnsReview
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 84
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task GetByIdAsync_WhenReviewExists_ReturnsReview()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function GetByIdAsync_WhenReviewExists_ReturnsReview() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenReviewExists_ReturnsReview*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenReviewDoesNotExist_ReturnsNull
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenReviewDoesNotExist_ReturnsNull
  id: GetByIdAsync_WhenReviewDoesNotExist_ReturnsNull
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: GetByIdAsync_WhenReviewDoesNotExist_ReturnsNull()
  nameWithType: ReviewAsyncRepositoryTests.GetByIdAsync_WhenReviewDoesNotExist_ReturnsNull()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenReviewDoesNotExist_ReturnsNull()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: GetByIdAsync_WhenReviewDoesNotExist_ReturnsNull
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 108
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task GetByIdAsync_WhenReviewDoesNotExist_ReturnsNull()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function GetByIdAsync_WhenReviewDoesNotExist_ReturnsNull() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenReviewDoesNotExist_ReturnsNull*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenExceptionThrown_ReturnsNull
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenExceptionThrown_ReturnsNull
  id: GetByIdAsync_WhenExceptionThrown_ReturnsNull
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: GetByIdAsync_WhenExceptionThrown_ReturnsNull()
  nameWithType: ReviewAsyncRepositoryTests.GetByIdAsync_WhenExceptionThrown_ReturnsNull()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenExceptionThrown_ReturnsNull()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: GetByIdAsync_WhenExceptionThrown_ReturnsNull
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 121
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task GetByIdAsync_WhenExceptionThrown_ReturnsNull()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function GetByIdAsync_WhenExceptionThrown_ReturnsNull() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenExceptionThrown_ReturnsNull*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WithNewReview_ReturnsId
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WithNewReview_ReturnsId
  id: AddAsync_WithNewReview_ReturnsId
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: AddAsync_WithNewReview_ReturnsId()
  nameWithType: ReviewAsyncRepositoryTests.AddAsync_WithNewReview_ReturnsId()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WithNewReview_ReturnsId()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: AddAsync_WithNewReview_ReturnsId
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 149
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task AddAsync_WithNewReview_ReturnsId()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function AddAsync_WithNewReview_ReturnsId() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WithNewReview_ReturnsId*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WithExistingReview_ReturnsMinusOne
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WithExistingReview_ReturnsMinusOne
  id: AddAsync_WithExistingReview_ReturnsMinusOne
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: AddAsync_WithExistingReview_ReturnsMinusOne()
  nameWithType: ReviewAsyncRepositoryTests.AddAsync_WithExistingReview_ReturnsMinusOne()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WithExistingReview_ReturnsMinusOne()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: AddAsync_WithExistingReview_ReturnsMinusOne
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 162
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task AddAsync_WithExistingReview_ReturnsMinusOne()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function AddAsync_WithExistingReview_ReturnsMinusOne() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WithExistingReview_ReturnsMinusOne*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WhenExceptionThrown_ReturnsMinusOne
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WhenExceptionThrown_ReturnsMinusOne
  id: AddAsync_WhenExceptionThrown_ReturnsMinusOne
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: AddAsync_WhenExceptionThrown_ReturnsMinusOne()
  nameWithType: ReviewAsyncRepositoryTests.AddAsync_WhenExceptionThrown_ReturnsMinusOne()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WhenExceptionThrown_ReturnsMinusOne()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: AddAsync_WhenExceptionThrown_ReturnsMinusOne
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 175
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task AddAsync_WhenExceptionThrown_ReturnsMinusOne()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function AddAsync_WhenExceptionThrown_ReturnsMinusOne() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WhenExceptionThrown_ReturnsMinusOne*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WithExistingReview_ReturnsTrue
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WithExistingReview_ReturnsTrue
  id: UpdateAsync_WithExistingReview_ReturnsTrue
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: UpdateAsync_WithExistingReview_ReturnsTrue()
  nameWithType: ReviewAsyncRepositoryTests.UpdateAsync_WithExistingReview_ReturnsTrue()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WithExistingReview_ReturnsTrue()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: UpdateAsync_WithExistingReview_ReturnsTrue
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 210
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task UpdateAsync_WithExistingReview_ReturnsTrue()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function UpdateAsync_WithExistingReview_ReturnsTrue() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WithExistingReview_ReturnsTrue*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WhenReviewDoesNotExist_ReturnsFalse
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WhenReviewDoesNotExist_ReturnsFalse
  id: UpdateAsync_WhenReviewDoesNotExist_ReturnsFalse
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: UpdateAsync_WhenReviewDoesNotExist_ReturnsFalse()
  nameWithType: ReviewAsyncRepositoryTests.UpdateAsync_WhenReviewDoesNotExist_ReturnsFalse()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WhenReviewDoesNotExist_ReturnsFalse()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: UpdateAsync_WhenReviewDoesNotExist_ReturnsFalse
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 224
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task UpdateAsync_WhenReviewDoesNotExist_ReturnsFalse()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function UpdateAsync_WhenReviewDoesNotExist_ReturnsFalse() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WhenReviewDoesNotExist_ReturnsFalse*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WhenExceptionThrown_ReturnsFalse
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WhenExceptionThrown_ReturnsFalse
  id: UpdateAsync_WhenExceptionThrown_ReturnsFalse
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: UpdateAsync_WhenExceptionThrown_ReturnsFalse()
  nameWithType: ReviewAsyncRepositoryTests.UpdateAsync_WhenExceptionThrown_ReturnsFalse()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WhenExceptionThrown_ReturnsFalse()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: UpdateAsync_WhenExceptionThrown_ReturnsFalse
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 237
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task UpdateAsync_WhenExceptionThrown_ReturnsFalse()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function UpdateAsync_WhenExceptionThrown_ReturnsFalse() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WhenExceptionThrown_ReturnsFalse*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenReviewExists_ReturnsTrue
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenReviewExists_ReturnsTrue
  id: DeleteAsync_WhenReviewExists_ReturnsTrue
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: DeleteAsync_WhenReviewExists_ReturnsTrue()
  nameWithType: ReviewAsyncRepositoryTests.DeleteAsync_WhenReviewExists_ReturnsTrue()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenReviewExists_ReturnsTrue()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: DeleteAsync_WhenReviewExists_ReturnsTrue
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 270
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task DeleteAsync_WhenReviewExists_ReturnsTrue()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function DeleteAsync_WhenReviewExists_ReturnsTrue() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenReviewExists_ReturnsTrue*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenReviewDoesNotExist_ReturnsFalse
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenReviewDoesNotExist_ReturnsFalse
  id: DeleteAsync_WhenReviewDoesNotExist_ReturnsFalse
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: DeleteAsync_WhenReviewDoesNotExist_ReturnsFalse()
  nameWithType: ReviewAsyncRepositoryTests.DeleteAsync_WhenReviewDoesNotExist_ReturnsFalse()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenReviewDoesNotExist_ReturnsFalse()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: DeleteAsync_WhenReviewDoesNotExist_ReturnsFalse
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 283
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task DeleteAsync_WhenReviewDoesNotExist_ReturnsFalse()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function DeleteAsync_WhenReviewDoesNotExist_ReturnsFalse() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenReviewDoesNotExist_ReturnsFalse*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenExceptionThrown_ReturnsFalse
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenExceptionThrown_ReturnsFalse
  id: DeleteAsync_WhenExceptionThrown_ReturnsFalse
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: DeleteAsync_WhenExceptionThrown_ReturnsFalse()
  nameWithType: ReviewAsyncRepositoryTests.DeleteAsync_WhenExceptionThrown_ReturnsFalse()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenExceptionThrown_ReturnsFalse()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: DeleteAsync_WhenExceptionThrown_ReturnsFalse
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 296
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task DeleteAsync_WhenExceptionThrown_ReturnsFalse()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function DeleteAsync_WhenExceptionThrown_ReturnsFalse() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenExceptionThrown_ReturnsFalse*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenReviewsExist_ReturnsReviews
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenReviewsExist_ReturnsReviews
  id: ListAllAsync_WhenReviewsExist_ReturnsReviews
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: ListAllAsync_WhenReviewsExist_ReturnsReviews()
  nameWithType: ReviewAsyncRepositoryTests.ListAllAsync_WhenReviewsExist_ReturnsReviews()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenReviewsExist_ReturnsReviews()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: ListAllAsync_WhenReviewsExist_ReturnsReviews
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 331
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task ListAllAsync_WhenReviewsExist_ReturnsReviews()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function ListAllAsync_WhenReviewsExist_ReturnsReviews() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenReviewsExist_ReturnsReviews*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenNoReviewsExist_ReturnsEmpty
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenNoReviewsExist_ReturnsEmpty
  id: ListAllAsync_WhenNoReviewsExist_ReturnsEmpty
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: ListAllAsync_WhenNoReviewsExist_ReturnsEmpty()
  nameWithType: ReviewAsyncRepositoryTests.ListAllAsync_WhenNoReviewsExist_ReturnsEmpty()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenNoReviewsExist_ReturnsEmpty()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: ListAllAsync_WhenNoReviewsExist_ReturnsEmpty
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 345
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task ListAllAsync_WhenNoReviewsExist_ReturnsEmpty()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function ListAllAsync_WhenNoReviewsExist_ReturnsEmpty() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenNoReviewsExist_ReturnsEmpty*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenExceptionThrown_ReturnsNull
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenExceptionThrown_ReturnsNull
  id: ListAllAsync_WhenExceptionThrown_ReturnsNull
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: ListAllAsync_WhenExceptionThrown_ReturnsNull()
  nameWithType: ReviewAsyncRepositoryTests.ListAllAsync_WhenExceptionThrown_ReturnsNull()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenExceptionThrown_ReturnsNull()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: ListAllAsync_WhenExceptionThrown_ReturnsNull
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 358
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task ListAllAsync_WhenExceptionThrown_ReturnsNull()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function ListAllAsync_WhenExceptionThrown_ReturnsNull() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenExceptionThrown_ReturnsNull*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenReviewExists_ReturnsReview
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenReviewExists_ReturnsReview
  id: GetUserReviewForProduct_WhenReviewExists_ReturnsReview
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: GetUserReviewForProduct_WhenReviewExists_ReturnsReview()
  nameWithType: ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenReviewExists_ReturnsReview()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenReviewExists_ReturnsReview()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: GetUserReviewForProduct_WhenReviewExists_ReturnsReview
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 385
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task GetUserReviewForProduct_WhenReviewExists_ReturnsReview()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function GetUserReviewForProduct_WhenReviewExists_ReturnsReview() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenReviewExists_ReturnsReview*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenReviewDoesNotExist_ReturnsReviewWithNegativeOneId
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenReviewDoesNotExist_ReturnsReviewWithNegativeOneId
  id: GetUserReviewForProduct_WhenReviewDoesNotExist_ReturnsReviewWithNegativeOneId
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: GetUserReviewForProduct_WhenReviewDoesNotExist_ReturnsReviewWithNegativeOneId()
  nameWithType: ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenReviewDoesNotExist_ReturnsReviewWithNegativeOneId()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenReviewDoesNotExist_ReturnsReviewWithNegativeOneId()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: GetUserReviewForProduct_WhenReviewDoesNotExist_ReturnsReviewWithNegativeOneId
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 398
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task GetUserReviewForProduct_WhenReviewDoesNotExist_ReturnsReviewWithNegativeOneId()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function GetUserReviewForProduct_WhenReviewDoesNotExist_ReturnsReviewWithNegativeOneId() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenReviewDoesNotExist_ReturnsReviewWithNegativeOneId*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenExceptionThrown_ReturnsNull
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenExceptionThrown_ReturnsNull
  id: GetUserReviewForProduct_WhenExceptionThrown_ReturnsNull
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: GetUserReviewForProduct_WhenExceptionThrown_ReturnsNull()
  nameWithType: ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenExceptionThrown_ReturnsNull()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenExceptionThrown_ReturnsNull()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: GetUserReviewForProduct_WhenExceptionThrown_ReturnsNull
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 412
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task GetUserReviewForProduct_WhenExceptionThrown_ReturnsNull()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function GetUserReviewForProduct_WhenExceptionThrown_ReturnsNull() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenExceptionThrown_ReturnsNull*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenReviewsExist_ReturnsAverage
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenReviewsExist_ReturnsAverage
  id: GetAverageRatingForProduct_WhenReviewsExist_ReturnsAverage
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: GetAverageRatingForProduct_WhenReviewsExist_ReturnsAverage()
  nameWithType: ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenReviewsExist_ReturnsAverage()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenReviewsExist_ReturnsAverage()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: GetAverageRatingForProduct_WhenReviewsExist_ReturnsAverage
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 439
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task GetAverageRatingForProduct_WhenReviewsExist_ReturnsAverage()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function GetAverageRatingForProduct_WhenReviewsExist_ReturnsAverage() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenReviewsExist_ReturnsAverage*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenNoReviewsExist_ReturnsZero
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenNoReviewsExist_ReturnsZero
  id: GetAverageRatingForProduct_WhenNoReviewsExist_ReturnsZero
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: GetAverageRatingForProduct_WhenNoReviewsExist_ReturnsZero()
  nameWithType: ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenNoReviewsExist_ReturnsZero()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenNoReviewsExist_ReturnsZero()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: GetAverageRatingForProduct_WhenNoReviewsExist_ReturnsZero
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 452
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task GetAverageRatingForProduct_WhenNoReviewsExist_ReturnsZero()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function GetAverageRatingForProduct_WhenNoReviewsExist_ReturnsZero() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenNoReviewsExist_ReturnsZero*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenExceptionThrown_ReturnsZero
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenExceptionThrown_ReturnsZero
  id: GetAverageRatingForProduct_WhenExceptionThrown_ReturnsZero
  parent: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: GetAverageRatingForProduct_WhenExceptionThrown_ReturnsZero()
  nameWithType: ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenExceptionThrown_ReturnsZero()
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenExceptionThrown_ReturnsZero()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: GetAverageRatingForProduct_WhenExceptionThrown_ReturnsZero
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ReviewAsyncRepositoryTests.cs
    startLine: 465
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task GetAverageRatingForProduct_WhenExceptionThrown_ReturnsZero()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function GetAverageRatingForProduct_WhenExceptionThrown_ReturnsZero() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenExceptionThrown_ReturnsZero*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
references:
- uid: Ecommerce.UnitTests.PersistenceTests
  commentId: N:Ecommerce.UnitTests.PersistenceTests
  href: Ecommerce.html
  name: Ecommerce.UnitTests.PersistenceTests
  nameWithType: Ecommerce.UnitTests.PersistenceTests
  fullName: Ecommerce.UnitTests.PersistenceTests
  spec.csharp:
  - uid: Ecommerce
    name: Ecommerce
    href: Ecommerce.html
  - name: .
  - uid: Ecommerce.UnitTests
    name: UnitTests
    href: Ecommerce.UnitTests.html
  - name: .
  - uid: Ecommerce.UnitTests.PersistenceTests
    name: PersistenceTests
    href: Ecommerce.UnitTests.PersistenceTests.html
  spec.vb:
  - uid: Ecommerce
    name: Ecommerce
    href: Ecommerce.html
  - name: .
  - uid: Ecommerce.UnitTests
    name: UnitTests
    href: Ecommerce.UnitTests.html
  - name: .
  - uid: Ecommerce.UnitTests.PersistenceTests
    name: PersistenceTests
    href: Ecommerce.UnitTests.PersistenceTests.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.Setup*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.Setup
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_Setup
  name: Setup
  nameWithType: ReviewAsyncRepositoryTests.Setup
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.Setup
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.TearDown*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.TearDown
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_TearDown
  name: TearDown
  nameWithType: ReviewAsyncRepositoryTests.TearDown
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.TearDown
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenReviewExists_ReturnsReview*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenReviewExists_ReturnsReview
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_GetByIdAsync_WhenReviewExists_ReturnsReview
  name: GetByIdAsync_WhenReviewExists_ReturnsReview
  nameWithType: ReviewAsyncRepositoryTests.GetByIdAsync_WhenReviewExists_ReturnsReview
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenReviewExists_ReturnsReview
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenReviewDoesNotExist_ReturnsNull*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenReviewDoesNotExist_ReturnsNull
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_GetByIdAsync_WhenReviewDoesNotExist_ReturnsNull
  name: GetByIdAsync_WhenReviewDoesNotExist_ReturnsNull
  nameWithType: ReviewAsyncRepositoryTests.GetByIdAsync_WhenReviewDoesNotExist_ReturnsNull
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenReviewDoesNotExist_ReturnsNull
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenExceptionThrown_ReturnsNull*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenExceptionThrown_ReturnsNull
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_GetByIdAsync_WhenExceptionThrown_ReturnsNull
  name: GetByIdAsync_WhenExceptionThrown_ReturnsNull
  nameWithType: ReviewAsyncRepositoryTests.GetByIdAsync_WhenExceptionThrown_ReturnsNull
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetByIdAsync_WhenExceptionThrown_ReturnsNull
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WithNewReview_ReturnsId*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WithNewReview_ReturnsId
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_AddAsync_WithNewReview_ReturnsId
  name: AddAsync_WithNewReview_ReturnsId
  nameWithType: ReviewAsyncRepositoryTests.AddAsync_WithNewReview_ReturnsId
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WithNewReview_ReturnsId
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WithExistingReview_ReturnsMinusOne*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WithExistingReview_ReturnsMinusOne
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_AddAsync_WithExistingReview_ReturnsMinusOne
  name: AddAsync_WithExistingReview_ReturnsMinusOne
  nameWithType: ReviewAsyncRepositoryTests.AddAsync_WithExistingReview_ReturnsMinusOne
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WithExistingReview_ReturnsMinusOne
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WhenExceptionThrown_ReturnsMinusOne*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WhenExceptionThrown_ReturnsMinusOne
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_AddAsync_WhenExceptionThrown_ReturnsMinusOne
  name: AddAsync_WhenExceptionThrown_ReturnsMinusOne
  nameWithType: ReviewAsyncRepositoryTests.AddAsync_WhenExceptionThrown_ReturnsMinusOne
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.AddAsync_WhenExceptionThrown_ReturnsMinusOne
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WithExistingReview_ReturnsTrue*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WithExistingReview_ReturnsTrue
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_UpdateAsync_WithExistingReview_ReturnsTrue
  name: UpdateAsync_WithExistingReview_ReturnsTrue
  nameWithType: ReviewAsyncRepositoryTests.UpdateAsync_WithExistingReview_ReturnsTrue
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WithExistingReview_ReturnsTrue
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WhenReviewDoesNotExist_ReturnsFalse*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WhenReviewDoesNotExist_ReturnsFalse
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_UpdateAsync_WhenReviewDoesNotExist_ReturnsFalse
  name: UpdateAsync_WhenReviewDoesNotExist_ReturnsFalse
  nameWithType: ReviewAsyncRepositoryTests.UpdateAsync_WhenReviewDoesNotExist_ReturnsFalse
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WhenReviewDoesNotExist_ReturnsFalse
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WhenExceptionThrown_ReturnsFalse*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WhenExceptionThrown_ReturnsFalse
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_UpdateAsync_WhenExceptionThrown_ReturnsFalse
  name: UpdateAsync_WhenExceptionThrown_ReturnsFalse
  nameWithType: ReviewAsyncRepositoryTests.UpdateAsync_WhenExceptionThrown_ReturnsFalse
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.UpdateAsync_WhenExceptionThrown_ReturnsFalse
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenReviewExists_ReturnsTrue*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenReviewExists_ReturnsTrue
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_DeleteAsync_WhenReviewExists_ReturnsTrue
  name: DeleteAsync_WhenReviewExists_ReturnsTrue
  nameWithType: ReviewAsyncRepositoryTests.DeleteAsync_WhenReviewExists_ReturnsTrue
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenReviewExists_ReturnsTrue
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenReviewDoesNotExist_ReturnsFalse*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenReviewDoesNotExist_ReturnsFalse
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_DeleteAsync_WhenReviewDoesNotExist_ReturnsFalse
  name: DeleteAsync_WhenReviewDoesNotExist_ReturnsFalse
  nameWithType: ReviewAsyncRepositoryTests.DeleteAsync_WhenReviewDoesNotExist_ReturnsFalse
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenReviewDoesNotExist_ReturnsFalse
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenExceptionThrown_ReturnsFalse*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenExceptionThrown_ReturnsFalse
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_DeleteAsync_WhenExceptionThrown_ReturnsFalse
  name: DeleteAsync_WhenExceptionThrown_ReturnsFalse
  nameWithType: ReviewAsyncRepositoryTests.DeleteAsync_WhenExceptionThrown_ReturnsFalse
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.DeleteAsync_WhenExceptionThrown_ReturnsFalse
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenReviewsExist_ReturnsReviews*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenReviewsExist_ReturnsReviews
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_ListAllAsync_WhenReviewsExist_ReturnsReviews
  name: ListAllAsync_WhenReviewsExist_ReturnsReviews
  nameWithType: ReviewAsyncRepositoryTests.ListAllAsync_WhenReviewsExist_ReturnsReviews
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenReviewsExist_ReturnsReviews
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenNoReviewsExist_ReturnsEmpty*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenNoReviewsExist_ReturnsEmpty
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_ListAllAsync_WhenNoReviewsExist_ReturnsEmpty
  name: ListAllAsync_WhenNoReviewsExist_ReturnsEmpty
  nameWithType: ReviewAsyncRepositoryTests.ListAllAsync_WhenNoReviewsExist_ReturnsEmpty
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenNoReviewsExist_ReturnsEmpty
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenExceptionThrown_ReturnsNull*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenExceptionThrown_ReturnsNull
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_ListAllAsync_WhenExceptionThrown_ReturnsNull
  name: ListAllAsync_WhenExceptionThrown_ReturnsNull
  nameWithType: ReviewAsyncRepositoryTests.ListAllAsync_WhenExceptionThrown_ReturnsNull
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.ListAllAsync_WhenExceptionThrown_ReturnsNull
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenReviewExists_ReturnsReview*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenReviewExists_ReturnsReview
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_GetUserReviewForProduct_WhenReviewExists_ReturnsReview
  name: GetUserReviewForProduct_WhenReviewExists_ReturnsReview
  nameWithType: ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenReviewExists_ReturnsReview
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenReviewExists_ReturnsReview
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenReviewDoesNotExist_ReturnsReviewWithNegativeOneId*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenReviewDoesNotExist_ReturnsReviewWithNegativeOneId
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_GetUserReviewForProduct_WhenReviewDoesNotExist_ReturnsReviewWithNegativeOneId
  name: GetUserReviewForProduct_WhenReviewDoesNotExist_ReturnsReviewWithNegativeOneId
  nameWithType: ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenReviewDoesNotExist_ReturnsReviewWithNegativeOneId
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenReviewDoesNotExist_ReturnsReviewWithNegativeOneId
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenExceptionThrown_ReturnsNull*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenExceptionThrown_ReturnsNull
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_GetUserReviewForProduct_WhenExceptionThrown_ReturnsNull
  name: GetUserReviewForProduct_WhenExceptionThrown_ReturnsNull
  nameWithType: ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenExceptionThrown_ReturnsNull
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetUserReviewForProduct_WhenExceptionThrown_ReturnsNull
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenReviewsExist_ReturnsAverage*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenReviewsExist_ReturnsAverage
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_GetAverageRatingForProduct_WhenReviewsExist_ReturnsAverage
  name: GetAverageRatingForProduct_WhenReviewsExist_ReturnsAverage
  nameWithType: ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenReviewsExist_ReturnsAverage
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenReviewsExist_ReturnsAverage
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenNoReviewsExist_ReturnsZero*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenNoReviewsExist_ReturnsZero
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_GetAverageRatingForProduct_WhenNoReviewsExist_ReturnsZero
  name: GetAverageRatingForProduct_WhenNoReviewsExist_ReturnsZero
  nameWithType: ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenNoReviewsExist_ReturnsZero
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenNoReviewsExist_ReturnsZero
- uid: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenExceptionThrown_ReturnsZero*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenExceptionThrown_ReturnsZero
  href: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ReviewAsyncRepositoryTests_GetAverageRatingForProduct_WhenExceptionThrown_ReturnsZero
  name: GetAverageRatingForProduct_WhenExceptionThrown_ReturnsZero
  nameWithType: ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenExceptionThrown_ReturnsZero
  fullName: Ecommerce.UnitTests.PersistenceTests.ReviewAsyncRepositoryTests.GetAverageRatingForProduct_WhenExceptionThrown_ReturnsZero
