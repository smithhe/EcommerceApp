### YamlMime:ManagedReference
items:
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests
  commentId: T:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests
  id: ProductAsyncRepositoryTests
  parent: Ecommerce.UnitTests.PersistenceTests
  children:
  - Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WhenExceptionThrown_ReturnsMinusOne
  - Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WithExistingProduct_ReturnsMinusOne
  - Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WithNewProduct_ReturnsIdOfNewProduct
  - Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenExceptionThrown_ReturnsFalse
  - Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenProductDoesNotExist_ReturnsFalse
  - Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenProductExists_ReturnsTrue
  - Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenExceptionThrown_ReturnsNull
  - Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenProductDoesNotExist_ReturnsNull
  - Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenProductExists_ReturnsProduct
  - Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenExceptionThrown_ReturnsEmptyList
  - Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenNoProductsExist_ReturnsEmptyList
  - Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenProductsExist_ReturnsProducts
  - Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.Setup
  - Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.TearDown
  - Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenExceptionThrown_ReturnsFalse
  - Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenProductDoesNotExist_ReturnsFalse
  - Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenProductExists_ReturnsTrue
  langs:
  - csharp
  - vb
  name: ProductAsyncRepositoryTests
  nameWithType: ProductAsyncRepositoryTests
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests
  type: Class
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: ProductAsyncRepositoryTests
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
    startLine: 17
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [TestFixture]

      public class ProductAsyncRepositoryTests
    content.vb: >-
      <TestFixture>

      Public Class ProductAsyncRepositoryTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: NUnit.Framework.TestFixtureAttribute
    ctor: NUnit.Framework.TestFixtureAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.Setup
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.Setup
  id: Setup
  parent: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: Setup()
  nameWithType: ProductAsyncRepositoryTests.Setup()
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.Setup()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: Setup
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
    startLine: 66
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [SetUp]

      public void Setup()
    content.vb: >-
      <SetUp>

      Public Sub Setup()
  overload: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.Setup*
  attributes:
  - type: NUnit.Framework.SetUpAttribute
    ctor: NUnit.Framework.SetUpAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.TearDown
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.TearDown
  id: TearDown
  parent: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: TearDown()
  nameWithType: ProductAsyncRepositoryTests.TearDown()
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.TearDown()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: TearDown
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
    startLine: 85
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [TearDown]

      public void TearDown()
    content.vb: >-
      <TearDown>

      Public Sub TearDown()
  overload: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.TearDown*
  attributes:
  - type: NUnit.Framework.TearDownAttribute
    ctor: NUnit.Framework.TearDownAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenProductExists_ReturnsProduct
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenProductExists_ReturnsProduct
  id: GetByIdAsync_WhenProductExists_ReturnsProduct
  parent: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: GetByIdAsync_WhenProductExists_ReturnsProduct()
  nameWithType: ProductAsyncRepositoryTests.GetByIdAsync_WhenProductExists_ReturnsProduct()
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenProductExists_ReturnsProduct()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: GetByIdAsync_WhenProductExists_ReturnsProduct
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
    startLine: 94
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task GetByIdAsync_WhenProductExists_ReturnsProduct()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function GetByIdAsync_WhenProductExists_ReturnsProduct() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenProductExists_ReturnsProduct*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenProductDoesNotExist_ReturnsNull
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenProductDoesNotExist_ReturnsNull
  id: GetByIdAsync_WhenProductDoesNotExist_ReturnsNull
  parent: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: GetByIdAsync_WhenProductDoesNotExist_ReturnsNull()
  nameWithType: ProductAsyncRepositoryTests.GetByIdAsync_WhenProductDoesNotExist_ReturnsNull()
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenProductDoesNotExist_ReturnsNull()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: GetByIdAsync_WhenProductDoesNotExist_ReturnsNull
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
    startLine: 121
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task GetByIdAsync_WhenProductDoesNotExist_ReturnsNull()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function GetByIdAsync_WhenProductDoesNotExist_ReturnsNull() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenProductDoesNotExist_ReturnsNull*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenExceptionThrown_ReturnsNull
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenExceptionThrown_ReturnsNull
  id: GetByIdAsync_WhenExceptionThrown_ReturnsNull
  parent: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: GetByIdAsync_WhenExceptionThrown_ReturnsNull()
  nameWithType: ProductAsyncRepositoryTests.GetByIdAsync_WhenExceptionThrown_ReturnsNull()
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenExceptionThrown_ReturnsNull()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: GetByIdAsync_WhenExceptionThrown_ReturnsNull
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
    startLine: 134
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task GetByIdAsync_WhenExceptionThrown_ReturnsNull()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function GetByIdAsync_WhenExceptionThrown_ReturnsNull() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenExceptionThrown_ReturnsNull*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WithNewProduct_ReturnsIdOfNewProduct
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WithNewProduct_ReturnsIdOfNewProduct
  id: AddAsync_WithNewProduct_ReturnsIdOfNewProduct
  parent: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: AddAsync_WithNewProduct_ReturnsIdOfNewProduct()
  nameWithType: ProductAsyncRepositoryTests.AddAsync_WithNewProduct_ReturnsIdOfNewProduct()
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WithNewProduct_ReturnsIdOfNewProduct()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: AddAsync_WithNewProduct_ReturnsIdOfNewProduct
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
    startLine: 163
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task AddAsync_WithNewProduct_ReturnsIdOfNewProduct()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function AddAsync_WithNewProduct_ReturnsIdOfNewProduct() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WithNewProduct_ReturnsIdOfNewProduct*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WithExistingProduct_ReturnsMinusOne
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WithExistingProduct_ReturnsMinusOne
  id: AddAsync_WithExistingProduct_ReturnsMinusOne
  parent: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: AddAsync_WithExistingProduct_ReturnsMinusOne()
  nameWithType: ProductAsyncRepositoryTests.AddAsync_WithExistingProduct_ReturnsMinusOne()
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WithExistingProduct_ReturnsMinusOne()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: AddAsync_WithExistingProduct_ReturnsMinusOne
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
    startLine: 176
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task AddAsync_WithExistingProduct_ReturnsMinusOne()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function AddAsync_WithExistingProduct_ReturnsMinusOne() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WithExistingProduct_ReturnsMinusOne*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WhenExceptionThrown_ReturnsMinusOne
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WhenExceptionThrown_ReturnsMinusOne
  id: AddAsync_WhenExceptionThrown_ReturnsMinusOne
  parent: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: AddAsync_WhenExceptionThrown_ReturnsMinusOne()
  nameWithType: ProductAsyncRepositoryTests.AddAsync_WhenExceptionThrown_ReturnsMinusOne()
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WhenExceptionThrown_ReturnsMinusOne()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: AddAsync_WhenExceptionThrown_ReturnsMinusOne
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
    startLine: 189
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task AddAsync_WhenExceptionThrown_ReturnsMinusOne()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function AddAsync_WhenExceptionThrown_ReturnsMinusOne() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WhenExceptionThrown_ReturnsMinusOne*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenProductExists_ReturnsTrue
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenProductExists_ReturnsTrue
  id: UpdateAsync_WhenProductExists_ReturnsTrue
  parent: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: UpdateAsync_WhenProductExists_ReturnsTrue()
  nameWithType: ProductAsyncRepositoryTests.UpdateAsync_WhenProductExists_ReturnsTrue()
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenProductExists_ReturnsTrue()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: UpdateAsync_WhenProductExists_ReturnsTrue
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
    startLine: 224
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task UpdateAsync_WhenProductExists_ReturnsTrue()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function UpdateAsync_WhenProductExists_ReturnsTrue() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenProductExists_ReturnsTrue*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenProductDoesNotExist_ReturnsFalse
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenProductDoesNotExist_ReturnsFalse
  id: UpdateAsync_WhenProductDoesNotExist_ReturnsFalse
  parent: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: UpdateAsync_WhenProductDoesNotExist_ReturnsFalse()
  nameWithType: ProductAsyncRepositoryTests.UpdateAsync_WhenProductDoesNotExist_ReturnsFalse()
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenProductDoesNotExist_ReturnsFalse()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: UpdateAsync_WhenProductDoesNotExist_ReturnsFalse
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
    startLine: 238
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task UpdateAsync_WhenProductDoesNotExist_ReturnsFalse()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function UpdateAsync_WhenProductDoesNotExist_ReturnsFalse() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenProductDoesNotExist_ReturnsFalse*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenExceptionThrown_ReturnsFalse
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenExceptionThrown_ReturnsFalse
  id: UpdateAsync_WhenExceptionThrown_ReturnsFalse
  parent: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: UpdateAsync_WhenExceptionThrown_ReturnsFalse()
  nameWithType: ProductAsyncRepositoryTests.UpdateAsync_WhenExceptionThrown_ReturnsFalse()
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenExceptionThrown_ReturnsFalse()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: UpdateAsync_WhenExceptionThrown_ReturnsFalse
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
    startLine: 251
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task UpdateAsync_WhenExceptionThrown_ReturnsFalse()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function UpdateAsync_WhenExceptionThrown_ReturnsFalse() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenExceptionThrown_ReturnsFalse*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenProductExists_ReturnsTrue
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenProductExists_ReturnsTrue
  id: DeleteAsync_WhenProductExists_ReturnsTrue
  parent: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: DeleteAsync_WhenProductExists_ReturnsTrue()
  nameWithType: ProductAsyncRepositoryTests.DeleteAsync_WhenProductExists_ReturnsTrue()
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenProductExists_ReturnsTrue()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: DeleteAsync_WhenProductExists_ReturnsTrue
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
    startLine: 284
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task DeleteAsync_WhenProductExists_ReturnsTrue()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function DeleteAsync_WhenProductExists_ReturnsTrue() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenProductExists_ReturnsTrue*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenProductDoesNotExist_ReturnsFalse
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenProductDoesNotExist_ReturnsFalse
  id: DeleteAsync_WhenProductDoesNotExist_ReturnsFalse
  parent: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: DeleteAsync_WhenProductDoesNotExist_ReturnsFalse()
  nameWithType: ProductAsyncRepositoryTests.DeleteAsync_WhenProductDoesNotExist_ReturnsFalse()
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenProductDoesNotExist_ReturnsFalse()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: DeleteAsync_WhenProductDoesNotExist_ReturnsFalse
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
    startLine: 297
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task DeleteAsync_WhenProductDoesNotExist_ReturnsFalse()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function DeleteAsync_WhenProductDoesNotExist_ReturnsFalse() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenProductDoesNotExist_ReturnsFalse*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenExceptionThrown_ReturnsFalse
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenExceptionThrown_ReturnsFalse
  id: DeleteAsync_WhenExceptionThrown_ReturnsFalse
  parent: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: DeleteAsync_WhenExceptionThrown_ReturnsFalse()
  nameWithType: ProductAsyncRepositoryTests.DeleteAsync_WhenExceptionThrown_ReturnsFalse()
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenExceptionThrown_ReturnsFalse()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: DeleteAsync_WhenExceptionThrown_ReturnsFalse
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
    startLine: 310
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task DeleteAsync_WhenExceptionThrown_ReturnsFalse()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function DeleteAsync_WhenExceptionThrown_ReturnsFalse() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenExceptionThrown_ReturnsFalse*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenProductsExist_ReturnsProducts
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenProductsExist_ReturnsProducts
  id: ListAllAsync_WhenProductsExist_ReturnsProducts
  parent: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: ListAllAsync_WhenProductsExist_ReturnsProducts()
  nameWithType: ProductAsyncRepositoryTests.ListAllAsync_WhenProductsExist_ReturnsProducts()
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenProductsExist_ReturnsProducts()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: ListAllAsync_WhenProductsExist_ReturnsProducts
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
    startLine: 345
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task ListAllAsync_WhenProductsExist_ReturnsProducts()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function ListAllAsync_WhenProductsExist_ReturnsProducts() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenProductsExist_ReturnsProducts*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenNoProductsExist_ReturnsEmptyList
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenNoProductsExist_ReturnsEmptyList
  id: ListAllAsync_WhenNoProductsExist_ReturnsEmptyList
  parent: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: ListAllAsync_WhenNoProductsExist_ReturnsEmptyList()
  nameWithType: ProductAsyncRepositoryTests.ListAllAsync_WhenNoProductsExist_ReturnsEmptyList()
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenNoProductsExist_ReturnsEmptyList()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: ListAllAsync_WhenNoProductsExist_ReturnsEmptyList
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
    startLine: 359
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task ListAllAsync_WhenNoProductsExist_ReturnsEmptyList()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function ListAllAsync_WhenNoProductsExist_ReturnsEmptyList() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenNoProductsExist_ReturnsEmptyList*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenExceptionThrown_ReturnsEmptyList
  commentId: M:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenExceptionThrown_ReturnsEmptyList
  id: ListAllAsync_WhenExceptionThrown_ReturnsEmptyList
  parent: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests
  langs:
  - csharp
  - vb
  name: ListAllAsync_WhenExceptionThrown_ReturnsEmptyList()
  nameWithType: ProductAsyncRepositoryTests.ListAllAsync_WhenExceptionThrown_ReturnsEmptyList()
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenExceptionThrown_ReturnsEmptyList()
  type: Method
  source:
    remote:
      path: Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
      branch: dev
      repo: https://github.com/smithhe/EcommerceApp.git
    id: ListAllAsync_WhenExceptionThrown_ReturnsEmptyList
    path: ../../Tests/Ecommerce.UnitTests/PersistenceTests/ProductAsyncRepositoryTests.cs
    startLine: 372
  assemblies:
  - Ecommerce.UnitTests
  namespace: Ecommerce.UnitTests.PersistenceTests
  syntax:
    content: >-
      [Test]

      public Task ListAllAsync_WhenExceptionThrown_ReturnsEmptyList()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Test>

      Public Function ListAllAsync_WhenExceptionThrown_ReturnsEmptyList() As Task
  overload: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenExceptionThrown_ReturnsEmptyList*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
references:
- uid: Ecommerce.UnitTests.PersistenceTests
  commentId: N:Ecommerce.UnitTests.PersistenceTests
  href: Ecommerce.html
  name: Ecommerce.UnitTests.PersistenceTests
  nameWithType: Ecommerce.UnitTests.PersistenceTests
  fullName: Ecommerce.UnitTests.PersistenceTests
  spec.csharp:
  - uid: Ecommerce
    name: Ecommerce
    href: Ecommerce.html
  - name: .
  - uid: Ecommerce.UnitTests
    name: UnitTests
    href: Ecommerce.UnitTests.html
  - name: .
  - uid: Ecommerce.UnitTests.PersistenceTests
    name: PersistenceTests
    href: Ecommerce.UnitTests.PersistenceTests.html
  spec.vb:
  - uid: Ecommerce
    name: Ecommerce
    href: Ecommerce.html
  - name: .
  - uid: Ecommerce.UnitTests
    name: UnitTests
    href: Ecommerce.UnitTests.html
  - name: .
  - uid: Ecommerce.UnitTests.PersistenceTests
    name: PersistenceTests
    href: Ecommerce.UnitTests.PersistenceTests.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.Setup*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.Setup
  href: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ProductAsyncRepositoryTests_Setup
  name: Setup
  nameWithType: ProductAsyncRepositoryTests.Setup
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.Setup
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.TearDown*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.TearDown
  href: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ProductAsyncRepositoryTests_TearDown
  name: TearDown
  nameWithType: ProductAsyncRepositoryTests.TearDown
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.TearDown
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenProductExists_ReturnsProduct*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenProductExists_ReturnsProduct
  href: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ProductAsyncRepositoryTests_GetByIdAsync_WhenProductExists_ReturnsProduct
  name: GetByIdAsync_WhenProductExists_ReturnsProduct
  nameWithType: ProductAsyncRepositoryTests.GetByIdAsync_WhenProductExists_ReturnsProduct
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenProductExists_ReturnsProduct
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenProductDoesNotExist_ReturnsNull*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenProductDoesNotExist_ReturnsNull
  href: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ProductAsyncRepositoryTests_GetByIdAsync_WhenProductDoesNotExist_ReturnsNull
  name: GetByIdAsync_WhenProductDoesNotExist_ReturnsNull
  nameWithType: ProductAsyncRepositoryTests.GetByIdAsync_WhenProductDoesNotExist_ReturnsNull
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenProductDoesNotExist_ReturnsNull
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenExceptionThrown_ReturnsNull*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenExceptionThrown_ReturnsNull
  href: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ProductAsyncRepositoryTests_GetByIdAsync_WhenExceptionThrown_ReturnsNull
  name: GetByIdAsync_WhenExceptionThrown_ReturnsNull
  nameWithType: ProductAsyncRepositoryTests.GetByIdAsync_WhenExceptionThrown_ReturnsNull
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.GetByIdAsync_WhenExceptionThrown_ReturnsNull
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WithNewProduct_ReturnsIdOfNewProduct*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WithNewProduct_ReturnsIdOfNewProduct
  href: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ProductAsyncRepositoryTests_AddAsync_WithNewProduct_ReturnsIdOfNewProduct
  name: AddAsync_WithNewProduct_ReturnsIdOfNewProduct
  nameWithType: ProductAsyncRepositoryTests.AddAsync_WithNewProduct_ReturnsIdOfNewProduct
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WithNewProduct_ReturnsIdOfNewProduct
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WithExistingProduct_ReturnsMinusOne*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WithExistingProduct_ReturnsMinusOne
  href: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ProductAsyncRepositoryTests_AddAsync_WithExistingProduct_ReturnsMinusOne
  name: AddAsync_WithExistingProduct_ReturnsMinusOne
  nameWithType: ProductAsyncRepositoryTests.AddAsync_WithExistingProduct_ReturnsMinusOne
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WithExistingProduct_ReturnsMinusOne
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WhenExceptionThrown_ReturnsMinusOne*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WhenExceptionThrown_ReturnsMinusOne
  href: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ProductAsyncRepositoryTests_AddAsync_WhenExceptionThrown_ReturnsMinusOne
  name: AddAsync_WhenExceptionThrown_ReturnsMinusOne
  nameWithType: ProductAsyncRepositoryTests.AddAsync_WhenExceptionThrown_ReturnsMinusOne
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.AddAsync_WhenExceptionThrown_ReturnsMinusOne
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenProductExists_ReturnsTrue*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenProductExists_ReturnsTrue
  href: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ProductAsyncRepositoryTests_UpdateAsync_WhenProductExists_ReturnsTrue
  name: UpdateAsync_WhenProductExists_ReturnsTrue
  nameWithType: ProductAsyncRepositoryTests.UpdateAsync_WhenProductExists_ReturnsTrue
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenProductExists_ReturnsTrue
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenProductDoesNotExist_ReturnsFalse*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenProductDoesNotExist_ReturnsFalse
  href: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ProductAsyncRepositoryTests_UpdateAsync_WhenProductDoesNotExist_ReturnsFalse
  name: UpdateAsync_WhenProductDoesNotExist_ReturnsFalse
  nameWithType: ProductAsyncRepositoryTests.UpdateAsync_WhenProductDoesNotExist_ReturnsFalse
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenProductDoesNotExist_ReturnsFalse
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenExceptionThrown_ReturnsFalse*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenExceptionThrown_ReturnsFalse
  href: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ProductAsyncRepositoryTests_UpdateAsync_WhenExceptionThrown_ReturnsFalse
  name: UpdateAsync_WhenExceptionThrown_ReturnsFalse
  nameWithType: ProductAsyncRepositoryTests.UpdateAsync_WhenExceptionThrown_ReturnsFalse
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.UpdateAsync_WhenExceptionThrown_ReturnsFalse
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenProductExists_ReturnsTrue*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenProductExists_ReturnsTrue
  href: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ProductAsyncRepositoryTests_DeleteAsync_WhenProductExists_ReturnsTrue
  name: DeleteAsync_WhenProductExists_ReturnsTrue
  nameWithType: ProductAsyncRepositoryTests.DeleteAsync_WhenProductExists_ReturnsTrue
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenProductExists_ReturnsTrue
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenProductDoesNotExist_ReturnsFalse*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenProductDoesNotExist_ReturnsFalse
  href: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ProductAsyncRepositoryTests_DeleteAsync_WhenProductDoesNotExist_ReturnsFalse
  name: DeleteAsync_WhenProductDoesNotExist_ReturnsFalse
  nameWithType: ProductAsyncRepositoryTests.DeleteAsync_WhenProductDoesNotExist_ReturnsFalse
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenProductDoesNotExist_ReturnsFalse
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenExceptionThrown_ReturnsFalse*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenExceptionThrown_ReturnsFalse
  href: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ProductAsyncRepositoryTests_DeleteAsync_WhenExceptionThrown_ReturnsFalse
  name: DeleteAsync_WhenExceptionThrown_ReturnsFalse
  nameWithType: ProductAsyncRepositoryTests.DeleteAsync_WhenExceptionThrown_ReturnsFalse
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.DeleteAsync_WhenExceptionThrown_ReturnsFalse
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenProductsExist_ReturnsProducts*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenProductsExist_ReturnsProducts
  href: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ProductAsyncRepositoryTests_ListAllAsync_WhenProductsExist_ReturnsProducts
  name: ListAllAsync_WhenProductsExist_ReturnsProducts
  nameWithType: ProductAsyncRepositoryTests.ListAllAsync_WhenProductsExist_ReturnsProducts
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenProductsExist_ReturnsProducts
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenNoProductsExist_ReturnsEmptyList*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenNoProductsExist_ReturnsEmptyList
  href: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ProductAsyncRepositoryTests_ListAllAsync_WhenNoProductsExist_ReturnsEmptyList
  name: ListAllAsync_WhenNoProductsExist_ReturnsEmptyList
  nameWithType: ProductAsyncRepositoryTests.ListAllAsync_WhenNoProductsExist_ReturnsEmptyList
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenNoProductsExist_ReturnsEmptyList
- uid: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenExceptionThrown_ReturnsEmptyList*
  commentId: Overload:Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenExceptionThrown_ReturnsEmptyList
  href: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.html#Ecommerce_UnitTests_PersistenceTests_ProductAsyncRepositoryTests_ListAllAsync_WhenExceptionThrown_ReturnsEmptyList
  name: ListAllAsync_WhenExceptionThrown_ReturnsEmptyList
  nameWithType: ProductAsyncRepositoryTests.ListAllAsync_WhenExceptionThrown_ReturnsEmptyList
  fullName: Ecommerce.UnitTests.PersistenceTests.ProductAsyncRepositoryTests.ListAllAsync_WhenExceptionThrown_ReturnsEmptyList
